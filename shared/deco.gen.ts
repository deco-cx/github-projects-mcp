// Generated types - do not edit manually

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type String = string;
export type String_1 = "user" | "assistant" | "system";
export type String_2 = string;
export type String_3 = string;
/**
 * The name of the attachment, usually the file name
 */
export type String_4 = string;
/**
 * Media type of the attachment
 */
export type String_5 = string;
/**
 * URL of the attachment (hosted file or Data URL)
 */
export type String_6 = string;
/**
 * Additional attachments to be sent along with the message
 */
export type Array_1 = Object_1[];
/**
 * Array of messages for the conversation
 */
export type Array = Object[];
/**
 * Skip transaction creation
 */
export type Boolean = boolean;
/**
 * Model ID to use for generation (defaults to workspace default)
 */
export type String_7 = string;
/**
 * Maximum number of tokens to generate
 */
export type Number = number;
/**
 * Temperature for the generation
 */
export type Number_1 = number;
export type String_8 = string;
export type Array_2 = String_8[];

export interface AI_GENERATEInput {
  messages: Array;
  skipTransaction?: Boolean;
  model?: String_7;
  maxTokens?: Number;
  temperature?: Number_1;
  tools?: Object_2;
}
export interface Object {
  id?: String;
  role: String_1;
  content: String_2;
  createdAt?: String_3;
  experimental_attachments?: Array_1;
}
export interface Object_1 {
  name?: String_4;
  contentType?: String_5;
  url: String_6;
}
/**
 * Tools available for the generation
 */
export interface Object_2 {
  [k: string]: Array_2;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * The generated text response
 */
export type String_9 = string;
/**
 * Number of tokens in the prompt
 */
export type Number_2 = number;
/**
 * Number of tokens in the completion
 */
export type Number_3 = number;
/**
 * Total number of tokens used
 */
export type Number_4 = number;
/**
 * Transaction ID
 */
export type String_10 = string;
/**
 * Reason why generation finished
 */
export type String_11 = string;

export interface AI_GENERATEOutput {
  text: String_9;
  usage: Object_3;
  finishReason?: String_11;
}
/**
 * Token usage information
 */
export interface Object_3 {
  promptTokens: Number_2;
  completionTokens: Number_3;
  totalTokens: Number_4;
  transactionId?: String_10;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type String_12 = string;
export type String_13 = "user" | "assistant" | "system";
export type String_14 = string;
export type String_15 = string;
/**
 * The name of the attachment, usually the file name
 */
export type String_16 = string;
/**
 * Media type of the attachment
 */
export type String_17 = string;
/**
 * URL of the attachment (hosted file or Data URL)
 */
export type String_18 = string;
/**
 * Additional attachments to be sent along with the message
 */
export type Array_4 = Object_5[];
/**
 * Array of messages for the conversation
 */
export type Array_3 = Object_4[];
/**
 * Skip transaction creation
 */
export type Boolean_1 = boolean;
/**
 * Model ID to use for generation (defaults to workspace default)
 */
export type String_19 = string;
/**
 * Maximum number of tokens to generate
 */
export type Number_5 = number;
/**
 * Temperature for the generation
 */
export type Number_6 = number;
export type String_20 = string;
export type Array_5 = String_20[];

export interface AI_GENERATE_OBJECTInput {
  messages: Array_3;
  schema: Object_6;
  skipTransaction?: Boolean_1;
  model?: String_19;
  maxTokens?: Number_5;
  temperature?: Number_6;
  tools?: Object_7;
}
export interface Object_4 {
  id?: String_12;
  role: String_13;
  content: String_14;
  createdAt?: String_15;
  experimental_attachments?: Array_4;
}
export interface Object_5 {
  name?: String_16;
  contentType?: String_17;
  url: String_18;
}
/**
 * JSON Schema that defines the structure of the object to generate
 */
export interface Object_6 {
  [k: string]: unknown;
}
/**
 * Tools available for the generation
 */
export interface Object_7 {
  [k: string]: Array_5;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * Number of tokens in the prompt
 */
export type Number_7 = number;
/**
 * Number of tokens in the completion
 */
export type Number_8 = number;
/**
 * Total number of tokens used
 */
export type Number_9 = number;
/**
 * Transaction ID
 */
export type String_21 = string;
/**
 * Reason why generation finished
 */
export type String_22 = string;

export interface AI_GENERATE_OBJECTOutput {
  /**
   * The generated object according to the provided schema
   */
  object?: {
    [k: string]: unknown;
  };
  usage: Object_8;
  finishReason?: String_22;
}
/**
 * Token usage information
 */
export interface Object_8 {
  promptTokens: Number_7;
  completionTokens: Number_8;
  totalTokens: Number_9;
  transactionId?: String_21;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * If true, the query will be run against the legacy database
 */
export type Boolean_2 = boolean;

export interface DATABASES_GET_METAInput {
  _legacy?: Boolean_2;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type Number_10 = number;

export interface DATABASES_GET_METAOutput {
  bytes?: Number_10;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * If true, only shows what would be migrated without executing
 */
export type Boolean_3 = boolean;
export type String_23 = string;
/**
 * Specific tables to migrate. If not provided, all tables will be migrated
 */
export type Array_6 = String_23[];
/**
 * Number of rows to migrate per batch
 */
export type Number_11 = number;

export interface DATABASES_MIGRATEInput {
  dryRun?: Boolean_3;
  tables?: Array_6;
  batchSize?: Number_11;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type Boolean_4 = boolean;
export type String_24 = string;
export type Number_12 = number;
export type String_25 = "success" | "error" | "skipped";
export type String_26 = string;
export type Array_7 = Object_9[];
export type Number_13 = number;
export type Number_14 = number;

export interface DATABASES_MIGRATEOutput {
  success: Boolean_4;
  migratedTables: Array_7;
  totalRowsMigrated: Number_13;
  executionTimeMs: Number_14;
}
export interface Object_9 {
  tableName: String_24;
  rowCount: Number_12;
  status: String_25;
  error?: String_26;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * The date to recover to
 */
export type String_27 = string;
/**
 * If true, the query will be run against the legacy database
 */
export type Boolean_5 = boolean;

export interface DATABASES_RECOVERYInput {
  date: String_27;
  _legacy?: Boolean_5;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type Boolean_6 = boolean;

export interface DATABASES_RECOVERYOutput {
  success: Boolean_6;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * The SQL query to run
 */
export type String_28 = string;
/**
 * The parameters to pass to the SQL query
 */
export type Array_8 = unknown[];
/**
 * If true, the query will be run against the legacy database
 */
export type Boolean_7 = boolean;

export interface DATABASES_RUN_SQLInput {
  sql: String_28;
  params?: Array_8;
  _legacy?: Boolean_7;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type Boolean_8 = boolean;
export type Number_15 = number;
export type Number_16 = number;
export type Number_17 = number;
export type Number_18 = number;
export type Number_19 = number;
export type Boolean_9 = boolean;
export type String_29 = "WNAM" | "ENAM" | "WEUR" | "EEUR" | "APAC" | "OC";
export type Number_20 = number;
export type Number_21 = number;
export type Array_10 = unknown[];
export type Boolean_10 = boolean;
export type Array_9 = Object_10[];

export interface DATABASES_RUN_SQLOutput {
  result: Array_9;
}
export interface Object_10 {
  meta?: Object_11;
  results?: Array_10;
  success?: Boolean_10;
}
export interface Object_11 {
  changed_db?: Boolean_8;
  changes?: Number_15;
  duration?: Number_16;
  last_row_id?: Number_17;
  rows_read?: Number_18;
  rows_written?: Number_19;
  served_by_primary?: Boolean_9;
  served_by_region?: String_29;
  size_after?: Number_20;
  timings?: Object_12;
}
export interface Object_12 {
  sql_duration_ms?: Number_21;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export interface DECO_CHAT_VIEWS_LISTInput {}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type String_30 = string;
export type String_31 = string;
export type String_32 = string;
export type String_33 = string;
export type String_34 = string;
export type String_35 = string;
export type String_36 = string;
export type String_37 = string;
export type String_38 = string;
export type Array_12 = String_38[];
export type String_39 = string;
export type String_40 = "none" | "open" | "autoPin";
export type Array_11 = Object_13[];

export interface DECO_CHAT_VIEWS_LISTOutput {
  views: Array_11;
}
export interface Object_13 {
  id?: String_30;
  name?: String_31;
  title: String_32;
  description?: String_33;
  icon: String_34;
  url?: String_35;
  mimeTypePattern?: String_36;
  resourceName?: String_37;
  tools?: Array_12;
  prompt?: String_39;
  installBehavior?: String_40;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * The URL to fetch content from
 */
export type String_41 = string;
/**
 * The HTTP method to use for the request
 */
export type String_42 = "GET" | "PUT" | "POST" | "DELETE" | "PATCH" | "HEAD";
export type String_43 = string;
/**
 * How to parse the response body: 'text' returns the raw text, 'json' parses and returns JSON
 */
export type String_44 = "text" | "json";
/**
 * Request timeout in milliseconds (1000-30000)
 */
export type Integer = number;

export interface HTTP_FETCHInput {
  url: String_41;
  method?: String_42;
  headers?: Object_14;
  /**
   * Optional body to send with the request
   */
  body?: {
    [k: string]: unknown;
  };
  responseType?: String_44;
  timeout?: Integer;
}
/**
 * Optional headers to include with the request
 */
export interface Object_14 {
  [k: string]: String_43;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type String_45 = string;
/**
 * The HTTP status code of the response
 */
export type Number_22 = number;
/**
 * The HTTP status text of the response
 */
export type String_46 = string;
export type String_47 = string;
/**
 * Whether the request was successful (status in 200-299 range)
 */
export type Boolean_11 = boolean;

export interface HTTP_FETCHOutput {
  /**
   * The response body (string for text, parsed object for JSON)
   */
  body?: String_45;
  status: Number_22;
  statusText: String_46;
  headers: Object_15;
  ok: Boolean_11;
}
/**
 * The response headers
 */
export interface Object_15 {
  [k: string]: String_47;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type String_48 = string;
export type String_49 = "HTTP";
export type String_50 = string;
export type String_51 = string;
export type String_52 = "SSE";
export type String_53 = string;
export type String_54 = string;
export type String_55 = string;
export type String_56 = "Websocket";
export type String_57 = string;
export type String_58 = string;
export type String_59 = "Deco";
export type String_60 = string;
export type String_61 = string;
export type String_62 = "INNATE";
export type String_63 = string;
export type String_64 = string;
export type String_65 = string;
export type Integer_1 = number;
export type String_66 = string;

export interface INTEGRATIONS_CALL_TOOLInput {
  id?: String_48;
  connection?: Object_16 | Object_17 | Object_19 | Object_20 | Object_21;
  params: Object_22;
}
export interface Object_16 {
  type: String_49;
  url: String_50;
  token?: String_51;
}
export interface Object_17 {
  type: String_52;
  url: String_53;
  token?: String_54;
  headers?: Object_18;
}
export interface Object_18 {
  [k: string]: String_55;
}
export interface Object_19 {
  type: String_56;
  url: String_57;
  token?: String_58;
}
export interface Object_20 {
  type: String_59;
  tenant: String_60;
  token?: String_61;
}
export interface Object_21 {
  type: String_62;
  name: String_63;
  workspace?: String_64;
}
export interface Object_22 {
  _meta?: Object_23;
  name: String_66;
  arguments?: Object_24;
  [k: string]: unknown;
}
export interface Object_23 {
  progressToken?: String_65 | Integer_1;
  [k: string]: unknown;
}
export interface Object_24 {
  [k: string]: unknown;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export interface INTEGRATIONS_CALL_TOOLOutput {}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type String_67 = "HTTP";
export type String_68 = string;
export type String_69 = string;
export type String_70 = "SSE";
export type String_71 = string;
export type String_72 = string;
export type String_73 = string;
export type String_74 = "Websocket";
export type String_75 = string;
export type String_76 = string;
export type String_77 = "Deco";
export type String_78 = string;
export type String_79 = string;
export type String_80 = "INNATE";
export type String_81 = string;
export type String_82 = string;
/**
 * Whether to ignore the cache when listing tools
 */
export type Boolean_12 = boolean;

export interface INTEGRATIONS_LIST_TOOLSInput {
  connection: Object_25 | Object_26 | Object_28 | Object_29 | Object_30;
  ignoreCache?: Boolean_12;
}
export interface Object_25 {
  type: String_67;
  url: String_68;
  token?: String_69;
}
export interface Object_26 {
  type: String_70;
  url: String_71;
  token?: String_72;
  headers?: Object_27;
}
export interface Object_27 {
  [k: string]: String_73;
}
export interface Object_28 {
  type: String_74;
  url: String_75;
  token?: String_76;
}
export interface Object_29 {
  type: String_77;
  tenant: String_78;
  token?: String_79;
}
export interface Object_30 {
  type: String_80;
  name: String_81;
  workspace?: String_82;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export interface INTEGRATIONS_LIST_TOOLSOutput {}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export interface MY_INVITES_LISTInput {}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type Array_13 = unknown[];

export interface MY_INVITES_LISTOutput {
  items: Array_13;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export interface PROFILES_GETInput {}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export interface PROFILES_GETOutput {}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type StringNull = String_83 | Null;
export type String_83 = string;
export type Null = null;
export type String_84 = string;
export type NumberNull = Number_23 | Null_1;
export type Number_23 = number;
export type Null_1 = null;
export type BooleanNull = Boolean_13 | Null_2;
export type Boolean_13 = boolean;
export type Null_2 = null;
export type StringNull_1 = String_85 | Null_3;
export type String_85 = string;
export type Null_3 = null;

export interface PROFILES_UPDATEInput {
  name?: StringNull;
  email?: String_84;
  deco_user_id?: NumberNull;
  is_new_user?: BooleanNull;
  phone?: StringNull_1;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export interface PROFILES_UPDATEOutput {}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type String_86 = string;
export type String_87 = string;

export interface PROJECT_ACTIVITY_REGISTERInput {
  org: String_86;
  project: String_87;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export interface PROJECT_ACTIVITY_REGISTEROutput {}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * The organization slug
 */
export type String_88 = string;
/**
 * The project slug (URL-friendly identifier)
 */
export type String_89 = string;
/**
 * The project title
 */
export type String_90 = string;
/**
 * The project description
 */
export type String_91 = string;
/**
 * The project icon URL or path
 */
export type String_92 = string;

export interface PROJECTS_CREATEInput {
  org: String_88;
  slug: String_89;
  title: String_90;
  description?: String_91;
  icon?: String_92;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type String_93 = string;
export type String_94 = string;
export type String_95 = string;
export type StringNull_2 = String_96 | Null_4;
export type String_96 = string;
export type Null_4 = null;
export type Number_24 = number;
export type String_97 = string;
export type StringNull_3 = String_98 | Null_5;
export type String_98 = string;
export type Null_5 = null;

export interface PROJECTS_CREATEOutput {
  id: String_93;
  title: String_94;
  slug: String_95;
  avatar_url: StringNull_2;
  org: Object_31;
}
export interface Object_31 {
  id: Number_24;
  slug: String_97;
  avatar_url?: StringNull_3;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type String_99 = string;

export interface PROJECTS_DELETEInput {
  projectId: String_99;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type Boolean_14 = boolean;
export type String_100 = string;

export interface PROJECTS_DELETEOutput {
  success: Boolean_14;
  error?: String_100;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type String_101 = string;

export interface PROJECTS_LISTInput {
  org: String_101;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export interface PROJECTS_LISTOutput {}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type Integer_2 = number;

export interface PROJECTS_RECENTInput {
  limit?: Integer_2;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type String_102 = string;
export type String_103 = string;
export type String_104 = string;
export type StringNull_4 = String_105 | Null_6;
export type String_105 = string;
export type Null_6 = null;
export type Number_25 = number;
export type String_106 = string;
export type StringNull_5 = String_107 | Null_7;
export type String_107 = string;
export type Null_7 = null;
export type String_108 = string;
export type Array_14 = Object_32[];

export interface PROJECTS_RECENTOutput {
  items: Array_14;
}
export interface Object_32 {
  id: String_102;
  title: String_103;
  slug: String_104;
  avatar_url: StringNull_4;
  org: Object_33;
  last_accessed_at?: String_108;
}
export interface Object_33 {
  id: Number_25;
  slug: String_106;
  avatar_url?: StringNull_5;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * The organization slug
 */
export type String_109 = string;
/**
 * The project slug
 */
export type String_110 = string;
/**
 * The new title for the project
 */
export type String_111 = string;

export interface PROJECTS_UPDATEInput {
  org: String_109;
  project: String_110;
  data: Object_34;
}
export interface Object_34 {
  title?: String_111;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type String_112 = string;
export type String_113 = string;
export type String_114 = string;
export type StringNull_6 = String_115 | Null_8;
export type String_115 = string;
export type Null_8 = null;
export type Number_26 = number;
export type String_116 = string;
export type StringNull_7 = String_117 | Null_9;
export type String_117 = string;
export type Null_9 = null;

export interface PROJECTS_UPDATEOutput {
  id: String_112;
  title: String_113;
  slug: String_114;
  avatar_url: StringNull_6;
  org: Object_35;
}
export interface Object_35 {
  id: Number_26;
  slug: String_116;
  avatar_url?: StringNull_7;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * The name of the app to get
 */
export type String_118 = string;
/**
 * The id of the app to get
 */
export type String_119 = string;

export interface REGISTRY_GET_APPInput {
  name?: String_118;
  id?: String_119;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export interface REGISTRY_GET_APPOutput {}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type String_120 = string;

export interface TEAM_INVITE_ACCEPTInput {
  id: String_120;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type Boolean_15 = boolean;
export type Number_27 = number;
export type String_121 = string;
export type String_122 = string;

export interface TEAM_INVITE_ACCEPTOutput {
  ok: Boolean_15;
  teamId: Number_27;
  teamName: String_121;
  teamSlug: String_122;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type String_123 = string;

export interface TEAM_INVITE_DELETEInput {
  id: String_123;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export interface TEAM_INVITE_DELETEOutput {}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type Number_28 = number;

export interface TEAM_MEMBER_ACTIVITY_REGISTERInput {
  teamId: Number_28;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export interface TEAM_MEMBER_ACTIVITY_REGISTEROutput {}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type Number_29 = number;
export type Boolean_16 = boolean;

export interface TEAM_MEMBERS_GETInput {
  teamId: Number_29;
  withActivity?: Boolean_16;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export interface TEAM_MEMBERS_GETOutput {}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type String_124 = string;
export type String_125 = string;
export type Number_30 = number;
export type String_126 = string;
export type Array_16 = Object_37[];
export type Array_15 = Object_36[];

export interface TEAM_MEMBERS_INVITEInput {
  teamId: String_124;
  invitees: Array_15;
}
export interface Object_36 {
  email: String_125;
  roles: Array_16;
}
export interface Object_37 {
  id: Number_30;
  name: String_126;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export interface TEAM_MEMBERS_INVITEOutput {}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type Number_31 = number;
export type Number_32 = number;

export interface TEAM_MEMBERS_REMOVEInput {
  teamId: Number_31;
  memberId: Number_32;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export interface TEAM_MEMBERS_REMOVEOutput {}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type Number_33 = number;
export type Number_34 = number;
export type Boolean_17 = boolean;

export interface TEAM_MEMBERS_UPDATEInput {
  teamId: Number_33;
  memberId: Number_34;
  data: Object_38;
}
export interface Object_38 {
  admin?: Boolean_17;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export interface TEAM_MEMBERS_UPDATEOutput {}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type Number_35 = number;
export type String_127 = string;
export type Number_36 = number;
export type String_128 = "grant" | "revoke";

export interface TEAM_MEMBERS_UPDATE_ROLEInput {
  teamId: Number_35;
  userId: String_127;
  roleId: Number_36;
  action: String_128;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export interface TEAM_MEMBERS_UPDATE_ROLEOutput {}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type String_129 = string;
export type String_130 = string;
export type String_131 = "Bug" | "Idea";
export type String_132 = string;
export type String_133 = string;
export type String_134 = string;

export interface TEAM_REPORT_ISSUE_CREATEInput {
  orgSlug?: String_129;
  projectSlug?: String_130;
  type: String_131;
  content: String_132;
  url?: String_133;
  path?: String_134;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export interface TEAM_REPORT_ISSUE_CREATEOutput {}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type Number_37 = number;
export type String_135 = string;
export type String_136 = string;
export type String_137 = string;
export type String_138 = "allow" | "deny";
export type String_139 = string;
export type Array_17 = Object_41[];
export type String_140 = string;
export type Array_18 = String_140[];
export type String_141 = string;
export type String_142 = "grant" | "revoke";
/**
 * Only send member actions for changes (diff between original and current state)
 *     Members who already have the role and remain selected: no action needed (maintains access)
 *     Members who don't have the role and remain unselected: no action needed (maintains no access)
 */
export type Array_19 = Object_42[];

export interface TEAM_ROLE_CREATEInput {
  teamId: Number_37;
  roleData: Object_39;
}
export interface Object_39 {
  name: String_135;
  description?: String_136;
  tools: Object_40;
  agents?: Array_18;
  members?: Array_19;
}
export interface Object_40 {
  [k: string]: Array_17;
}
export interface Object_41 {
  toolName: String_137;
  effect: String_138;
  policyId?: String_139;
}
export interface Object_42 {
  user_id: String_141;
  action: String_142;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export interface TEAM_ROLE_CREATEOutput {}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type Number_38 = number;
export type Number_39 = number;

export interface TEAM_ROLE_DELETEInput {
  teamId: Number_38;
  roleId: Number_39;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export interface TEAM_ROLE_DELETEOutput {}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type Number_40 = number;
export type Number_41 = number;

export interface TEAM_ROLE_GETInput {
  teamId: Number_40;
  roleId: Number_41;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export interface TEAM_ROLE_GETOutput {}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type Number_42 = number;
export type Number_43 = number;
export type String_143 = string;
export type String_144 = string;
export type String_145 = string;
export type String_146 = "allow" | "deny";
export type String_147 = string;
export type Array_20 = Object_45[];
export type String_148 = string;
export type Array_21 = String_148[];
export type String_149 = string;
export type String_150 = "grant" | "revoke";
/**
 * Only send member actions for changes (diff between original and current state)
 *     Members who already have the role and remain selected: no action needed (maintains access)
 *     Members who don't have the role and remain unselected: no action needed (maintains no access)
 */
export type Array_22 = Object_46[];

export interface TEAM_ROLE_UPDATEInput {
  teamId: Number_42;
  roleId: Number_43;
  roleData: Object_43;
}
export interface Object_43 {
  name: String_143;
  description?: String_144;
  tools: Object_44;
  agents?: Array_21;
  members?: Array_22;
}
export interface Object_44 {
  [k: string]: Array_20;
}
export interface Object_45 {
  toolName: String_145;
  effect: String_146;
  policyId?: String_147;
}
export interface Object_46 {
  user_id: String_149;
  action: String_150;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export interface TEAM_ROLE_UPDATEOutput {}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type Number_44 = number;

export interface TEAM_ROLES_LISTInput {
  teamId: Number_44;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type Array_23 = unknown[];

export interface TEAM_ROLES_LISTOutput {
  items: Array_23;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type String_151 = string;
export type String_152 = string;

export interface TEAMS_CREATEInput {
  name: String_151;
  slug?: String_152;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export interface TEAMS_CREATEOutput {}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type Number_45 = number;

export interface TEAMS_DELETEInput {
  teamId: Number_45;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type Boolean_18 = boolean;
export type String_153 = string;

export interface TEAMS_DELETEOutput {
  success: Boolean_18;
  error?: String_153;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type String_154 = string;

export interface TEAMS_GETInput {
  slug: String_154;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export interface TEAMS_GETOutput {}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type String_155 = string;

export interface TEAMS_GET_THEMEInput {
  slug: String_155;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export interface TEAMS_GET_THEMEOutput {}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export interface TEAMS_LISTInput {}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type Array_24 = unknown[];

export interface TEAMS_LISTOutput {
  items: Array_24;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * The id of the team to update
 */
export type Number_46 = number;
/**
 * Team name
 */
export type String_156 = string;
/**
 * Team URL slug
 */
export type String_157 = string;
/**
 * Main background color of the application (OKLCH/hex format)
 */
export type String_158 = string;
/**
 * Main text color on background (OKLCH/hex format)
 */
export type String_159 = string;
/**
 * Background color for cards and panels (OKLCH/hex format)
 */
export type String_160 = string;
/**
 * Text color on cards and panels (OKLCH/hex format)
 */
export type String_161 = string;
/**
 * Background color for popovers and dropdowns (OKLCH/hex format)
 */
export type String_162 = string;
/**
 * Text color in popovers and dropdowns (OKLCH/hex format)
 */
export type String_163 = string;
/**
 * Primary brand color for buttons and highlights (OKLCH/hex format)
 */
export type String_164 = string;
/**
 * Text color on primary elements (OKLCH/hex format)
 */
export type String_165 = string;
/**
 * Lighter variant of primary color (OKLCH/hex format)
 */
export type String_166 = string;
/**
 * Darker variant of primary color (OKLCH/hex format)
 */
export type String_167 = string;
/**
 * Secondary color for less prominent elements (OKLCH/hex format)
 */
export type String_168 = string;
/**
 * Text color on secondary elements (OKLCH/hex format)
 */
export type String_169 = string;
/**
 * Muted background color for subtle elements (OKLCH/hex format)
 */
export type String_170 = string;
/**
 * Muted text color for secondary text (OKLCH/hex format)
 */
export type String_171 = string;
/**
 * Accent color for interactive elements (OKLCH/hex format)
 */
export type String_172 = string;
/**
 * Text color on accent elements (OKLCH/hex format)
 */
export type String_173 = string;
/**
 * Color for destructive actions and errors (OKLCH/hex format)
 */
export type String_174 = string;
/**
 * Text color on destructive elements (OKLCH/hex format)
 */
export type String_175 = string;
/**
 * Color for success states and positive actions (OKLCH/hex format)
 */
export type String_176 = string;
/**
 * Text color on success elements (OKLCH/hex format)
 */
export type String_177 = string;
/**
 * Color for warning states and caution indicators (OKLCH/hex format)
 */
export type String_178 = string;
/**
 * Text color on warning elements (OKLCH/hex format)
 */
export type String_179 = string;
/**
 * Border color for elements (OKLCH/hex format)
 */
export type String_180 = string;
/**
 * Border color for input fields (OKLCH/hex format)
 */
export type String_181 = string;
/**
 * Background color for sidebar navigation (OKLCH/hex format)
 */
export type String_182 = string;
/**
 * Text color in sidebar navigation (OKLCH/hex format)
 */
export type String_183 = string;
/**
 * Accent background color for sidebar elements (OKLCH/hex format)
 */
export type String_184 = string;
/**
 * Text color on sidebar accent elements (OKLCH/hex format)
 */
export type String_185 = string;
/**
 * Border color for sidebar elements (OKLCH/hex format)
 */
export type String_186 = string;
/**
 * Focus ring color for sidebar elements (OKLCH/hex format)
 */
export type String_187 = string;
/**
 * Background color for splash screen animation (OKLCH/hex format)
 */
export type String_188 = string;
/**
 * URL to team avatar/logo image
 */
export type String_189 = string;
/**
 * Use a Google Fonts font
 */
export type String_190 = "Google Fonts";
/**
 * Name of the Google Font (e.g., 'Inter', 'Roboto', 'Open Sans')
 */
export type String_191 = string;
/**
 * Use a custom uploaded font
 */
export type String_192 = "Custom";
/**
 * Display name for the custom font
 */
export type String_193 = string;
/**
 * URL to the custom font file
 */
export type String_194 = string;

export interface TEAMS_UPDATEInput {
  id: Number_46;
  data: Object_47;
}
export interface Object_47 {
  name?: String_156;
  slug?: String_157;
  theme?: Object_48;
}
/**
 * Theme configuration for the workspace. Only include the properties you want to change - existing values will be preserved.
 */
export interface Object_48 {
  variables?: Object_49;
  picture?: String_189;
  /**
   * Font configuration for the workspace
   */
  font?: Object_50 | Object_51;
}
/**
 * CSS custom properties for theme colors. Use OKLCH format (preferred) or hex colors.
 */
export interface Object_49 {
  "--background"?: String_158;
  "--foreground"?: String_159;
  "--card"?: String_160;
  "--card-foreground"?: String_161;
  "--popover"?: String_162;
  "--popover-foreground"?: String_163;
  "--primary"?: String_164;
  "--primary-foreground"?: String_165;
  "--primary-light"?: String_166;
  "--primary-dark"?: String_167;
  "--secondary"?: String_168;
  "--secondary-foreground"?: String_169;
  "--muted"?: String_170;
  "--muted-foreground"?: String_171;
  "--accent"?: String_172;
  "--accent-foreground"?: String_173;
  "--destructive"?: String_174;
  "--destructive-foreground"?: String_175;
  "--success"?: String_176;
  "--success-foreground"?: String_177;
  "--warning"?: String_178;
  "--warning-foreground"?: String_179;
  "--border"?: String_180;
  "--input"?: String_181;
  "--sidebar"?: String_182;
  "--sidebar-foreground"?: String_183;
  "--sidebar-accent"?: String_184;
  "--sidebar-accent-foreground"?: String_185;
  "--sidebar-border"?: String_186;
  "--sidebar-ring"?: String_187;
  "--splash"?: String_188;
}
export interface Object_50 {
  type: String_190;
  name: String_191;
}
export interface Object_51 {
  type: String_192;
  name: String_193;
  url: String_194;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export interface TEAMS_UPDATEOutput {}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * Unique identifier for the agent
 */
export type String_195 = string;
/**
 * Human-readable name of the agent
 */
export type String_196 = string;
/**
 * URL to the agent's avatar image
 */
export type String_197 = string;
/**
 * System prompt/instructions for the agent
 */
export type String_198 = string;
/**
 * Brief description of the agent's purpose or capabilities
 */
export type String_199 = string;
export type String_200 = string;
/**
 * Tool names for a given integrationId. Add an empty array for enabling all tools of this integration. This should prevent bugs
 */
export type Array_25 = String_200[];
/**
 * Maximum number of steps the agent can take, defaults to 7
 */
export type Number_47 = number;
/**
 * Maximum number of tokens the agent can use, defaults to 8192
 */
export type NumberNull_1 = Number_48 | Null_10;
export type Number_48 = number;
export type Null_10 = null;
/**
 * Model to use for the agent - either a well-known model ID or UUID for BYOK models
 */
export type String_201 = string;
/**
 * A memory discriminator for the tenant
 */
export type String_202 = string;
/**
 * The number of messages to keep in memory
 */
export type Number_49 = number;
/**
 * Whether to use semantic recall
 */
export type Boolean_19 = boolean;
/**
 * Whether to use working memory
 */
export type Boolean_20 = boolean;
/**
 * The template or JSON schema string to use for working memory
 */
export type String_203 = string;
/**
 * URL for the view
 */
export type String_204 = string;
/**
 * Name of the view
 */
export type String_205 = string;
/**
 * Views where the agent can be used
 */
export type Array_26 = Object_55[];
/**
 * Visibility of the agent
 */
export type String_206 = "PUBLIC" | "WORKSPACE" | "PRIVATE";
export type String_207 = string;
export type Null_11 = null;
export type Number_50 = number;
export type Null_12 = null;

export interface AGENTS_CREATEInput {
  id?: String_195;
  name?: String_196;
  avatar?: String_197;
  instructions?: String_198;
  description?: String_199;
  tools_set?: Object_52;
  max_steps?: Number_47;
  max_tokens?: NumberNull_1;
  model?: String_201;
  memory?: Object_53;
  views?: Array_26;
  visibility?: String_206;
  /**
   * Access control by role
   */
  access?:
    | (
        | {
            [k: string]: unknown;
          }
        | String_207
      )
    | Null_11;
  /**
   * Temperature of the LLM. Must be between 0 and 1.
   */
  temperature?:
    | (
        | {
            [k: string]: unknown;
          }
        | Number_50
      )
    | Null_12;
}
/**
 * Tools available to the agent
 */
export interface Object_52 {
  [k: string]: Array_25;
}
/**
 * Memory to use for the agent
 */
export interface Object_53 {
  discriminator?: String_202;
  last_messages?: Number_49;
  semantic_recall?: Boolean_19;
  working_memory?: Object_54;
}
/**
 * Working memory to use for the agent
 */
export interface Object_54 {
  enabled?: Boolean_20;
  template?: String_203;
}
export interface Object_55 {
  url: String_204;
  name: String_205;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * Unique identifier for the agent
 */
export type String_208 = string;
/**
 * Human-readable name of the agent
 */
export type String_209 = string;
/**
 * URL to the agent's avatar image
 */
export type String_210 = string;
/**
 * System prompt/instructions for the agent
 */
export type String_211 = string;
/**
 * Brief description of the agent's purpose or capabilities
 */
export type String_212 = string;
export type String_213 = string;
/**
 * Tool names for a given integrationId. Add an empty array for enabling all tools of this integration. This should prevent bugs
 */
export type Array_27 = String_213[];
/**
 * Maximum number of steps the agent can take, defaults to 7
 */
export type Number_51 = number;
/**
 * Maximum number of tokens the agent can use, defaults to 8192
 */
export type NumberNull_2 = Number_52 | Null_13;
export type Number_52 = number;
export type Null_13 = null;
/**
 * Model to use for the agent - either a well-known model ID or UUID for BYOK models
 */
export type String_214 = string;
/**
 * A memory discriminator for the tenant
 */
export type String_215 = string;
/**
 * The number of messages to keep in memory
 */
export type Number_53 = number;
/**
 * Whether to use semantic recall
 */
export type Boolean_21 = boolean;
/**
 * Whether to use working memory
 */
export type Boolean_22 = boolean;
/**
 * The template or JSON schema string to use for working memory
 */
export type String_216 = string;
/**
 * URL for the view
 */
export type String_217 = string;
/**
 * Name of the view
 */
export type String_218 = string;
/**
 * Views where the agent can be used
 */
export type Array_28 = Object_59[];
/**
 * Visibility of the agent
 */
export type String_219 = "PUBLIC" | "WORKSPACE" | "PRIVATE";
export type String_220 = string;
export type Null_14 = null;
export type Number_54 = number;
export type Null_15 = null;

export interface AGENTS_CREATEOutput {
  id: String_208;
  name: String_209;
  avatar: String_210;
  instructions: String_211;
  description?: String_212;
  tools_set: Object_56;
  max_steps?: Number_51;
  max_tokens?: NumberNull_2;
  model?: String_214;
  memory?: Object_57;
  views: Array_28;
  visibility: String_219;
  /**
   * Access control by role
   */
  access?:
    | (
        | {
            [k: string]: unknown;
          }
        | String_220
      )
    | Null_14;
  /**
   * Temperature of the LLM. Must be between 0 and 1.
   */
  temperature?:
    | (
        | {
            [k: string]: unknown;
          }
        | Number_54
      )
    | Null_15;
}
/**
 * Tools available to the agent
 */
export interface Object_56 {
  [k: string]: Array_27;
}
/**
 * Memory to use for the agent
 */
export interface Object_57 {
  discriminator?: String_215;
  last_messages?: Number_53;
  semantic_recall?: Boolean_21;
  working_memory?: Object_58;
}
/**
 * Working memory to use for the agent
 */
export interface Object_58 {
  enabled?: Boolean_22;
  template?: String_216;
}
export interface Object_59 {
  url: String_217;
  name: String_218;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type String_221 = string;

export interface AGENTS_DELETEInput {
  id: String_221;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type Boolean_23 = boolean;

export interface AGENTS_DELETEOutput {
  deleted: Boolean_23;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type String_222 = string;

export interface AGENTS_GETInput {
  id: String_222;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * Unique identifier for the agent
 */
export type String_223 = string;
/**
 * Human-readable name of the agent
 */
export type String_224 = string;
/**
 * URL to the agent's avatar image
 */
export type String_225 = string;
/**
 * System prompt/instructions for the agent
 */
export type String_226 = string;
/**
 * Brief description of the agent's purpose or capabilities
 */
export type String_227 = string;
export type String_228 = string;
/**
 * Tool names for a given integrationId. Add an empty array for enabling all tools of this integration. This should prevent bugs
 */
export type Array_29 = String_228[];
/**
 * Maximum number of steps the agent can take, defaults to 7
 */
export type Number_55 = number;
/**
 * Maximum number of tokens the agent can use, defaults to 8192
 */
export type NumberNull_3 = Number_56 | Null_16;
export type Number_56 = number;
export type Null_16 = null;
/**
 * Model to use for the agent - either a well-known model ID or UUID for BYOK models
 */
export type String_229 = string;
/**
 * A memory discriminator for the tenant
 */
export type String_230 = string;
/**
 * The number of messages to keep in memory
 */
export type Number_57 = number;
/**
 * Whether to use semantic recall
 */
export type Boolean_24 = boolean;
/**
 * Whether to use working memory
 */
export type Boolean_25 = boolean;
/**
 * The template or JSON schema string to use for working memory
 */
export type String_231 = string;
/**
 * URL for the view
 */
export type String_232 = string;
/**
 * Name of the view
 */
export type String_233 = string;
/**
 * Views where the agent can be used
 */
export type Array_30 = Object_63[];
/**
 * Visibility of the agent
 */
export type String_234 = "PUBLIC" | "WORKSPACE" | "PRIVATE";
export type String_235 = string;
export type Null_17 = null;
export type Number_58 = number;
export type Null_18 = null;

export interface AGENTS_GETOutput {
  id: String_223;
  name: String_224;
  avatar: String_225;
  instructions: String_226;
  description?: String_227;
  tools_set: Object_60;
  max_steps?: Number_55;
  max_tokens?: NumberNull_3;
  model?: String_229;
  memory?: Object_61;
  views: Array_30;
  visibility: String_234;
  /**
   * Access control by role
   */
  access?:
    | (
        | {
            [k: string]: unknown;
          }
        | String_235
      )
    | Null_17;
  /**
   * Temperature of the LLM. Must be between 0 and 1.
   */
  temperature?:
    | (
        | {
            [k: string]: unknown;
          }
        | Number_58
      )
    | Null_18;
}
/**
 * Tools available to the agent
 */
export interface Object_60 {
  [k: string]: Array_29;
}
/**
 * Memory to use for the agent
 */
export interface Object_61 {
  discriminator?: String_230;
  last_messages?: Number_57;
  semantic_recall?: Boolean_24;
  working_memory?: Object_62;
}
/**
 * Working memory to use for the agent
 */
export interface Object_62 {
  enabled?: Boolean_25;
  template?: String_231;
}
export interface Object_63 {
  url: String_232;
  name: String_233;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export interface AGENTS_LISTInput {}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * Unique identifier for the agent
 */
export type String_236 = string;
/**
 * Human-readable name of the agent
 */
export type String_237 = string;
/**
 * URL to the agent's avatar image
 */
export type String_238 = string;
/**
 * System prompt/instructions for the agent
 */
export type String_239 = string;
/**
 * Brief description of the agent's purpose or capabilities
 */
export type String_240 = string;
export type String_241 = string;
/**
 * Tool names for a given integrationId. Add an empty array for enabling all tools of this integration. This should prevent bugs
 */
export type Array_32 = String_241[];
/**
 * Maximum number of steps the agent can take, defaults to 7
 */
export type Number_59 = number;
/**
 * Maximum number of tokens the agent can use, defaults to 8192
 */
export type NumberNull_4 = Number_60 | Null_19;
export type Number_60 = number;
export type Null_19 = null;
/**
 * Model to use for the agent - either a well-known model ID or UUID for BYOK models
 */
export type String_242 = string;
/**
 * A memory discriminator for the tenant
 */
export type String_243 = string;
/**
 * The number of messages to keep in memory
 */
export type Number_61 = number;
/**
 * Whether to use semantic recall
 */
export type Boolean_26 = boolean;
/**
 * Whether to use working memory
 */
export type Boolean_27 = boolean;
/**
 * The template or JSON schema string to use for working memory
 */
export type String_244 = string;
/**
 * URL for the view
 */
export type String_245 = string;
/**
 * Name of the view
 */
export type String_246 = string;
/**
 * Views where the agent can be used
 */
export type Array_33 = Object_68[];
/**
 * Visibility of the agent
 */
export type String_247 = "PUBLIC" | "WORKSPACE" | "PRIVATE";
export type String_248 = string;
export type Null_20 = null;
export type Number_62 = number;
export type Null_21 = null;
export type StringNull_8 = String_249 | Null_22;
export type String_249 = string;
export type Null_22 = null;
export type StringNull_9 = String_250 | Null_23;
export type String_250 = string;
export type Null_23 = null;
export type Array_31 = Object_64[];

export interface AGENTS_LISTOutput {
  items: Array_31;
}
export interface Object_64 {
  id: String_236;
  name: String_237;
  avatar: String_238;
  instructions: String_239;
  description?: String_240;
  tools_set: Object_65;
  max_steps?: Number_59;
  max_tokens?: NumberNull_4;
  model?: String_242;
  memory?: Object_66;
  views: Array_33;
  visibility: String_247;
  /**
   * Access control by role
   */
  access?:
    | (
        | {
            [k: string]: unknown;
          }
        | String_248
      )
    | Null_20;
  /**
   * Temperature of the LLM. Must be between 0 and 1.
   */
  temperature?:
    | (
        | {
            [k: string]: unknown;
          }
        | Number_62
      )
    | Null_21;
  lastAccess?: StringNull_8;
  lastAccessor?: StringNull_9;
}
/**
 * Tools available to the agent
 */
export interface Object_65 {
  [k: string]: Array_32;
}
/**
 * Memory to use for the agent
 */
export interface Object_66 {
  discriminator?: String_243;
  last_messages?: Number_61;
  semantic_recall?: Boolean_26;
  working_memory?: Object_67;
}
/**
 * Working memory to use for the agent
 */
export interface Object_67 {
  enabled?: Boolean_27;
  template?: String_244;
}
export interface Object_68 {
  url: String_245;
  name: String_246;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type String_251 = string;
/**
 * Unique identifier for the agent
 */
export type String_252 = string;
/**
 * Human-readable name of the agent
 */
export type String_253 = string;
/**
 * URL to the agent's avatar image
 */
export type String_254 = string;
/**
 * System prompt/instructions for the agent
 */
export type String_255 = string;
/**
 * Brief description of the agent's purpose or capabilities
 */
export type String_256 = string;
export type String_257 = string;
/**
 * Tool names for a given integrationId. Add an empty array for enabling all tools of this integration. This should prevent bugs
 */
export type Array_34 = String_257[];
/**
 * Maximum number of steps the agent can take, defaults to 7
 */
export type Number_63 = number;
/**
 * Maximum number of tokens the agent can use, defaults to 8192
 */
export type NumberNull_5 = Number_64 | Null_24;
export type Number_64 = number;
export type Null_24 = null;
/**
 * Model to use for the agent - either a well-known model ID or UUID for BYOK models
 */
export type String_258 = string;
/**
 * A memory discriminator for the tenant
 */
export type String_259 = string;
/**
 * The number of messages to keep in memory
 */
export type Number_65 = number;
/**
 * Whether to use semantic recall
 */
export type Boolean_28 = boolean;
/**
 * Whether to use working memory
 */
export type Boolean_29 = boolean;
/**
 * The template or JSON schema string to use for working memory
 */
export type String_260 = string;
/**
 * URL for the view
 */
export type String_261 = string;
/**
 * Name of the view
 */
export type String_262 = string;
/**
 * Views where the agent can be used
 */
export type Array_35 = Object_73[];
/**
 * Visibility of the agent
 */
export type String_263 = "PUBLIC" | "WORKSPACE" | "PRIVATE";
export type String_264 = string;
export type Null_25 = null;
export type Number_66 = number;
export type Null_26 = null;

export interface AGENTS_UPDATEInput {
  id: String_251;
  agent: Object_69;
}
export interface Object_69 {
  id?: String_252;
  name?: String_253;
  avatar?: String_254;
  instructions?: String_255;
  description?: String_256;
  tools_set?: Object_70;
  max_steps?: Number_63;
  max_tokens?: NumberNull_5;
  model?: String_258;
  memory?: Object_71;
  views?: Array_35;
  visibility?: String_263;
  /**
   * Access control by role
   */
  access?:
    | (
        | {
            [k: string]: unknown;
          }
        | String_264
      )
    | Null_25;
  /**
   * Temperature of the LLM. Must be between 0 and 1.
   */
  temperature?:
    | (
        | {
            [k: string]: unknown;
          }
        | Number_66
      )
    | Null_26;
}
/**
 * Tools available to the agent
 */
export interface Object_70 {
  [k: string]: Array_34;
}
/**
 * Memory to use for the agent
 */
export interface Object_71 {
  discriminator?: String_259;
  last_messages?: Number_65;
  semantic_recall?: Boolean_28;
  working_memory?: Object_72;
}
/**
 * Working memory to use for the agent
 */
export interface Object_72 {
  enabled?: Boolean_29;
  template?: String_260;
}
export interface Object_73 {
  url: String_261;
  name: String_262;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * Unique identifier for the agent
 */
export type String_265 = string;
/**
 * Human-readable name of the agent
 */
export type String_266 = string;
/**
 * URL to the agent's avatar image
 */
export type String_267 = string;
/**
 * System prompt/instructions for the agent
 */
export type String_268 = string;
/**
 * Brief description of the agent's purpose or capabilities
 */
export type String_269 = string;
export type String_270 = string;
/**
 * Tool names for a given integrationId. Add an empty array for enabling all tools of this integration. This should prevent bugs
 */
export type Array_36 = String_270[];
/**
 * Maximum number of steps the agent can take, defaults to 7
 */
export type Number_67 = number;
/**
 * Maximum number of tokens the agent can use, defaults to 8192
 */
export type NumberNull_6 = Number_68 | Null_27;
export type Number_68 = number;
export type Null_27 = null;
/**
 * Model to use for the agent - either a well-known model ID or UUID for BYOK models
 */
export type String_271 = string;
/**
 * A memory discriminator for the tenant
 */
export type String_272 = string;
/**
 * The number of messages to keep in memory
 */
export type Number_69 = number;
/**
 * Whether to use semantic recall
 */
export type Boolean_30 = boolean;
/**
 * Whether to use working memory
 */
export type Boolean_31 = boolean;
/**
 * The template or JSON schema string to use for working memory
 */
export type String_273 = string;
/**
 * URL for the view
 */
export type String_274 = string;
/**
 * Name of the view
 */
export type String_275 = string;
/**
 * Views where the agent can be used
 */
export type Array_37 = Object_77[];
/**
 * Visibility of the agent
 */
export type String_276 = "PUBLIC" | "WORKSPACE" | "PRIVATE";
export type String_277 = string;
export type Null_28 = null;
export type Number_70 = number;
export type Null_29 = null;

export interface AGENTS_UPDATEOutput {
  id: String_265;
  name: String_266;
  avatar: String_267;
  instructions: String_268;
  description?: String_269;
  tools_set: Object_74;
  max_steps?: Number_67;
  max_tokens?: NumberNull_6;
  model?: String_271;
  memory?: Object_75;
  views: Array_37;
  visibility: String_276;
  /**
   * Access control by role
   */
  access?:
    | (
        | {
            [k: string]: unknown;
          }
        | String_277
      )
    | Null_28;
  /**
   * Temperature of the LLM. Must be between 0 and 1.
   */
  temperature?:
    | (
        | {
            [k: string]: unknown;
          }
        | Number_70
      )
    | Null_29;
}
/**
 * Tools available to the agent
 */
export interface Object_74 {
  [k: string]: Array_36;
}
/**
 * Memory to use for the agent
 */
export interface Object_75 {
  discriminator?: String_272;
  last_messages?: Number_69;
  semantic_recall?: Boolean_30;
  working_memory?: Object_76;
}
/**
 * Working memory to use for the agent
 */
export interface Object_76 {
  enabled?: Boolean_31;
  template?: String_273;
}
export interface Object_77 {
  url: String_274;
  name: String_275;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type String_278 = string;
export type String_279 = "user" | "assistant" | "system";
export type String_280 = string;
export type String_281 = string;
/**
 * The name of the attachment, usually the file name
 */
export type String_282 = string;
/**
 * Media type of the attachment
 */
export type String_283 = string;
/**
 * URL of the attachment (hosted file or Data URL)
 */
export type String_284 = string;
/**
 * Additional attachments to be sent along with the message
 */
export type Array_39 = Object_79[];
/**
 * Array of messages for the conversation
 */
export type Array_38 = Object_78[];
/**
 * Skip transaction creation
 */
export type Boolean_32 = boolean;
/**
 * Model ID to use for generation (defaults to workspace default)
 */
export type String_285 = string;
/**
 * Maximum number of tokens to generate
 */
export type Number_71 = number;
/**
 * Temperature for the generation
 */
export type Number_72 = number;
export type String_286 = string;
export type Array_40 = String_286[];

export interface AI_GENERATEInput_1 {
  messages: Array_38;
  skipTransaction?: Boolean_32;
  model?: String_285;
  maxTokens?: Number_71;
  temperature?: Number_72;
  tools?: Object_80;
}
export interface Object_78 {
  id?: String_278;
  role: String_279;
  content: String_280;
  createdAt?: String_281;
  experimental_attachments?: Array_39;
}
export interface Object_79 {
  name?: String_282;
  contentType?: String_283;
  url: String_284;
}
/**
 * Tools available for the generation
 */
export interface Object_80 {
  [k: string]: Array_40;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * The generated text response
 */
export type String_287 = string;
/**
 * Number of tokens in the prompt
 */
export type Number_73 = number;
/**
 * Number of tokens in the completion
 */
export type Number_74 = number;
/**
 * Total number of tokens used
 */
export type Number_75 = number;
/**
 * Transaction ID
 */
export type String_288 = string;
/**
 * Reason why generation finished
 */
export type String_289 = string;

export interface AI_GENERATEOutput_1 {
  text: String_287;
  usage: Object_81;
  finishReason?: String_289;
}
/**
 * Token usage information
 */
export interface Object_81 {
  promptTokens: Number_73;
  completionTokens: Number_74;
  totalTokens: Number_75;
  transactionId?: String_288;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type String_290 = string;
export type String_291 = "user" | "assistant" | "system";
export type String_292 = string;
export type String_293 = string;
/**
 * The name of the attachment, usually the file name
 */
export type String_294 = string;
/**
 * Media type of the attachment
 */
export type String_295 = string;
/**
 * URL of the attachment (hosted file or Data URL)
 */
export type String_296 = string;
/**
 * Additional attachments to be sent along with the message
 */
export type Array_42 = Object_83[];
/**
 * Array of messages for the conversation
 */
export type Array_41 = Object_82[];
/**
 * Skip transaction creation
 */
export type Boolean_33 = boolean;
/**
 * Model ID to use for generation (defaults to workspace default)
 */
export type String_297 = string;
/**
 * Maximum number of tokens to generate
 */
export type Number_76 = number;
/**
 * Temperature for the generation
 */
export type Number_77 = number;
export type String_298 = string;
export type Array_43 = String_298[];

export interface AI_GENERATE_OBJECTInput_1 {
  messages: Array_41;
  schema: Object_84;
  skipTransaction?: Boolean_33;
  model?: String_297;
  maxTokens?: Number_76;
  temperature?: Number_77;
  tools?: Object_85;
}
export interface Object_82 {
  id?: String_290;
  role: String_291;
  content: String_292;
  createdAt?: String_293;
  experimental_attachments?: Array_42;
}
export interface Object_83 {
  name?: String_294;
  contentType?: String_295;
  url: String_296;
}
/**
 * JSON Schema that defines the structure of the object to generate
 */
export interface Object_84 {
  [k: string]: unknown;
}
/**
 * Tools available for the generation
 */
export interface Object_85 {
  [k: string]: Array_43;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * Number of tokens in the prompt
 */
export type Number_78 = number;
/**
 * Number of tokens in the completion
 */
export type Number_79 = number;
/**
 * Total number of tokens used
 */
export type Number_80 = number;
/**
 * Transaction ID
 */
export type String_299 = string;
/**
 * Reason why generation finished
 */
export type String_300 = string;

export interface AI_GENERATE_OBJECTOutput_1 {
  /**
   * The generated object according to the provided schema
   */
  object?: {
    [k: string]: unknown;
  };
  usage: Object_86;
  finishReason?: String_300;
}
/**
 * Token usage information
 */
export interface Object_86 {
  promptTokens: Number_78;
  completionTokens: Number_79;
  totalTokens: Number_80;
  transactionId?: String_299;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * The API key to check access for, if not provided, the current key from context will be used
 */
export type String_301 = string;
export type String_302 = string;
/**
 * All tools that wants to check access
 */
export type Array_44 = String_302[];

export interface API_KEYS_CHECK_ACCESSInput {
  key?: String_301;
  tools: Array_44;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type Boolean_34 = boolean;

export interface API_KEYS_CHECK_ACCESSOutput {
  access: Object_87;
}
export interface Object_87 {
  [k: string]: Boolean_34;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * The name of the API key
 */
export type String_303 = string;
export type String_304 = "allow" | "deny";
export type String_305 = string;
export type String_306 = "is_integration";
export type String_307 = string;
/**
 * Policies for the API key
 */
export type Array_45 = Object_88[];
export type String_308 = string;
export type String_309 = string;

export interface API_KEYS_CREATEInput {
  name: String_303;
  policies?: Array_45;
  claims?: Object_90;
}
export interface Object_88 {
  effect: String_304;
  resource: String_305;
  matchCondition?: Object_89;
}
export interface Object_89 {
  resource: String_306;
  integrationId: String_307;
}
/**
 * App Claims to be added to the API key
 */
export interface Object_90 {
  appName: String_308;
  integrationId: String_309;
  state?: unknown;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * The unique identifier of the API key
 */
export type String_310 = string;
/**
 * The name of the API key
 */
export type String_311 = string;
/**
 * The workspace ID
 */
export type StringNull_10 = String_312 | Null_30;
export type String_312 = string;
export type Null_30 = null;
/**
 * Whether the API key is enabled
 */
export type Boolean_35 = boolean;
export type String_313 = "allow" | "deny";
export type String_314 = string;
export type String_315 = "is_integration";
export type String_316 = string;
/**
 * Access policies for the API key
 */
export type Array_46 = Object_91[];
/**
 * Creation timestamp
 */
export type String_317 = string;
/**
 * Last update timestamp
 */
export type String_318 = string;
/**
 * Deletion timestamp (null if not deleted)
 */
export type StringNull_11 = String_319 | Null_31;
export type String_319 = string;
export type Null_31 = null;
/**
 * The actual API key value (JWT token) - only returned on creation/reissue
 */
export type String_320 = string;

export interface API_KEYS_CREATEOutput {
  id: String_310;
  name: String_311;
  workspace: StringNull_10;
  enabled: Boolean_35;
  policies: Array_46;
  createdAt: String_317;
  updatedAt: String_318;
  deletedAt: StringNull_11;
  value: String_320;
}
export interface Object_91 {
  effect: String_313;
  resource: String_314;
  matchCondition?: Object_92;
}
export interface Object_92 {
  resource: String_315;
  integrationId: String_316;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * The ID of the API key to delete
 */
export type String_321 = string;

export interface API_KEYS_DELETEInput {
  id: String_321;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * The ID of the deleted API key
 */
export type String_322 = string;
/**
 * Confirmation that the key was deleted
 */
export type Boolean_36 = boolean;

export interface API_KEYS_DELETEOutput {
  id: String_322;
  deleted: Boolean_36;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * The ID of the API key to disable
 */
export type String_323 = string;

export interface API_KEYS_DISABLEInput {
  id: String_323;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * The unique identifier of the API key
 */
export type String_324 = string;
/**
 * The name of the API key
 */
export type String_325 = string;
/**
 * The workspace ID
 */
export type StringNull_12 = String_326 | Null_32;
export type String_326 = string;
export type Null_32 = null;
/**
 * Whether the API key is enabled
 */
export type Boolean_37 = boolean;
export type String_327 = "allow" | "deny";
export type String_328 = string;
export type String_329 = "is_integration";
export type String_330 = string;
/**
 * Access policies for the API key
 */
export type Array_47 = Object_93[];
/**
 * Creation timestamp
 */
export type String_331 = string;
/**
 * Last update timestamp
 */
export type String_332 = string;
/**
 * Deletion timestamp (null if not deleted)
 */
export type StringNull_13 = String_333 | Null_33;
export type String_333 = string;
export type Null_33 = null;

export interface API_KEYS_DISABLEOutput {
  id: String_324;
  name: String_325;
  workspace: StringNull_12;
  enabled: Boolean_37;
  policies: Array_47;
  createdAt: String_331;
  updatedAt: String_332;
  deletedAt: StringNull_13;
}
export interface Object_93 {
  effect: String_327;
  resource: String_328;
  matchCondition?: Object_94;
}
export interface Object_94 {
  resource: String_329;
  integrationId: String_330;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * The ID of the API key to enable
 */
export type String_334 = string;

export interface API_KEYS_ENABLEInput {
  id: String_334;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * The unique identifier of the API key
 */
export type String_335 = string;
/**
 * The name of the API key
 */
export type String_336 = string;
/**
 * The workspace ID
 */
export type StringNull_14 = String_337 | Null_34;
export type String_337 = string;
export type Null_34 = null;
/**
 * Whether the API key is enabled
 */
export type Boolean_38 = boolean;
export type String_338 = "allow" | "deny";
export type String_339 = string;
export type String_340 = "is_integration";
export type String_341 = string;
/**
 * Access policies for the API key
 */
export type Array_48 = Object_95[];
/**
 * Creation timestamp
 */
export type String_342 = string;
/**
 * Last update timestamp
 */
export type String_343 = string;
/**
 * Deletion timestamp (null if not deleted)
 */
export type StringNull_15 = String_344 | Null_35;
export type String_344 = string;
export type Null_35 = null;

export interface API_KEYS_ENABLEOutput {
  id: String_335;
  name: String_336;
  workspace: StringNull_14;
  enabled: Boolean_38;
  policies: Array_48;
  createdAt: String_342;
  updatedAt: String_343;
  deletedAt: StringNull_15;
}
export interface Object_95 {
  effect: String_338;
  resource: String_339;
  matchCondition?: Object_96;
}
export interface Object_96 {
  resource: String_340;
  integrationId: String_341;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * The ID of the API key
 */
export type String_345 = string;

export interface API_KEYS_GETInput {
  id: String_345;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * The unique identifier of the API key
 */
export type String_346 = string;
/**
 * The name of the API key
 */
export type String_347 = string;
/**
 * The workspace ID
 */
export type StringNull_16 = String_348 | Null_36;
export type String_348 = string;
export type Null_36 = null;
/**
 * Whether the API key is enabled
 */
export type Boolean_39 = boolean;
export type String_349 = "allow" | "deny";
export type String_350 = string;
export type String_351 = "is_integration";
export type String_352 = string;
/**
 * Access policies for the API key
 */
export type Array_49 = Object_97[];
/**
 * Creation timestamp
 */
export type String_353 = string;
/**
 * Last update timestamp
 */
export type String_354 = string;
/**
 * Deletion timestamp (null if not deleted)
 */
export type StringNull_17 = String_355 | Null_37;
export type String_355 = string;
export type Null_37 = null;

export interface API_KEYS_GETOutput {
  id: String_346;
  name: String_347;
  workspace: StringNull_16;
  enabled: Boolean_39;
  policies: Array_49;
  createdAt: String_353;
  updatedAt: String_354;
  deletedAt: StringNull_17;
}
export interface Object_97 {
  effect: String_349;
  resource: String_350;
  matchCondition?: Object_98;
}
export interface Object_98 {
  resource: String_351;
  integrationId: String_352;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export interface API_KEYS_LISTInput {}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * The unique identifier of the API key
 */
export type String_356 = string;
/**
 * The name of the API key
 */
export type String_357 = string;
/**
 * The workspace ID
 */
export type StringNull_18 = String_358 | Null_38;
export type String_358 = string;
export type Null_38 = null;
/**
 * Whether the API key is enabled
 */
export type Boolean_40 = boolean;
export type String_359 = "allow" | "deny";
export type String_360 = string;
export type String_361 = "is_integration";
export type String_362 = string;
/**
 * Access policies for the API key
 */
export type Array_51 = Object_100[];
/**
 * Creation timestamp
 */
export type String_363 = string;
/**
 * Last update timestamp
 */
export type String_364 = string;
/**
 * Deletion timestamp (null if not deleted)
 */
export type StringNull_19 = String_365 | Null_39;
export type String_365 = string;
export type Null_39 = null;
/**
 * List of API keys
 */
export type Array_50 = Object_99[];

export interface API_KEYS_LISTOutput {
  apiKeys: Array_50;
}
export interface Object_99 {
  id: String_356;
  name: String_357;
  workspace: StringNull_18;
  enabled: Boolean_40;
  policies: Array_51;
  createdAt: String_363;
  updatedAt: String_364;
  deletedAt: StringNull_19;
}
export interface Object_100 {
  effect: String_359;
  resource: String_360;
  matchCondition?: Object_101;
}
export interface Object_101 {
  resource: String_361;
  integrationId: String_362;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * The ID of the API key to reissue
 */
export type String_366 = string;
export type String_367 = "allow" | "deny";
export type String_368 = string;
export type String_369 = "is_integration";
export type String_370 = string;
/**
 * Policies of the API key
 */
export type Array_52 = Object_102[];

export interface API_KEYS_REISSUEInput {
  id: String_366;
  /**
   * New claims to be added to the API key
   */
  claims?: {
    [k: string]: unknown;
  };
  policies?: Array_52;
}
export interface Object_102 {
  effect: String_367;
  resource: String_368;
  matchCondition?: Object_103;
}
export interface Object_103 {
  resource: String_369;
  integrationId: String_370;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * The unique identifier of the API key
 */
export type String_371 = string;
/**
 * The name of the API key
 */
export type String_372 = string;
/**
 * The workspace ID
 */
export type StringNull_20 = String_373 | Null_40;
export type String_373 = string;
export type Null_40 = null;
/**
 * Whether the API key is enabled
 */
export type Boolean_41 = boolean;
export type String_374 = "allow" | "deny";
export type String_375 = string;
export type String_376 = "is_integration";
export type String_377 = string;
/**
 * Access policies for the API key
 */
export type Array_53 = Object_104[];
/**
 * Creation timestamp
 */
export type String_378 = string;
/**
 * Last update timestamp
 */
export type String_379 = string;
/**
 * Deletion timestamp (null if not deleted)
 */
export type StringNull_21 = String_380 | Null_41;
export type String_380 = string;
export type Null_41 = null;
/**
 * The actual API key value (JWT token) - only returned on creation/reissue
 */
export type String_381 = string;

export interface API_KEYS_REISSUEOutput {
  id: String_371;
  name: String_372;
  workspace: StringNull_20;
  enabled: Boolean_41;
  policies: Array_53;
  createdAt: String_378;
  updatedAt: String_379;
  deletedAt: StringNull_21;
  value: String_381;
}
export interface Object_104 {
  effect: String_374;
  resource: String_375;
  matchCondition?: Object_105;
}
export interface Object_105 {
  resource: String_376;
  integrationId: String_377;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * The ID of the API key
 */
export type String_382 = string;
/**
 * New name for the API key
 */
export type String_383 = string;
/**
 * Whether the API key is enabled
 */
export type Boolean_42 = boolean;
export type String_384 = "allow" | "deny";
export type String_385 = string;
export type String_386 = "is_integration";
export type String_387 = string;
/**
 * Policies for the API key
 */
export type Array_54 = Object_106[];

export interface API_KEYS_UPDATEInput {
  id: String_382;
  name?: String_383;
  enabled?: Boolean_42;
  policies?: Array_54;
}
export interface Object_106 {
  effect: String_384;
  resource: String_385;
  matchCondition?: Object_107;
}
export interface Object_107 {
  resource: String_386;
  integrationId: String_387;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * The unique identifier of the API key
 */
export type String_388 = string;
/**
 * The name of the API key
 */
export type String_389 = string;
/**
 * The workspace ID
 */
export type StringNull_22 = String_390 | Null_42;
export type String_390 = string;
export type Null_42 = null;
/**
 * Whether the API key is enabled
 */
export type Boolean_43 = boolean;
export type String_391 = "allow" | "deny";
export type String_392 = string;
export type String_393 = "is_integration";
export type String_394 = string;
/**
 * Access policies for the API key
 */
export type Array_55 = Object_108[];
/**
 * Creation timestamp
 */
export type String_395 = string;
/**
 * Last update timestamp
 */
export type String_396 = string;
/**
 * Deletion timestamp (null if not deleted)
 */
export type StringNull_23 = String_397 | Null_43;
export type String_397 = string;
export type Null_43 = null;

export interface API_KEYS_UPDATEOutput {
  id: String_388;
  name: String_389;
  workspace: StringNull_22;
  enabled: Boolean_43;
  policies: Array_55;
  createdAt: String_395;
  updatedAt: String_396;
  deletedAt: StringNull_23;
}
export interface Object_108 {
  effect: String_391;
  resource: String_392;
  matchCondition?: Object_109;
}
export interface Object_109 {
  resource: String_393;
  integrationId: String_394;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * The ID of the API key to validate
 */
export type String_398 = string;

export interface API_KEYS_VALIDATEInput {
  id: String_398;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * The unique identifier of the API key
 */
export type String_399 = string;
/**
 * The name of the API key
 */
export type String_400 = string;
/**
 * The workspace ID
 */
export type StringNull_24 = String_401 | Null_44;
export type String_401 = string;
export type Null_44 = null;
/**
 * Whether the API key is enabled
 */
export type Boolean_44 = boolean;
export type String_402 = "allow" | "deny";
export type String_403 = string;
export type String_404 = "is_integration";
export type String_405 = string;
/**
 * Access policies for the API key
 */
export type Array_56 = Object_110[];
/**
 * Creation timestamp
 */
export type String_406 = string;
/**
 * Last update timestamp
 */
export type String_407 = string;
/**
 * Deletion timestamp (null if not deleted)
 */
export type StringNull_25 = String_408 | Null_45;
export type String_408 = string;
export type Null_45 = null;
/**
 * Whether the API key is valid
 */
export type Boolean_45 = boolean;

export interface API_KEYS_VALIDATEOutput {
  id: String_399;
  name: String_400;
  workspace: StringNull_24;
  enabled: Boolean_44;
  policies: Array_56;
  createdAt: String_406;
  updatedAt: String_407;
  deletedAt: StringNull_25;
  valid: Boolean_45;
}
export interface Object_110 {
  effect: String_402;
  resource: String_403;
  matchCondition?: Object_111;
}
export interface Object_111 {
  resource: String_404;
  integrationId: String_405;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * The channel discriminator
 */
export type String_409 = string;
/**
 * The ID of the integration to use
 */
export type String_410 = string;
/**
 * The ID of the agent to join the channel.
 */
export type String_411 = string;
/**
 * The name of the channel
 */
export type String_412 = string;

export interface CHANNELS_CREATEInput {
  discriminator: String_409;
  integrationId: String_410;
  agentId?: String_411;
  name?: String_412;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export interface CHANNELS_CREATEOutput {}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type String_413 = string;

export interface CHANNELS_DELETEInput {
  id: String_413;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export interface CHANNELS_DELETEOutput {}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type String_414 = string;

export interface CHANNELS_GETInput {
  id: String_414;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export interface CHANNELS_GETOutput {}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * The ID of the channel to join, use only UUIDs.
 */
export type String_415 = string;
/**
 * The ID of the agent to join the channel to, use only UUIDs.
 */
export type String_416 = string;

export interface CHANNELS_JOINInput {
  id: String_415;
  agentId: String_416;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export interface CHANNELS_JOINOutput {}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * The ID of the channel to unlink, use only UUIDs.
 */
export type String_417 = string;
/**
 * The ID of the agent to unlink, use only UUIDs.
 */
export type String_418 = string;

export interface CHANNELS_LEAVEInput {
  id: String_417;
  agentId: String_418;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export interface CHANNELS_LEAVEOutput {}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export interface CHANNELS_LISTInput {}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export interface CHANNELS_LISTOutput {}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type String_419 = string;
export type String_420 = string;
export type String_421 = string;
/**
 * The amount (in microdollars) of money to commit. Specified in USD dollars.
 */
export type StringNumber = String_422 | Number_81;
export type String_422 = string;
export type Number_81 = number;

export interface COMMIT_PRE_AUTHORIZED_AMOUNTInput {
  identifier?: String_419;
  contractId: String_420;
  vendorId: String_421;
  amount: StringNumber;
  metadata?: Object_112;
}
export interface Object_112 {
  [k: string]: unknown;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type String_423 = string;

export interface COMMIT_PRE_AUTHORIZED_AMOUNTOutput {
  id: String_423;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type String_424 = string;
export type String_425 = string;
export type StringNumber_1 = String_426 | Number_82;
export type String_426 = string;
export type Number_82 = number;
export type String_427 = string;
export type String_428 = string;
export type Array_58 = String_428[];
export type Array_57 = Object_114[];
export type String_429 = string;
export type String_430 = string;

export interface CONTRACT_REGISTERInput {
  contract: Object_113;
  author: Object_115;
}
export interface Object_113 {
  body?: String_424;
  clauses?: Array_57;
}
export interface Object_114 {
  id: String_425;
  price: StringNumber_1;
  description?: String_427;
  usedByTools?: Array_58;
}
export interface Object_115 {
  scope: String_429;
  name: String_430;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type String_431 = string;

export interface CONTRACT_REGISTEROutput {
  appName: String_431;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * The name of the branch to create
 */
export type String_432 = string;
/**
 * The source branch to branch from (optional - creates empty branch if not provided)
 */
export type String_433 = string;

export interface CREATE_BRANCHInput {
  branchName: String_432;
  sourceBranch?: String_433;
  metadata?: Object_116;
}
/**
 * Optional metadata for the branch
 */
export interface Object_116 {
  [k: string]: unknown;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type String_434 = string;
export type String_435 = string;
export type Number_83 = number;

export interface CREATE_BRANCHOutput {
  branchName: String_434;
  sourceBranch?: String_435;
  createdAt: Number_83;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type Number_84 = number;
export type String_436 = string;
export type String_437 = string;

export interface CREATE_CHECKOUT_SESSIONInput {
  amountUSDCents: Number_84;
  successUrl: String_436;
  cancelUrl: String_437;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type String_438 = string;

export interface CREATE_CHECKOUT_SESSIONOutput {
  url: String_438;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * The amount of money to add to the voucher. Specified in USD dollars.
 */
export type Number_85 = number;

export interface CREATE_VOUCHERInput {
  amount: Number_85;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type String_439 = string;

export interface CREATE_VOUCHEROutput {
  id: String_439;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * If true, the query will be run against the legacy database
 */
export type Boolean_46 = boolean;

export interface DATABASES_GET_METAInput_1 {
  _legacy?: Boolean_46;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type Number_86 = number;

export interface DATABASES_GET_METAOutput_1 {
  bytes?: Number_86;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * If true, only shows what would be migrated without executing
 */
export type Boolean_47 = boolean;
export type String_440 = string;
/**
 * Specific tables to migrate. If not provided, all tables will be migrated
 */
export type Array_59 = String_440[];
/**
 * Number of rows to migrate per batch
 */
export type Number_87 = number;

export interface DATABASES_MIGRATEInput_1 {
  dryRun?: Boolean_47;
  tables?: Array_59;
  batchSize?: Number_87;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type Boolean_48 = boolean;
export type String_441 = string;
export type Number_88 = number;
export type String_442 = "success" | "error" | "skipped";
export type String_443 = string;
export type Array_60 = Object_117[];
export type Number_89 = number;
export type Number_90 = number;

export interface DATABASES_MIGRATEOutput_1 {
  success: Boolean_48;
  migratedTables: Array_60;
  totalRowsMigrated: Number_89;
  executionTimeMs: Number_90;
}
export interface Object_117 {
  tableName: String_441;
  rowCount: Number_88;
  status: String_442;
  error?: String_443;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * The date to recover to
 */
export type String_444 = string;
/**
 * If true, the query will be run against the legacy database
 */
export type Boolean_49 = boolean;

export interface DATABASES_RECOVERYInput_1 {
  date: String_444;
  _legacy?: Boolean_49;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type Boolean_50 = boolean;

export interface DATABASES_RECOVERYOutput_1 {
  success: Boolean_50;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * The SQL query to run
 */
export type String_445 = string;
/**
 * The parameters to pass to the SQL query
 */
export type Array_61 = unknown[];
/**
 * If true, the query will be run against the legacy database
 */
export type Boolean_51 = boolean;

export interface DATABASES_RUN_SQLInput_1 {
  sql: String_445;
  params?: Array_61;
  _legacy?: Boolean_51;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type Boolean_52 = boolean;
export type Number_91 = number;
export type Number_92 = number;
export type Number_93 = number;
export type Number_94 = number;
export type Number_95 = number;
export type Boolean_53 = boolean;
export type String_446 = "WNAM" | "ENAM" | "WEUR" | "EEUR" | "APAC" | "OC";
export type Number_96 = number;
export type Number_97 = number;
export type Array_63 = unknown[];
export type Boolean_54 = boolean;
export type Array_62 = Object_118[];

export interface DATABASES_RUN_SQLOutput_1 {
  result: Array_62;
}
export interface Object_118 {
  meta?: Object_119;
  results?: Array_63;
  success?: Boolean_54;
}
export interface Object_119 {
  changed_db?: Boolean_52;
  changes?: Number_91;
  duration?: Number_92;
  last_row_id?: Number_93;
  rows_read?: Number_94;
  rows_written?: Number_95;
  served_by_primary?: Boolean_53;
  served_by_region?: String_446;
  size_after?: Number_96;
  timings?: Object_120;
}
export interface Object_120 {
  sql_duration_ms?: Number_97;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export interface DECO_CHAT_VIEWS_LISTInput_1 {}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type String_447 = string;
export type String_448 = string;
export type String_449 = string;
export type String_450 = string;
export type String_451 = string;
export type String_452 = string;
export type String_453 = string;
export type String_454 = string;
export type String_455 = string;
export type Array_65 = String_455[];
export type String_456 = string;
export type String_457 = "none" | "open" | "autoPin";
export type Array_64 = Object_121[];

export interface DECO_CHAT_VIEWS_LISTOutput_1 {
  views: Array_64;
}
export interface Object_121 {
  id?: String_447;
  name?: String_448;
  title: String_449;
  description?: String_450;
  icon: String_451;
  url?: String_452;
  mimeTypePattern?: String_453;
  resourceName?: String_454;
  tools?: Array_65;
  prompt?: String_456;
  installBehavior?: String_457;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type String_458 = string;

export interface DECO_GET_APP_SCHEMAInput {
  appName: String_458;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type String_459 = string;
export type Array_66 = String_459[];

export interface DECO_GET_APP_SCHEMAOutput {
  schema?: unknown;
  scopes?: Array_66;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * The id of the integration to install. To know the available ids, use the DECO_INTEGRATIONS_SEARCH tool
 */
export type String_460 = string;
/**
 * The provider of the integration to install. To know the available providers, use the DECO_INTEGRATIONS_SEARCH tool
 */
export type String_461 = string;
/**
 * The id of the app to install the integration for. To know the available app ids, use the DECO_INTEGRATIONS_SEARCH tool
 */
export type String_462 = string;

export interface DECO_INTEGRATION_INSTALLInput {
  id: String_460;
  provider?: String_461;
  appId?: String_462;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * The id of the installation. Use this id to enable the integration using the DECO_INTEGRATIONS_SEARCH tool
 */
export type String_463 = string;

export interface DECO_INTEGRATION_INSTALLOutput {
  installationId: String_463;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * The id of the integration to start the OAuth flow for
 */
export type String_464 = string;
/**
 * The return URL for the OAuth flow. Will come with a query param including the mcp URL.
 */
export type String_465 = string;
/**
 * The install id of the integration to start the OAuth flow for
 */
export type String_466 = string;
/**
 * The provider of the integration to start the OAuth flow for
 */
export type String_467 = string;

export interface DECO_INTEGRATION_OAUTH_STARTInput {
  appName: String_464;
  returnUrl: String_465;
  installId: String_466;
  provider?: String_467;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export interface DECO_INTEGRATION_OAUTH_STARTOutput {}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * The query to search for
 */
export type String_468 = string;
/**
 * Whether to show contracts
 */
export type Boolean_55 = boolean;

export interface DECO_INTEGRATIONS_SEARCHInput {
  query?: String_468;
  showContracts?: Boolean_55;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type String_469 = string;
export type String_470 = string;
export type String_471 = string;
export type String_472 = string;
export type String_473 = string;
export type Null_46 = null;
export type String_474 = string;
export type Null_47 = null;
export type String_475 = string;
export type Null_48 = null;
export type String_476 = "HTTP";
export type String_477 = string;
export type String_478 = string;
export type String_479 = "SSE";
export type String_480 = string;
export type String_481 = string;
export type String_482 = string;
export type String_483 = "Websocket";
export type String_484 = string;
export type String_485 = string;
export type String_486 = "Deco";
export type String_487 = string;
export type String_488 = string;
export type String_489 = "INNATE";
export type String_490 = string;
export type String_491 = string;
export type Null_49 = null;
/**
 * The name of the tool
 */
export type String_492 = string;
/**
 * The description of the tool
 */
export type String_493 = string;
export type Array_68 = (Object_130 & Object_132)[];
export type Null_50 = null;
export type String_494 = string;
export type String_495 = string;
/**
 * The Integrations that match the query
 */
export type Array_67 = (Object_122 & Object_134)[];

export interface DECO_INTEGRATIONS_SEARCHOutput {
  integrations: Array_67;
}
export interface Object_122 {
  id: String_469;
  name: String_470;
  description?: String_471;
  icon?: String_472;
  access?:
    | (
        | {
            [k: string]: unknown;
          }
        | String_473
      )
    | Null_46;
  appName?:
    | (
        | {
            [k: string]: unknown;
          }
        | String_474
      )
    | Null_47;
  appId?:
    | (
        | {
            [k: string]: unknown;
          }
        | String_475
      )
    | Null_48;
  connection: Object_123 | Object_124 | Object_126 | Object_127 | Object_128;
  metadata?: Object_129 | Null_49;
  tools?: Array_68 | Null_50;
}
export interface Object_123 {
  type: String_476;
  url: String_477;
  token?: String_478;
}
export interface Object_124 {
  type: String_479;
  url: String_480;
  token?: String_481;
  headers?: Object_125;
}
export interface Object_125 {
  [k: string]: String_482;
}
export interface Object_126 {
  type: String_483;
  url: String_484;
  token?: String_485;
}
export interface Object_127 {
  type: String_486;
  tenant: String_487;
  token?: String_488;
}
export interface Object_128 {
  type: String_489;
  name: String_490;
  workspace?: String_491;
}
export interface Object_129 {
  [k: string]: unknown;
}
export interface Object_130 {
  name: String_492;
  inputSchema: Object_131;
}
/**
 * The JSON schema of the input of the tool
 */
export interface Object_131 {
  [k: string]: unknown;
}
export interface Object_132 {
  description?: String_493;
  outputSchema?: Object_133;
}
/**
 * The JSON schema of the output of the tool
 */
export interface Object_133 {
  [k: string]: unknown;
}
export interface Object_134 {
  provider: String_494;
  friendlyName?: String_495;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * The name/title of the document
 */
export type String_496 = string;
/**
 * A brief description of the document's purpose or content
 */
export type String_497 = string;
/**
 * The document content in markdown format. Supports standard markdown syntax including headers, lists, links, code blocks, etc.
 */
export type String_498 = string;
export type String_499 = string;
/**
 * Optional tags for categorizing and searching documents
 */
export type Array_69 = String_499[];

export interface DECO_RESOURCE_DOCUMENT_CREATEInput {
  data: Object_135;
}
/**
 * Resource data to create
 */
export interface Object_135 {
  name: String_496;
  description: String_497;
  content: String_498;
  tags?: Array_69;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * URI of the created resource
 */
export type String_500 = string;
/**
 * The name/title of the document
 */
export type String_501 = string;
/**
 * A brief description of the document's purpose or content
 */
export type String_502 = string;
/**
 * The document content in markdown format. Supports standard markdown syntax including headers, lists, links, code blocks, etc.
 */
export type String_503 = string;
export type String_504 = string;
/**
 * Optional tags for categorizing and searching documents
 */
export type Array_70 = String_504[];
/**
 * Creation timestamp
 */
export type String_505 = string;
/**
 * Last update timestamp
 */
export type String_506 = string;
/**
 * User who created the resource
 */
export type String_507 = string;

export interface DECO_RESOURCE_DOCUMENT_CREATEOutput {
  uri: String_500;
  data: Object_136;
  created_at?: String_505;
  updated_at?: String_506;
  created_by?: String_507;
}
/**
 * Created resource data
 */
export interface Object_136 {
  name: String_501;
  description: String_502;
  content: String_503;
  tags?: Array_70;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * URI of the resource to delete
 */
export type String_508 = string;

export interface DECO_RESOURCE_DOCUMENT_DELETEInput {
  uri: String_508;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * Whether the deletion was successful
 */
export type Boolean_56 = boolean;
/**
 * URI of the deleted resource
 */
export type String_509 = string;

export interface DECO_RESOURCE_DOCUMENT_DELETEOutput {
  success: Boolean_56;
  uri: String_509;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * URI of the resource to read
 */
export type String_510 = string;

export interface DECO_RESOURCE_DOCUMENT_READInput {
  uri: String_510;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * URI of the resource
 */
export type String_511 = string;
/**
 * The name/title of the document
 */
export type String_512 = string;
/**
 * A brief description of the document's purpose or content
 */
export type String_513 = string;
/**
 * The document content in markdown format. Supports standard markdown syntax including headers, lists, links, code blocks, etc.
 */
export type String_514 = string;
export type String_515 = string;
/**
 * Optional tags for categorizing and searching documents
 */
export type Array_71 = String_515[];
/**
 * Creation timestamp
 */
export type String_516 = string;
/**
 * Last update timestamp
 */
export type String_517 = string;
/**
 * User who created the resource
 */
export type String_518 = string;
/**
 * User who last updated the resource
 */
export type String_519 = string;

export interface DECO_RESOURCE_DOCUMENT_READOutput {
  uri: String_511;
  data: Object_137;
  created_at?: String_516;
  updated_at?: String_517;
  created_by?: String_518;
  updated_by?: String_519;
}
/**
 * Resource data
 */
export interface Object_137 {
  name: String_512;
  description: String_513;
  content: String_514;
  tags?: Array_71;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * Search term to filter resources
 */
export type String_520 = string;
/**
 * Page number (1-based)
 */
export type Integer_3 = number;
/**
 * Number of items per page
 */
export type Integer_4 = number;
/**
 * Field to sort by
 */
export type String_521 = string;
/**
 * Sort order
 */
export type String_522 = "asc" | "desc";

export interface DECO_RESOURCE_DOCUMENT_SEARCHInput {
  term?: String_520;
  page?: Integer_3;
  pageSize?: Integer_4;
  filters?: Object_138;
  sortBy?: String_521;
  sortOrder?: String_522;
}
/**
 * Additional filters to apply
 */
export interface Object_138 {
  [k: string]: unknown;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * URI of the resource
 */
export type String_523 = string;
export type String_524 = string;
/**
 * Description of the resource
 */
export type String_525 = string;
/**
 * URL to the resource icon
 */
export type String_526 = string;
/**
 * The name/title of the document
 */
export type String_527 = string;
/**
 * A brief description of the document's purpose or content
 */
export type String_528 = string;
/**
 * Creation timestamp
 */
export type String_529 = string;
/**
 * Last update timestamp
 */
export type String_530 = string;
/**
 * User who created the resource
 */
export type String_531 = string;
/**
 * User who last updated the resource
 */
export type String_532 = string;
/**
 * Array of matching resources
 */
export type Array_72 = Object_139[];
/**
 * Total number of matching resources
 */
export type Integer_5 = number;
/**
 * Current page number
 */
export type Integer_6 = number;
/**
 * Number of items per page
 */
export type Integer_7 = number;
/**
 * Total number of pages
 */
export type Integer_8 = number;
/**
 * Whether there are more pages available
 */
export type Boolean_57 = boolean;
/**
 * Whether there are previous pages available
 */
export type Boolean_58 = boolean;

export interface DECO_RESOURCE_DOCUMENT_SEARCHOutput {
  items: Array_72;
  totalCount: Integer_5;
  page: Integer_6;
  pageSize: Integer_7;
  totalPages: Integer_8;
  hasNextPage: Boolean_57;
  hasPreviousPage: Boolean_58;
}
export interface Object_139 {
  uri: String_523;
  /**
   * Resource data with required name
   */
  data: Object_140 & Object_141;
  created_at?: String_529;
  updated_at?: String_530;
  created_by?: String_531;
  updated_by?: String_532;
}
export interface Object_140 {
  name: String_524;
  description?: String_525;
  icon?: String_526;
}
export interface Object_141 {
  name: String_527;
  description: String_528;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * URI of the resource to update
 */
export type String_533 = string;
/**
 * The name/title of the document
 */
export type String_534 = string;
/**
 * A brief description of the document's purpose or content
 */
export type String_535 = string;
/**
 * The document content in markdown format. Supports standard markdown syntax including headers, lists, links, code blocks, etc.
 */
export type String_536 = string;
export type String_537 = string;
/**
 * Optional tags for categorizing and searching documents
 */
export type Array_73 = String_537[];

export interface DECO_RESOURCE_DOCUMENT_UPDATEInput {
  uri: String_533;
  data: Object_142;
}
/**
 * Updated resource data
 */
export interface Object_142 {
  name: String_534;
  description: String_535;
  content: String_536;
  tags?: Array_73;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * URI of the updated resource
 */
export type String_538 = string;
/**
 * The name/title of the document
 */
export type String_539 = string;
/**
 * A brief description of the document's purpose or content
 */
export type String_540 = string;
/**
 * The document content in markdown format. Supports standard markdown syntax including headers, lists, links, code blocks, etc.
 */
export type String_541 = string;
export type String_542 = string;
/**
 * Optional tags for categorizing and searching documents
 */
export type Array_74 = String_542[];
/**
 * Original creation timestamp
 */
export type String_543 = string;
/**
 * Last update timestamp
 */
export type String_544 = string;
/**
 * User who originally created the resource
 */
export type String_545 = string;
/**
 * User who last updated the resource
 */
export type String_546 = string;

export interface DECO_RESOURCE_DOCUMENT_UPDATEOutput {
  uri: String_538;
  data: Object_143;
  created_at?: String_543;
  updated_at?: String_544;
  created_by?: String_545;
  updated_by?: String_546;
}
/**
 * Updated resource data
 */
export interface Object_143 {
  name: String_539;
  description: String_540;
  content: String_541;
  tags?: Array_74;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * The name of the tool
 */
export type String_547 = string;
/**
 * The description of the tool
 */
export type String_548 = string;
/**
 * Inline ES module code with default export function. The code will be saved to /src/functions/{name}.ts
 */
export type String_549 = string;
/**
 * The integration ID (format: i:<uuid>) that this tool depends on
 */
export type String_550 = string;
/**
 * List of tool names from this integration that will be used by this tool. If undefined, all tools from the integration are available (backwards compatibility).
 *
 * @minItems 1
 */
export type Array_76 = [String_551, ...String_551[]];
export type String_551 = string;
/**
 * List of integration dependencies with specific tools. These integrations and their tools must be installed and available for the tool to execute successfully. Use INTEGRATIONS_LIST to find available integration IDs and their tools.
 */
export type Array_75 = Object_147[];

export interface DECO_RESOURCE_TOOL_CREATEInput {
  data: Object_144;
}
/**
 * Resource data to create
 */
export interface Object_144 {
  name: String_547;
  description: String_548;
  inputSchema: Object_145;
  outputSchema: Object_146;
  execute: String_549;
  dependencies?: Array_75;
}
/**
 * The JSON schema of the input of the tool
 */
export interface Object_145 {
  [k: string]: unknown;
}
/**
 * The JSON schema of the output of the tool
 */
export interface Object_146 {
  [k: string]: unknown;
}
export interface Object_147 {
  integrationId: String_550;
  toolNames?: Array_76;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * URI of the created resource
 */
export type String_552 = string;
/**
 * The name of the tool
 */
export type String_553 = string;
/**
 * The description of the tool
 */
export type String_554 = string;
/**
 * Inline ES module code with default export function. The code will be saved to /src/functions/{name}.ts
 */
export type String_555 = string;
/**
 * The integration ID (format: i:<uuid>) that this tool depends on
 */
export type String_556 = string;
/**
 * List of tool names from this integration that will be used by this tool. If undefined, all tools from the integration are available (backwards compatibility).
 *
 * @minItems 1
 */
export type Array_78 = [String_557, ...String_557[]];
export type String_557 = string;
/**
 * List of integration dependencies with specific tools. These integrations and their tools must be installed and available for the tool to execute successfully. Use INTEGRATIONS_LIST to find available integration IDs and their tools.
 */
export type Array_77 = Object_151[];
/**
 * Creation timestamp
 */
export type String_558 = string;
/**
 * Last update timestamp
 */
export type String_559 = string;
/**
 * User who created the resource
 */
export type String_560 = string;

export interface DECO_RESOURCE_TOOL_CREATEOutput {
  uri: String_552;
  data: Object_148;
  created_at?: String_558;
  updated_at?: String_559;
  created_by?: String_560;
}
/**
 * Created resource data
 */
export interface Object_148 {
  name: String_553;
  description: String_554;
  inputSchema: Object_149;
  outputSchema: Object_150;
  execute: String_555;
  dependencies?: Array_77;
}
/**
 * The JSON schema of the input of the tool
 */
export interface Object_149 {
  [k: string]: unknown;
}
/**
 * The JSON schema of the output of the tool
 */
export interface Object_150 {
  [k: string]: unknown;
}
export interface Object_151 {
  integrationId: String_556;
  toolNames?: Array_78;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * URI of the resource to delete
 */
export type String_561 = string;

export interface DECO_RESOURCE_TOOL_DELETEInput {
  uri: String_561;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * Whether the deletion was successful
 */
export type Boolean_59 = boolean;
/**
 * URI of the deleted resource
 */
export type String_562 = string;

export interface DECO_RESOURCE_TOOL_DELETEOutput {
  success: Boolean_59;
  uri: String_562;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * URI of the resource to read
 */
export type String_563 = string;

export interface DECO_RESOURCE_TOOL_READInput {
  uri: String_563;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * URI of the resource
 */
export type String_564 = string;
/**
 * The name of the tool
 */
export type String_565 = string;
/**
 * The description of the tool
 */
export type String_566 = string;
/**
 * Inline ES module code with default export function. The code will be saved to /src/functions/{name}.ts
 */
export type String_567 = string;
/**
 * The integration ID (format: i:<uuid>) that this tool depends on
 */
export type String_568 = string;
/**
 * List of tool names from this integration that will be used by this tool. If undefined, all tools from the integration are available (backwards compatibility).
 *
 * @minItems 1
 */
export type Array_80 = [String_569, ...String_569[]];
export type String_569 = string;
/**
 * List of integration dependencies with specific tools. These integrations and their tools must be installed and available for the tool to execute successfully. Use INTEGRATIONS_LIST to find available integration IDs and their tools.
 */
export type Array_79 = Object_155[];
/**
 * Creation timestamp
 */
export type String_570 = string;
/**
 * Last update timestamp
 */
export type String_571 = string;
/**
 * User who created the resource
 */
export type String_572 = string;
/**
 * User who last updated the resource
 */
export type String_573 = string;

export interface DECO_RESOURCE_TOOL_READOutput {
  uri: String_564;
  data: Object_152;
  created_at?: String_570;
  updated_at?: String_571;
  created_by?: String_572;
  updated_by?: String_573;
}
/**
 * Resource data
 */
export interface Object_152 {
  name: String_565;
  description: String_566;
  inputSchema: Object_153;
  outputSchema: Object_154;
  execute: String_567;
  dependencies?: Array_79;
}
/**
 * The JSON schema of the input of the tool
 */
export interface Object_153 {
  [k: string]: unknown;
}
/**
 * The JSON schema of the output of the tool
 */
export interface Object_154 {
  [k: string]: unknown;
}
export interface Object_155 {
  integrationId: String_568;
  toolNames?: Array_80;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * Search term to filter resources
 */
export type String_574 = string;
/**
 * Page number (1-based)
 */
export type Integer_9 = number;
/**
 * Number of items per page
 */
export type Integer_10 = number;
/**
 * Field to sort by
 */
export type String_575 = string;
/**
 * Sort order
 */
export type String_576 = "asc" | "desc";

export interface DECO_RESOURCE_TOOL_SEARCHInput {
  term?: String_574;
  page?: Integer_9;
  pageSize?: Integer_10;
  filters?: Object_156;
  sortBy?: String_575;
  sortOrder?: String_576;
}
/**
 * Additional filters to apply
 */
export interface Object_156 {
  [k: string]: unknown;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * URI of the resource
 */
export type String_577 = string;
export type String_578 = string;
/**
 * Description of the resource
 */
export type String_579 = string;
/**
 * URL to the resource icon
 */
export type String_580 = string;
/**
 * The name of the tool
 */
export type String_581 = string;
/**
 * The description of the tool
 */
export type String_582 = string;
/**
 * Creation timestamp
 */
export type String_583 = string;
/**
 * Last update timestamp
 */
export type String_584 = string;
/**
 * User who created the resource
 */
export type String_585 = string;
/**
 * User who last updated the resource
 */
export type String_586 = string;
/**
 * Array of matching resources
 */
export type Array_81 = Object_157[];
/**
 * Total number of matching resources
 */
export type Integer_11 = number;
/**
 * Current page number
 */
export type Integer_12 = number;
/**
 * Number of items per page
 */
export type Integer_13 = number;
/**
 * Total number of pages
 */
export type Integer_14 = number;
/**
 * Whether there are more pages available
 */
export type Boolean_60 = boolean;
/**
 * Whether there are previous pages available
 */
export type Boolean_61 = boolean;

export interface DECO_RESOURCE_TOOL_SEARCHOutput {
  items: Array_81;
  totalCount: Integer_11;
  page: Integer_12;
  pageSize: Integer_13;
  totalPages: Integer_14;
  hasNextPage: Boolean_60;
  hasPreviousPage: Boolean_61;
}
export interface Object_157 {
  uri: String_577;
  /**
   * Resource data with required name
   */
  data: Object_158 & Object_159;
  created_at?: String_583;
  updated_at?: String_584;
  created_by?: String_585;
  updated_by?: String_586;
}
export interface Object_158 {
  name: String_578;
  description?: String_579;
  icon?: String_580;
}
export interface Object_159 {
  name: String_581;
  description: String_582;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * URI of the resource to update
 */
export type String_587 = string;
/**
 * The name of the tool
 */
export type String_588 = string;
/**
 * The description of the tool
 */
export type String_589 = string;
/**
 * Inline ES module code with default export function. The code will be saved to /src/functions/{name}.ts
 */
export type String_590 = string;
/**
 * The integration ID (format: i:<uuid>) that this tool depends on
 */
export type String_591 = string;
/**
 * List of tool names from this integration that will be used by this tool. If undefined, all tools from the integration are available (backwards compatibility).
 *
 * @minItems 1
 */
export type Array_83 = [String_592, ...String_592[]];
export type String_592 = string;
/**
 * List of integration dependencies with specific tools. These integrations and their tools must be installed and available for the tool to execute successfully. Use INTEGRATIONS_LIST to find available integration IDs and their tools.
 */
export type Array_82 = Object_163[];

export interface DECO_RESOURCE_TOOL_UPDATEInput {
  uri: String_587;
  data: Object_160;
}
/**
 * Updated resource data
 */
export interface Object_160 {
  name: String_588;
  description: String_589;
  inputSchema: Object_161;
  outputSchema: Object_162;
  execute: String_590;
  dependencies?: Array_82;
}
/**
 * The JSON schema of the input of the tool
 */
export interface Object_161 {
  [k: string]: unknown;
}
/**
 * The JSON schema of the output of the tool
 */
export interface Object_162 {
  [k: string]: unknown;
}
export interface Object_163 {
  integrationId: String_591;
  toolNames?: Array_83;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * URI of the updated resource
 */
export type String_593 = string;
/**
 * The name of the tool
 */
export type String_594 = string;
/**
 * The description of the tool
 */
export type String_595 = string;
/**
 * Inline ES module code with default export function. The code will be saved to /src/functions/{name}.ts
 */
export type String_596 = string;
/**
 * The integration ID (format: i:<uuid>) that this tool depends on
 */
export type String_597 = string;
/**
 * List of tool names from this integration that will be used by this tool. If undefined, all tools from the integration are available (backwards compatibility).
 *
 * @minItems 1
 */
export type Array_85 = [String_598, ...String_598[]];
export type String_598 = string;
/**
 * List of integration dependencies with specific tools. These integrations and their tools must be installed and available for the tool to execute successfully. Use INTEGRATIONS_LIST to find available integration IDs and their tools.
 */
export type Array_84 = Object_167[];
/**
 * Original creation timestamp
 */
export type String_599 = string;
/**
 * Last update timestamp
 */
export type String_600 = string;
/**
 * User who originally created the resource
 */
export type String_601 = string;
/**
 * User who last updated the resource
 */
export type String_602 = string;

export interface DECO_RESOURCE_TOOL_UPDATEOutput {
  uri: String_593;
  data: Object_164;
  created_at?: String_599;
  updated_at?: String_600;
  created_by?: String_601;
  updated_by?: String_602;
}
/**
 * Updated resource data
 */
export interface Object_164 {
  name: String_594;
  description: String_595;
  inputSchema: Object_165;
  outputSchema: Object_166;
  execute: String_596;
  dependencies?: Array_84;
}
/**
 * The JSON schema of the input of the tool
 */
export interface Object_165 {
  [k: string]: unknown;
}
/**
 * The JSON schema of the output of the tool
 */
export interface Object_166 {
  [k: string]: unknown;
}
export interface Object_167 {
  integrationId: String_597;
  toolNames?: Array_85;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * The name/title of the view
 */
export type String_603 = string;
/**
 * A brief description of the view's purpose
 */
export type String_604 = string;
/**
 * The React component code for the view. Must define 'export const App = () => { ... }'. Import React hooks from 'react'. The code will be rendered using React 19.2.0, has access to Tailwind CSS v4, and can call tools via the global callTool() function.
 */
export type String_605 = string;
export type String_606 = string;
/**
 * Optional icon URL for the view. If not provided, a default icon will be used.
 */
export type String_607 = string;
export type String_608 = string;
/**
 * Optional tags for categorizing and searching views
 */
export type Array_86 = String_608[];

export interface DECO_RESOURCE_VIEW_CREATEInput {
  data: Object_168;
}
/**
 * Resource data to create
 */
export interface Object_168 {
  name: String_603;
  description: String_604;
  code?: String_605;
  importmap?: Object_169;
  icon?: String_607;
  tags?: Array_86;
}
/**
 * Optional import map for customizing module resolution. Defaults to React 19.2.0 imports. Example: { 'react': 'https://esm.sh/react@19.2.0', 'lodash': 'https://esm.sh/lodash' }
 */
export interface Object_169 {
  [k: string]: String_606;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * URI of the created resource
 */
export type String_609 = string;
/**
 * The name/title of the view
 */
export type String_610 = string;
/**
 * A brief description of the view's purpose
 */
export type String_611 = string;
/**
 * The React component code for the view. Must define 'export const App = () => { ... }'. Import React hooks from 'react'. The code will be rendered using React 19.2.0, has access to Tailwind CSS v4, and can call tools via the global callTool() function.
 */
export type String_612 = string;
export type String_613 = string;
/**
 * Optional icon URL for the view. If not provided, a default icon will be used.
 */
export type String_614 = string;
export type String_615 = string;
/**
 * Optional tags for categorizing and searching views
 */
export type Array_87 = String_615[];
/**
 * Creation timestamp
 */
export type String_616 = string;
/**
 * Last update timestamp
 */
export type String_617 = string;
/**
 * User who created the resource
 */
export type String_618 = string;

export interface DECO_RESOURCE_VIEW_CREATEOutput {
  uri: String_609;
  data: Object_170;
  created_at?: String_616;
  updated_at?: String_617;
  created_by?: String_618;
}
/**
 * Created resource data
 */
export interface Object_170 {
  name: String_610;
  description: String_611;
  code?: String_612;
  importmap?: Object_171;
  icon?: String_614;
  tags?: Array_87;
}
/**
 * Optional import map for customizing module resolution. Defaults to React 19.2.0 imports. Example: { 'react': 'https://esm.sh/react@19.2.0', 'lodash': 'https://esm.sh/lodash' }
 */
export interface Object_171 {
  [k: string]: String_613;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * URI of the resource to delete
 */
export type String_619 = string;

export interface DECO_RESOURCE_VIEW_DELETEInput {
  uri: String_619;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * Whether the deletion was successful
 */
export type Boolean_62 = boolean;
/**
 * URI of the deleted resource
 */
export type String_620 = string;

export interface DECO_RESOURCE_VIEW_DELETEOutput {
  success: Boolean_62;
  uri: String_620;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * URI of the resource to read
 */
export type String_621 = string;

export interface DECO_RESOURCE_VIEW_READInput {
  uri: String_621;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * URI of the resource
 */
export type String_622 = string;
/**
 * The name/title of the view
 */
export type String_623 = string;
/**
 * A brief description of the view's purpose
 */
export type String_624 = string;
/**
 * The React component code for the view. Must define 'export const App = () => { ... }'. Import React hooks from 'react'. The code will be rendered using React 19.2.0, has access to Tailwind CSS v4, and can call tools via the global callTool() function.
 */
export type String_625 = string;
export type String_626 = string;
/**
 * Optional icon URL for the view. If not provided, a default icon will be used.
 */
export type String_627 = string;
export type String_628 = string;
/**
 * Optional tags for categorizing and searching views
 */
export type Array_88 = String_628[];
/**
 * Creation timestamp
 */
export type String_629 = string;
/**
 * Last update timestamp
 */
export type String_630 = string;
/**
 * User who created the resource
 */
export type String_631 = string;
/**
 * User who last updated the resource
 */
export type String_632 = string;

export interface DECO_RESOURCE_VIEW_READOutput {
  uri: String_622;
  data: Object_172;
  created_at?: String_629;
  updated_at?: String_630;
  created_by?: String_631;
  updated_by?: String_632;
}
/**
 * Resource data
 */
export interface Object_172 {
  name: String_623;
  description: String_624;
  code?: String_625;
  importmap?: Object_173;
  icon?: String_627;
  tags?: Array_88;
}
/**
 * Optional import map for customizing module resolution. Defaults to React 19.2.0 imports. Example: { 'react': 'https://esm.sh/react@19.2.0', 'lodash': 'https://esm.sh/lodash' }
 */
export interface Object_173 {
  [k: string]: String_626;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * Search term to filter resources
 */
export type String_633 = string;
/**
 * Page number (1-based)
 */
export type Integer_15 = number;
/**
 * Number of items per page
 */
export type Integer_16 = number;
/**
 * Field to sort by
 */
export type String_634 = string;
/**
 * Sort order
 */
export type String_635 = "asc" | "desc";

export interface DECO_RESOURCE_VIEW_SEARCHInput {
  term?: String_633;
  page?: Integer_15;
  pageSize?: Integer_16;
  filters?: Object_174;
  sortBy?: String_634;
  sortOrder?: String_635;
}
/**
 * Additional filters to apply
 */
export interface Object_174 {
  [k: string]: unknown;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * URI of the resource
 */
export type String_636 = string;
export type String_637 = string;
/**
 * Description of the resource
 */
export type String_638 = string;
/**
 * URL to the resource icon
 */
export type String_639 = string;
/**
 * The name/title of the view
 */
export type String_640 = string;
/**
 * A brief description of the view's purpose
 */
export type String_641 = string;
/**
 * Creation timestamp
 */
export type String_642 = string;
/**
 * Last update timestamp
 */
export type String_643 = string;
/**
 * User who created the resource
 */
export type String_644 = string;
/**
 * User who last updated the resource
 */
export type String_645 = string;
/**
 * Array of matching resources
 */
export type Array_89 = Object_175[];
/**
 * Total number of matching resources
 */
export type Integer_17 = number;
/**
 * Current page number
 */
export type Integer_18 = number;
/**
 * Number of items per page
 */
export type Integer_19 = number;
/**
 * Total number of pages
 */
export type Integer_20 = number;
/**
 * Whether there are more pages available
 */
export type Boolean_63 = boolean;
/**
 * Whether there are previous pages available
 */
export type Boolean_64 = boolean;

export interface DECO_RESOURCE_VIEW_SEARCHOutput {
  items: Array_89;
  totalCount: Integer_17;
  page: Integer_18;
  pageSize: Integer_19;
  totalPages: Integer_20;
  hasNextPage: Boolean_63;
  hasPreviousPage: Boolean_64;
}
export interface Object_175 {
  uri: String_636;
  /**
   * Resource data with required name
   */
  data: Object_176 & Object_177;
  created_at?: String_642;
  updated_at?: String_643;
  created_by?: String_644;
  updated_by?: String_645;
}
export interface Object_176 {
  name: String_637;
  description?: String_638;
  icon?: String_639;
}
export interface Object_177 {
  name: String_640;
  description: String_641;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * URI of the resource to update
 */
export type String_646 = string;
/**
 * The name/title of the view
 */
export type String_647 = string;
/**
 * A brief description of the view's purpose
 */
export type String_648 = string;
/**
 * The React component code for the view. Must define 'export const App = () => { ... }'. Import React hooks from 'react'. The code will be rendered using React 19.2.0, has access to Tailwind CSS v4, and can call tools via the global callTool() function.
 */
export type String_649 = string;
export type String_650 = string;
/**
 * Optional icon URL for the view. If not provided, a default icon will be used.
 */
export type String_651 = string;
export type String_652 = string;
/**
 * Optional tags for categorizing and searching views
 */
export type Array_90 = String_652[];

export interface DECO_RESOURCE_VIEW_UPDATEInput {
  uri: String_646;
  data: Object_178;
}
/**
 * Updated resource data
 */
export interface Object_178 {
  name: String_647;
  description: String_648;
  code?: String_649;
  importmap?: Object_179;
  icon?: String_651;
  tags?: Array_90;
}
/**
 * Optional import map for customizing module resolution. Defaults to React 19.2.0 imports. Example: { 'react': 'https://esm.sh/react@19.2.0', 'lodash': 'https://esm.sh/lodash' }
 */
export interface Object_179 {
  [k: string]: String_650;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * URI of the updated resource
 */
export type String_653 = string;
/**
 * The name/title of the view
 */
export type String_654 = string;
/**
 * A brief description of the view's purpose
 */
export type String_655 = string;
/**
 * The React component code for the view. Must define 'export const App = () => { ... }'. Import React hooks from 'react'. The code will be rendered using React 19.2.0, has access to Tailwind CSS v4, and can call tools via the global callTool() function.
 */
export type String_656 = string;
export type String_657 = string;
/**
 * Optional icon URL for the view. If not provided, a default icon will be used.
 */
export type String_658 = string;
export type String_659 = string;
/**
 * Optional tags for categorizing and searching views
 */
export type Array_91 = String_659[];
/**
 * Original creation timestamp
 */
export type String_660 = string;
/**
 * Last update timestamp
 */
export type String_661 = string;
/**
 * User who originally created the resource
 */
export type String_662 = string;
/**
 * User who last updated the resource
 */
export type String_663 = string;

export interface DECO_RESOURCE_VIEW_UPDATEOutput {
  uri: String_653;
  data: Object_180;
  created_at?: String_660;
  updated_at?: String_661;
  created_by?: String_662;
  updated_by?: String_663;
}
/**
 * Updated resource data
 */
export interface Object_180 {
  name: String_654;
  description: String_655;
  code?: String_656;
  importmap?: Object_181;
  icon?: String_658;
  tags?: Array_91;
}
/**
 * Optional import map for customizing module resolution. Defaults to React 19.2.0 imports. Example: { 'react': 'https://esm.sh/react@19.2.0', 'lodash': 'https://esm.sh/lodash' }
 */
export interface Object_181 {
  [k: string]: String_657;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * The unique name of the workflow
 */
export type String_664 = string;
/**
 * A comprehensive description of what this workflow accomplishes
 */
export type String_665 = string;
/**
 * Array of workflow steps that execute sequentially. Each step can reference previous step outputs using @<step_name>.output.property syntax.
 *
 * @minItems 1
 */
export type Array_92 = [Object_183, ...Object_183[]];
/**
 * The unique name of the step within the workflow
 */
export type String_666 = string;
/**
 * The title of the step
 */
export type String_667 = string;
/**
 * A clear description of what this step does
 */
export type String_668 = string;
/**
 * ES module code that exports a default async function: (input: typeof inputSchema, ctx: { env: Record<string, any> }) => Promise<typeof outputSchema>. The input parameter contains the resolved input with all @ references replaced with actual values.
 */
export type String_669 = string;
/**
 * The integration ID (format: i:<uuid> or a:<uuid>) that this step depends on
 */
export type String_670 = string;
/**
 * List of tool names from this integration that will be used by this code step. If undefined, all tools from the integration are available.
 *
 * @minItems 1
 */
export type Array_94 = [String_671, ...String_671[]];
export type String_671 = string;
/**
 * List of integration dependencies with specific tools. These integrations and their tools must be installed and available for the step to execute successfully. Tools are accessible via ctx.env['{INTEGRATION_ID}']['{TOOL_NAME}'](). Use INTEGRATIONS_LIST to find available integration IDs and their tools.
 */
export type Array_93 = Object_187[];

export interface DECO_RESOURCE_WORKFLOW_CREATEInput {
  data: Object_182;
}
/**
 * Resource data to create
 */
export interface Object_182 {
  name: String_664;
  description: String_665;
  steps: Array_92;
}
export interface Object_183 {
  def: Object_184;
  input?: Object_188;
  output?: Object_189;
}
export interface Object_184 {
  name: String_666;
  title?: String_667;
  description: String_668;
  inputSchema?: Object_185;
  outputSchema?: Object_186;
  execute: String_669;
  dependencies?: Array_93;
}
/**
 * JSON Schema defining the input structure for this step
 */
export interface Object_185 {
  [k: string]: unknown;
}
/**
 * JSON Schema defining the output structure for this step
 */
export interface Object_186 {
  [k: string]: unknown;
}
export interface Object_187 {
  integrationId: String_670;
  toolNames?: Array_94;
}
/**
 * Input object that complies with inputSchema. Values can reference previous steps using @<step_name>.output.property or workflow input using @input.property
 */
export interface Object_188 {
  [k: string]: unknown;
}
/**
 * Execution output of the step (if it has been run)
 */
export interface Object_189 {
  [k: string]: unknown;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * URI of the created resource
 */
export type String_672 = string;
/**
 * The unique name of the workflow
 */
export type String_673 = string;
/**
 * A comprehensive description of what this workflow accomplishes
 */
export type String_674 = string;
/**
 * Array of workflow steps that execute sequentially. Each step can reference previous step outputs using @<step_name>.output.property syntax.
 *
 * @minItems 1
 */
export type Array_95 = [Object_191, ...Object_191[]];
/**
 * The unique name of the step within the workflow
 */
export type String_675 = string;
/**
 * The title of the step
 */
export type String_676 = string;
/**
 * A clear description of what this step does
 */
export type String_677 = string;
/**
 * ES module code that exports a default async function: (input: typeof inputSchema, ctx: { env: Record<string, any> }) => Promise<typeof outputSchema>. The input parameter contains the resolved input with all @ references replaced with actual values.
 */
export type String_678 = string;
/**
 * The integration ID (format: i:<uuid> or a:<uuid>) that this step depends on
 */
export type String_679 = string;
/**
 * List of tool names from this integration that will be used by this code step. If undefined, all tools from the integration are available.
 *
 * @minItems 1
 */
export type Array_97 = [String_680, ...String_680[]];
export type String_680 = string;
/**
 * List of integration dependencies with specific tools. These integrations and their tools must be installed and available for the step to execute successfully. Tools are accessible via ctx.env['{INTEGRATION_ID}']['{TOOL_NAME}'](). Use INTEGRATIONS_LIST to find available integration IDs and their tools.
 */
export type Array_96 = Object_195[];
/**
 * Creation timestamp
 */
export type String_681 = string;
/**
 * Last update timestamp
 */
export type String_682 = string;
/**
 * User who created the resource
 */
export type String_683 = string;

export interface DECO_RESOURCE_WORKFLOW_CREATEOutput {
  uri: String_672;
  data: Object_190;
  created_at?: String_681;
  updated_at?: String_682;
  created_by?: String_683;
}
/**
 * Created resource data
 */
export interface Object_190 {
  name: String_673;
  description: String_674;
  steps: Array_95;
}
export interface Object_191 {
  def: Object_192;
  input?: Object_196;
  output?: Object_197;
}
export interface Object_192 {
  name: String_675;
  title?: String_676;
  description: String_677;
  inputSchema?: Object_193;
  outputSchema?: Object_194;
  execute: String_678;
  dependencies?: Array_96;
}
/**
 * JSON Schema defining the input structure for this step
 */
export interface Object_193 {
  [k: string]: unknown;
}
/**
 * JSON Schema defining the output structure for this step
 */
export interface Object_194 {
  [k: string]: unknown;
}
export interface Object_195 {
  integrationId: String_679;
  toolNames?: Array_97;
}
/**
 * Input object that complies with inputSchema. Values can reference previous steps using @<step_name>.output.property or workflow input using @input.property
 */
export interface Object_196 {
  [k: string]: unknown;
}
/**
 * Execution output of the step (if it has been run)
 */
export interface Object_197 {
  [k: string]: unknown;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * URI of the resource to delete
 */
export type String_684 = string;

export interface DECO_RESOURCE_WORKFLOW_DELETEInput {
  uri: String_684;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * Whether the deletion was successful
 */
export type Boolean_65 = boolean;
/**
 * URI of the deleted resource
 */
export type String_685 = string;

export interface DECO_RESOURCE_WORKFLOW_DELETEOutput {
  success: Boolean_65;
  uri: String_685;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * URI of the resource to read
 */
export type String_686 = string;

export interface DECO_RESOURCE_WORKFLOW_READInput {
  uri: String_686;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * URI of the resource
 */
export type String_687 = string;
/**
 * The unique name of the workflow
 */
export type String_688 = string;
/**
 * A comprehensive description of what this workflow accomplishes
 */
export type String_689 = string;
/**
 * Array of workflow steps that execute sequentially. Each step can reference previous step outputs using @<step_name>.output.property syntax.
 *
 * @minItems 1
 */
export type Array_98 = [Object_199, ...Object_199[]];
/**
 * The unique name of the step within the workflow
 */
export type String_690 = string;
/**
 * The title of the step
 */
export type String_691 = string;
/**
 * A clear description of what this step does
 */
export type String_692 = string;
/**
 * ES module code that exports a default async function: (input: typeof inputSchema, ctx: { env: Record<string, any> }) => Promise<typeof outputSchema>. The input parameter contains the resolved input with all @ references replaced with actual values.
 */
export type String_693 = string;
/**
 * The integration ID (format: i:<uuid> or a:<uuid>) that this step depends on
 */
export type String_694 = string;
/**
 * List of tool names from this integration that will be used by this code step. If undefined, all tools from the integration are available.
 *
 * @minItems 1
 */
export type Array_100 = [String_695, ...String_695[]];
export type String_695 = string;
/**
 * List of integration dependencies with specific tools. These integrations and their tools must be installed and available for the step to execute successfully. Tools are accessible via ctx.env['{INTEGRATION_ID}']['{TOOL_NAME}'](). Use INTEGRATIONS_LIST to find available integration IDs and their tools.
 */
export type Array_99 = Object_203[];
/**
 * Creation timestamp
 */
export type String_696 = string;
/**
 * Last update timestamp
 */
export type String_697 = string;
/**
 * User who created the resource
 */
export type String_698 = string;
/**
 * User who last updated the resource
 */
export type String_699 = string;

export interface DECO_RESOURCE_WORKFLOW_READOutput {
  uri: String_687;
  data: Object_198;
  created_at?: String_696;
  updated_at?: String_697;
  created_by?: String_698;
  updated_by?: String_699;
}
/**
 * Resource data
 */
export interface Object_198 {
  name: String_688;
  description: String_689;
  steps: Array_98;
}
export interface Object_199 {
  def: Object_200;
  input?: Object_204;
  output?: Object_205;
}
export interface Object_200 {
  name: String_690;
  title?: String_691;
  description: String_692;
  inputSchema?: Object_201;
  outputSchema?: Object_202;
  execute: String_693;
  dependencies?: Array_99;
}
/**
 * JSON Schema defining the input structure for this step
 */
export interface Object_201 {
  [k: string]: unknown;
}
/**
 * JSON Schema defining the output structure for this step
 */
export interface Object_202 {
  [k: string]: unknown;
}
export interface Object_203 {
  integrationId: String_694;
  toolNames?: Array_100;
}
/**
 * Input object that complies with inputSchema. Values can reference previous steps using @<step_name>.output.property or workflow input using @input.property
 */
export interface Object_204 {
  [k: string]: unknown;
}
/**
 * Execution output of the step (if it has been run)
 */
export interface Object_205 {
  [k: string]: unknown;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * URI of the resource to read
 */
export type String_700 = string;

export interface DECO_RESOURCE_WORKFLOW_RUN_READInput {
  uri: String_700;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * URI of the resource
 */
export type String_701 = string;
export type String_702 = string;
export type String_703 = string;
export type String_704 = string;
export type String_705 = string;
export type String_706 = string;
export type String_707 = string;
/**
 * The name of the step currently being executed (if running)
 */
export type String_708 = string;
/**
 * Error message if the workflow failed
 */
export type String_709 = string;
export type String_710 = "log" | "warn" | "error";
export type String_711 = string;
/**
 * Console logs from the execution
 */
export type Array_101 = Object_208[];
/**
 * When the workflow started (timestamp)
 */
export type Number_98 = number;
/**
 * When the workflow ended (timestamp, if completed/failed)
 */
export type Number_99 = number;
export type Array_102 = unknown[];
export type String_712 = string;
export type String_713 = string;
export type String_714 = string;
export type String_715 = string;
export type String_716 = string;
export type String_717 = string;
export type Null_51 = null;
export type String_718 = string;
export type String_719 = string;
export type String_720 = string;
export type StringNull_26 = String_721 | Null_52;
export type String_721 = string;
export type Null_52 = null;
export type StringNull_27 = String_722 | Null_53;
export type String_722 = string;
export type Null_53 = null;
export type BooleanNull_1 = Boolean_66 | Null_54;
export type Boolean_66 = boolean;
export type Null_54 = null;
export type String_723 = string;
export type String_724 = string;
export type StringNull_28 = String_725 | Null_55;
export type String_725 = string;
export type Null_55 = null;
export type StringNull_29 = String_726 | Null_56;
export type String_726 = string;
export type Null_56 = null;
export type BooleanNull_2 = Boolean_67 | Null_57;
export type Boolean_67 = boolean;
export type Null_57 = null;
export type String_727 = string;
export type String_728 = string;
export type Null_58 = null;
export type StringNull_30 = String_729 | Null_59;
export type String_729 = string;
export type Null_59 = null;
export type StringNull_31 = String_730 | Null_60;
export type String_730 = string;
export type Null_60 = null;
export type BooleanNull_3 = Boolean_68 | Null_61;
export type Boolean_68 = boolean;
export type Null_61 = null;
export type String_731 = string;
export type String_732 = string;
export type Null_62 = null;
export type Array_104 = Object_216[];
export type Array_103 = Object_214[];
export type String_733 = string;
export type String_734 = string;
export type Null_63 = null;
export type String_735 = string;
/**
 * Creation timestamp
 */
export type String_736 = string;
/**
 * Last update timestamp
 */
export type String_737 = string;
/**
 * User who created the resource
 */
export type String_738 = string;
/**
 * User who last updated the resource
 */
export type String_739 = string;

export interface DECO_RESOURCE_WORKFLOW_RUN_READOutput {
  uri: String_701;
  data: Object_206;
  created_at?: String_736;
  updated_at?: String_737;
  created_by?: String_738;
  updated_by?: String_739;
}
/**
 * Resource data
 */
export interface Object_206 {
  name: String_702;
  description?: String_703;
  icon?: String_704;
  status: String_705;
  runId: String_706;
  workflowURI?: String_707;
  currentStep?: String_708;
  stepResults?: Object_207;
  /**
   * The final workflow result (if completed)
   */
  finalResult?: {
    [k: string]: unknown;
  };
  /**
   * Partial results from completed steps (if pending/running)
   */
  partialResult?: {
    [k: string]: unknown;
  };
  error?: String_709;
  logs?: Array_101;
  startTime?: Number_98;
  endTime?: Number_99;
  workflowStatus?: Object_209;
}
/**
 * Results from completed steps
 */
export interface Object_207 {
  [k: string]: unknown;
}
export interface Object_208 {
  type: String_710;
  content: String_711;
}
export interface Object_209 {
  params?: Object_210 | Null_51;
  trigger?: Object_213;
  versionId?: String_719;
  queued?: String_720;
  start?: StringNull_26;
  end?: StringNull_27;
  success?: BooleanNull_1;
  steps?: Array_103;
  error?: Object_218 | Null_63;
  output?: unknown;
  status?: String_735;
  [k: string]: unknown;
}
export interface Object_210 {
  input?: unknown;
  steps?: Array_102;
  name?: String_712;
  context?: Object_211;
  [k: string]: unknown;
}
export interface Object_211 {
  workspace?: unknown;
  locator?: unknown;
  workflowURI?: String_713;
  startedBy?: Object_212;
  startedAt?: String_717;
  [k: string]: unknown;
}
export interface Object_212 {
  id: String_714;
  email?: String_715;
  name?: String_716;
}
export interface Object_213 {
  source: String_718;
  [k: string]: unknown;
}
export interface Object_214 {
  name?: String_723;
  type?: String_724;
  start?: StringNull_28;
  end?: StringNull_29;
  success?: BooleanNull_2;
  output?: unknown;
  error?: Object_215 | Null_58;
  attempts?: Array_104;
  config?: unknown;
  [k: string]: unknown;
}
export interface Object_215 {
  name?: String_727;
  message?: String_728;
}
export interface Object_216 {
  start?: StringNull_30;
  end?: StringNull_31;
  success?: BooleanNull_3;
  error?: Object_217 | Null_62;
}
export interface Object_217 {
  name?: String_731;
  message?: String_732;
}
export interface Object_218 {
  name?: String_733;
  message?: String_734;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * Search term to filter resources
 */
export type String_740 = string;
/**
 * Page number (1-based)
 */
export type Integer_21 = number;
/**
 * Number of items per page
 */
export type Integer_22 = number;
/**
 * Field to sort by
 */
export type String_741 = string;
/**
 * Sort order
 */
export type String_742 = "asc" | "desc";

export interface DECO_RESOURCE_WORKFLOW_RUN_SEARCHInput {
  term?: String_740;
  page?: Integer_21;
  pageSize?: Integer_22;
  filters?: Object_219;
  sortBy?: String_741;
  sortOrder?: String_742;
}
/**
 * Additional filters to apply
 */
export interface Object_219 {
  [k: string]: unknown;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * URI of the resource
 */
export type String_743 = string;
export type String_744 = string;
/**
 * Description of the resource
 */
export type String_745 = string;
/**
 * URL to the resource icon
 */
export type String_746 = string;
export type String_747 = string;
export type String_748 = string;
export type String_749 = string;
export type String_750 = string;
export type String_751 = string;
export type String_752 = string;
/**
 * The name of the step currently being executed (if running)
 */
export type String_753 = string;
/**
 * Error message if the workflow failed
 */
export type String_754 = string;
export type String_755 = "log" | "warn" | "error";
export type String_756 = string;
/**
 * Console logs from the execution
 */
export type Array_106 = Object_224[];
/**
 * When the workflow started (timestamp)
 */
export type Number_100 = number;
/**
 * When the workflow ended (timestamp, if completed/failed)
 */
export type Number_101 = number;
export type Array_107 = unknown[];
export type String_757 = string;
export type String_758 = string;
export type String_759 = string;
export type String_760 = string;
export type String_761 = string;
export type String_762 = string;
export type Null_64 = null;
export type String_763 = string;
export type String_764 = string;
export type String_765 = string;
export type StringNull_32 = String_766 | Null_65;
export type String_766 = string;
export type Null_65 = null;
export type StringNull_33 = String_767 | Null_66;
export type String_767 = string;
export type Null_66 = null;
export type BooleanNull_4 = Boolean_69 | Null_67;
export type Boolean_69 = boolean;
export type Null_67 = null;
export type String_768 = string;
export type String_769 = string;
export type StringNull_34 = String_770 | Null_68;
export type String_770 = string;
export type Null_68 = null;
export type StringNull_35 = String_771 | Null_69;
export type String_771 = string;
export type Null_69 = null;
export type BooleanNull_5 = Boolean_70 | Null_70;
export type Boolean_70 = boolean;
export type Null_70 = null;
export type String_772 = string;
export type String_773 = string;
export type Null_71 = null;
export type StringNull_36 = String_774 | Null_72;
export type String_774 = string;
export type Null_72 = null;
export type StringNull_37 = String_775 | Null_73;
export type String_775 = string;
export type Null_73 = null;
export type BooleanNull_6 = Boolean_71 | Null_74;
export type Boolean_71 = boolean;
export type Null_74 = null;
export type String_776 = string;
export type String_777 = string;
export type Null_75 = null;
export type Array_109 = Object_232[];
export type Array_108 = Object_230[];
export type String_778 = string;
export type String_779 = string;
export type Null_76 = null;
export type String_780 = string;
/**
 * Creation timestamp
 */
export type String_781 = string;
/**
 * Last update timestamp
 */
export type String_782 = string;
/**
 * User who created the resource
 */
export type String_783 = string;
/**
 * User who last updated the resource
 */
export type String_784 = string;
/**
 * Array of matching resources
 */
export type Array_105 = Object_220[];
/**
 * Total number of matching resources
 */
export type Integer_23 = number;
/**
 * Current page number
 */
export type Integer_24 = number;
/**
 * Number of items per page
 */
export type Integer_25 = number;
/**
 * Total number of pages
 */
export type Integer_26 = number;
/**
 * Whether there are more pages available
 */
export type Boolean_72 = boolean;
/**
 * Whether there are previous pages available
 */
export type Boolean_73 = boolean;

export interface DECO_RESOURCE_WORKFLOW_RUN_SEARCHOutput {
  items: Array_105;
  totalCount: Integer_23;
  page: Integer_24;
  pageSize: Integer_25;
  totalPages: Integer_26;
  hasNextPage: Boolean_72;
  hasPreviousPage: Boolean_73;
}
export interface Object_220 {
  uri: String_743;
  /**
   * Resource data with required name
   */
  data: Object_221 & Object_222;
  created_at?: String_781;
  updated_at?: String_782;
  created_by?: String_783;
  updated_by?: String_784;
}
export interface Object_221 {
  name: String_744;
  description?: String_745;
  icon?: String_746;
}
export interface Object_222 {
  name: String_747;
  description?: String_748;
  icon?: String_749;
  status: String_750;
  runId: String_751;
  workflowURI?: String_752;
  currentStep?: String_753;
  stepResults?: Object_223;
  /**
   * The final workflow result (if completed)
   */
  finalResult?: {
    [k: string]: unknown;
  };
  /**
   * Partial results from completed steps (if pending/running)
   */
  partialResult?: {
    [k: string]: unknown;
  };
  error?: String_754;
  logs?: Array_106;
  startTime?: Number_100;
  endTime?: Number_101;
  workflowStatus?: Object_225;
}
/**
 * Results from completed steps
 */
export interface Object_223 {
  [k: string]: unknown;
}
export interface Object_224 {
  type: String_755;
  content: String_756;
}
export interface Object_225 {
  params?: Object_226 | Null_64;
  trigger?: Object_229;
  versionId?: String_764;
  queued?: String_765;
  start?: StringNull_32;
  end?: StringNull_33;
  success?: BooleanNull_4;
  steps?: Array_108;
  error?: Object_234 | Null_76;
  output?: unknown;
  status?: String_780;
  [k: string]: unknown;
}
export interface Object_226 {
  input?: unknown;
  steps?: Array_107;
  name?: String_757;
  context?: Object_227;
  [k: string]: unknown;
}
export interface Object_227 {
  workspace?: unknown;
  locator?: unknown;
  workflowURI?: String_758;
  startedBy?: Object_228;
  startedAt?: String_762;
  [k: string]: unknown;
}
export interface Object_228 {
  id: String_759;
  email?: String_760;
  name?: String_761;
}
export interface Object_229 {
  source: String_763;
  [k: string]: unknown;
}
export interface Object_230 {
  name?: String_768;
  type?: String_769;
  start?: StringNull_34;
  end?: StringNull_35;
  success?: BooleanNull_5;
  output?: unknown;
  error?: Object_231 | Null_71;
  attempts?: Array_109;
  config?: unknown;
  [k: string]: unknown;
}
export interface Object_231 {
  name?: String_772;
  message?: String_773;
}
export interface Object_232 {
  start?: StringNull_36;
  end?: StringNull_37;
  success?: BooleanNull_6;
  error?: Object_233 | Null_75;
}
export interface Object_233 {
  name?: String_776;
  message?: String_777;
}
export interface Object_234 {
  name?: String_778;
  message?: String_779;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * Search term to filter resources
 */
export type String_785 = string;
/**
 * Page number (1-based)
 */
export type Integer_27 = number;
/**
 * Number of items per page
 */
export type Integer_28 = number;
/**
 * Field to sort by
 */
export type String_786 = string;
/**
 * Sort order
 */
export type String_787 = "asc" | "desc";

export interface DECO_RESOURCE_WORKFLOW_SEARCHInput {
  term?: String_785;
  page?: Integer_27;
  pageSize?: Integer_28;
  filters?: Object_235;
  sortBy?: String_786;
  sortOrder?: String_787;
}
/**
 * Additional filters to apply
 */
export interface Object_235 {
  [k: string]: unknown;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * URI of the resource
 */
export type String_788 = string;
export type String_789 = string;
/**
 * Description of the resource
 */
export type String_790 = string;
/**
 * URL to the resource icon
 */
export type String_791 = string;
/**
 * The unique name of the workflow
 */
export type String_792 = string;
/**
 * A comprehensive description of what this workflow accomplishes
 */
export type String_793 = string;
/**
 * Creation timestamp
 */
export type String_794 = string;
/**
 * Last update timestamp
 */
export type String_795 = string;
/**
 * User who created the resource
 */
export type String_796 = string;
/**
 * User who last updated the resource
 */
export type String_797 = string;
/**
 * Array of matching resources
 */
export type Array_110 = Object_236[];
/**
 * Total number of matching resources
 */
export type Integer_29 = number;
/**
 * Current page number
 */
export type Integer_30 = number;
/**
 * Number of items per page
 */
export type Integer_31 = number;
/**
 * Total number of pages
 */
export type Integer_32 = number;
/**
 * Whether there are more pages available
 */
export type Boolean_74 = boolean;
/**
 * Whether there are previous pages available
 */
export type Boolean_75 = boolean;

export interface DECO_RESOURCE_WORKFLOW_SEARCHOutput {
  items: Array_110;
  totalCount: Integer_29;
  page: Integer_30;
  pageSize: Integer_31;
  totalPages: Integer_32;
  hasNextPage: Boolean_74;
  hasPreviousPage: Boolean_75;
}
export interface Object_236 {
  uri: String_788;
  /**
   * Resource data with required name
   */
  data: Object_237 & Object_238;
  created_at?: String_794;
  updated_at?: String_795;
  created_by?: String_796;
  updated_by?: String_797;
}
export interface Object_237 {
  name: String_789;
  description?: String_790;
  icon?: String_791;
}
export interface Object_238 {
  name: String_792;
  description: String_793;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * URI of the resource to update
 */
export type String_798 = string;
/**
 * The unique name of the workflow
 */
export type String_799 = string;
/**
 * A comprehensive description of what this workflow accomplishes
 */
export type String_800 = string;
/**
 * Array of workflow steps that execute sequentially. Each step can reference previous step outputs using @<step_name>.output.property syntax.
 *
 * @minItems 1
 */
export type Array_111 = [Object_240, ...Object_240[]];
/**
 * The unique name of the step within the workflow
 */
export type String_801 = string;
/**
 * The title of the step
 */
export type String_802 = string;
/**
 * A clear description of what this step does
 */
export type String_803 = string;
/**
 * ES module code that exports a default async function: (input: typeof inputSchema, ctx: { env: Record<string, any> }) => Promise<typeof outputSchema>. The input parameter contains the resolved input with all @ references replaced with actual values.
 */
export type String_804 = string;
/**
 * The integration ID (format: i:<uuid> or a:<uuid>) that this step depends on
 */
export type String_805 = string;
/**
 * List of tool names from this integration that will be used by this code step. If undefined, all tools from the integration are available.
 *
 * @minItems 1
 */
export type Array_113 = [String_806, ...String_806[]];
export type String_806 = string;
/**
 * List of integration dependencies with specific tools. These integrations and their tools must be installed and available for the step to execute successfully. Tools are accessible via ctx.env['{INTEGRATION_ID}']['{TOOL_NAME}'](). Use INTEGRATIONS_LIST to find available integration IDs and their tools.
 */
export type Array_112 = Object_244[];

export interface DECO_RESOURCE_WORKFLOW_UPDATEInput {
  uri: String_798;
  data: Object_239;
}
/**
 * Updated resource data
 */
export interface Object_239 {
  name: String_799;
  description: String_800;
  steps: Array_111;
}
export interface Object_240 {
  def: Object_241;
  input?: Object_245;
  output?: Object_246;
}
export interface Object_241 {
  name: String_801;
  title?: String_802;
  description: String_803;
  inputSchema?: Object_242;
  outputSchema?: Object_243;
  execute: String_804;
  dependencies?: Array_112;
}
/**
 * JSON Schema defining the input structure for this step
 */
export interface Object_242 {
  [k: string]: unknown;
}
/**
 * JSON Schema defining the output structure for this step
 */
export interface Object_243 {
  [k: string]: unknown;
}
export interface Object_244 {
  integrationId: String_805;
  toolNames?: Array_113;
}
/**
 * Input object that complies with inputSchema. Values can reference previous steps using @<step_name>.output.property or workflow input using @input.property
 */
export interface Object_245 {
  [k: string]: unknown;
}
/**
 * Execution output of the step (if it has been run)
 */
export interface Object_246 {
  [k: string]: unknown;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * URI of the updated resource
 */
export type String_807 = string;
/**
 * The unique name of the workflow
 */
export type String_808 = string;
/**
 * A comprehensive description of what this workflow accomplishes
 */
export type String_809 = string;
/**
 * Array of workflow steps that execute sequentially. Each step can reference previous step outputs using @<step_name>.output.property syntax.
 *
 * @minItems 1
 */
export type Array_114 = [Object_248, ...Object_248[]];
/**
 * The unique name of the step within the workflow
 */
export type String_810 = string;
/**
 * The title of the step
 */
export type String_811 = string;
/**
 * A clear description of what this step does
 */
export type String_812 = string;
/**
 * ES module code that exports a default async function: (input: typeof inputSchema, ctx: { env: Record<string, any> }) => Promise<typeof outputSchema>. The input parameter contains the resolved input with all @ references replaced with actual values.
 */
export type String_813 = string;
/**
 * The integration ID (format: i:<uuid> or a:<uuid>) that this step depends on
 */
export type String_814 = string;
/**
 * List of tool names from this integration that will be used by this code step. If undefined, all tools from the integration are available.
 *
 * @minItems 1
 */
export type Array_116 = [String_815, ...String_815[]];
export type String_815 = string;
/**
 * List of integration dependencies with specific tools. These integrations and their tools must be installed and available for the step to execute successfully. Tools are accessible via ctx.env['{INTEGRATION_ID}']['{TOOL_NAME}'](). Use INTEGRATIONS_LIST to find available integration IDs and their tools.
 */
export type Array_115 = Object_252[];
/**
 * Original creation timestamp
 */
export type String_816 = string;
/**
 * Last update timestamp
 */
export type String_817 = string;
/**
 * User who originally created the resource
 */
export type String_818 = string;
/**
 * User who last updated the resource
 */
export type String_819 = string;

export interface DECO_RESOURCE_WORKFLOW_UPDATEOutput {
  uri: String_807;
  data: Object_247;
  created_at?: String_816;
  updated_at?: String_817;
  created_by?: String_818;
  updated_by?: String_819;
}
/**
 * Updated resource data
 */
export interface Object_247 {
  name: String_808;
  description: String_809;
  steps: Array_114;
}
export interface Object_248 {
  def: Object_249;
  input?: Object_253;
  output?: Object_254;
}
export interface Object_249 {
  name: String_810;
  title?: String_811;
  description: String_812;
  inputSchema?: Object_250;
  outputSchema?: Object_251;
  execute: String_813;
  dependencies?: Array_115;
}
/**
 * JSON Schema defining the input structure for this step
 */
export interface Object_250 {
  [k: string]: unknown;
}
/**
 * JSON Schema defining the output structure for this step
 */
export interface Object_251 {
  [k: string]: unknown;
}
export interface Object_252 {
  integrationId: String_814;
  toolNames?: Array_116;
}
/**
 * Input object that complies with inputSchema. Values can reference previous steps using @<step_name>.output.property or workflow input using @input.property
 */
export interface Object_253 {
  [k: string]: unknown;
}
/**
 * Execution output of the step (if it has been run)
 */
export interface Object_254 {
  [k: string]: unknown;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * The URI of the tool to run
 */
export type String_820 = string;
/**
 * The token to use for the tool execution
 */
export type String_821 = string;

export interface DECO_TOOL_CALL_TOOLInput {
  uri: String_820;
  input: Object_255;
  authorization?: String_821;
}
/**
 * The input of the code
 */
export interface Object_255 {
  [k: string]: unknown;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type String_822 = "log" | "warn" | "error";
export type String_823 = string;
/**
 * Console logs from the execution
 */
export type Array_117 = Object_256[];

export interface DECO_TOOL_CALL_TOOLOutput {
  /**
   * The result of the tool execution
   */
  result?: {
    [k: string]: unknown;
  };
  /**
   * Error if any
   */
  error?: {
    [k: string]: unknown;
  };
  logs?: Array_117;
}
export interface Object_256 {
  type: String_822;
  content: String_823;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * The name of the tool
 */
export type String_824 = string;
/**
 * The description of the tool
 */
export type String_825 = string;
/**
 * Inline ES module code with default export function. The code will be saved to /src/functions/{name}.ts
 */
export type String_826 = string;
/**
 * The integration ID (format: i:<uuid>) that this tool depends on
 */
export type String_827 = string;
/**
 * List of tool names from this integration that will be used by this tool. If undefined, all tools from the integration are available (backwards compatibility).
 *
 * @minItems 1
 */
export type Array_119 = [String_828, ...String_828[]];
export type String_828 = string;
/**
 * List of integration dependencies with specific tools. These integrations and their tools must be installed and available for the tool to execute successfully. Use INTEGRATIONS_LIST to find available integration IDs and their tools.
 */
export type Array_118 = Object_260[];
/**
 * The token to use for the tool execution
 */
export type String_829 = string;

export interface DECO_TOOL_RUN_TOOLInput {
  tool: Object_257;
  input: Object_261;
  authorization?: String_829;
}
export interface Object_257 {
  name: String_824;
  description: String_825;
  inputSchema: Object_258;
  outputSchema: Object_259;
  execute: String_826;
  dependencies?: Array_118;
}
/**
 * The JSON schema of the input of the tool
 */
export interface Object_258 {
  [k: string]: unknown;
}
/**
 * The JSON schema of the output of the tool
 */
export interface Object_259 {
  [k: string]: unknown;
}
export interface Object_260 {
  integrationId: String_827;
  toolNames?: Array_119;
}
/**
 * The input of the code
 */
export interface Object_261 {
  [k: string]: unknown;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type String_830 = "log" | "warn" | "error";
export type String_831 = string;
/**
 * Console logs from the execution
 */
export type Array_120 = Object_262[];

export interface DECO_TOOL_RUN_TOOLOutput {
  /**
   * The result of the tool execution
   */
  result?: {
    [k: string]: unknown;
  };
  /**
   * Error if any
   */
  error?: {
    [k: string]: unknown;
  };
  logs?: Array_120;
}
export interface Object_262 {
  type: String_830;
  content: String_831;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * URI of the resource to render in the view
 */
export type String_832 = string;

export interface DECO_VIEW_RENDER_DOCUMENT_DETAILInput {
  resource: String_832;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * URL to render the view
 */
export type String_833 = string;
/**
 * Optional LLM prompt for this view context
 */
export type String_834 = string;
export type String_835 = string;
/**
 * Optional array of tool names for this view context
 */
export type Array_121 = String_835[];

export interface DECO_VIEW_RENDER_DOCUMENT_DETAILOutput {
  url: String_833;
  prompt?: String_834;
  tools?: Array_121;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * URI of the resource to render in the view
 */
export type String_836 = string;

export interface DECO_VIEW_RENDER_TOOL_DETAILInput {
  resource: String_836;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * URL to render the view
 */
export type String_837 = string;
/**
 * Optional LLM prompt for this view context
 */
export type String_838 = string;
export type String_839 = string;
/**
 * Optional array of tool names for this view context
 */
export type Array_122 = String_839[];

export interface DECO_VIEW_RENDER_TOOL_DETAILOutput {
  url: String_837;
  prompt?: String_838;
  tools?: Array_122;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * URI of the resource to render in the view
 */
export type String_840 = string;

export interface DECO_VIEW_RENDER_VIEW_DETAILInput {
  resource: String_840;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * URL to render the view
 */
export type String_841 = string;
/**
 * Optional LLM prompt for this view context
 */
export type String_842 = string;
export type String_843 = string;
/**
 * Optional array of tool names for this view context
 */
export type Array_123 = String_843[];

export interface DECO_VIEW_RENDER_VIEW_DETAILOutput {
  url: String_841;
  prompt?: String_842;
  tools?: Array_123;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * URI of the resource to render in the view
 */
export type String_844 = string;

export interface DECO_VIEW_RENDER_WORKFLOW_DETAILInput {
  resource: String_844;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * URL to render the view
 */
export type String_845 = string;
/**
 * Optional LLM prompt for this view context
 */
export type String_846 = string;
export type String_847 = string;
/**
 * Optional array of tool names for this view context
 */
export type Array_124 = String_847[];

export interface DECO_VIEW_RENDER_WORKFLOW_DETAILOutput {
  url: String_845;
  prompt?: String_846;
  tools?: Array_124;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * URI of the resource to render in the view
 */
export type String_848 = string;

export interface DECO_VIEW_RENDER_WORKFLOW_RUNInput {
  resource: String_848;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * URL to render the view
 */
export type String_849 = string;
/**
 * Optional LLM prompt for this view context
 */
export type String_850 = string;
export type String_851 = string;
/**
 * Optional array of tool names for this view context
 */
export type Array_125 = String_851[];

export interface DECO_VIEW_RENDER_WORKFLOW_RUNOutput {
  url: String_849;
  prompt?: String_850;
  tools?: Array_125;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * The Resources 2.0 URI of the workflow to execute
 */
export type String_852 = string;
/**
 * Optional step name where execution should halt. The workflow will execute up to and including this step, then stop. Useful for partial execution, debugging, or step-by-step testing.
 */
export type String_853 = string;

export interface DECO_WORKFLOW_STARTInput {
  uri: String_852;
  input: Object_263;
  stopAfter?: String_853;
  state?: Object_264;
}
/**
 * The input data that will be validated against the workflow's input schema and passed to the first step
 */
export interface Object_263 {
  [k: string]: unknown;
}
/**
 * Optional pre-computed step results to inject into the workflow state. Format: { 'step-name': STEP_RESULT }. Allows skipping steps by providing their expected outputs, useful for resuming workflows or testing with known intermediate results.
 */
export interface Object_264 {
  [k: string]: unknown;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * The unique ID for tracking this workflow run
 */
export type String_854 = string;
/**
 * The Resources 2.0 URI of the workflow run (rsc://i:workflows-management/workflow_run/{runId}). Use DECO_RESOURCE_WORKFLOW_RUN_READ to get status and results.
 */
export type String_855 = string;
/**
 * Error message if workflow start failed
 */
export type String_856 = string;

export interface DECO_WORKFLOW_STARTOutput {
  runId?: String_854;
  uri?: String_855;
  error?: String_856;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * The name of the branch to delete
 */
export type String_857 = string;

export interface DELETE_BRANCHInput {
  branchName: String_857;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type Boolean_76 = boolean;
export type String_858 = string;
export type Number_102 = number;

export interface DELETE_BRANCHOutput {
  deleted: Boolean_76;
  branchName: String_858;
  filesDeleted?: Number_102;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * The branch name
 */
export type String_859 = string;
/**
 * The file path within the branch
 */
export type String_860 = string;

export interface DELETE_FILEInput {
  branch?: String_859;
  path: String_860;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type Boolean_77 = boolean;

export interface DELETE_FILEOutput {
  deleted: Boolean_77;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * The base branch to compare from (defaults to 'main')
 */
export type String_861 = string;
/**
 * The branch to compare against
 */
export type String_862 = string;

export interface DIFF_BRANCHInput {
  baseBranch?: String_861;
  compareBranch: String_862;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type String_863 = string;
export type String_864 = "added" | "modified" | "deleted";
export type String_865 = string;
export type String_866 = string;
export type Array_126 = Object_265[];

export interface DIFF_BRANCHOutput {
  differences: Array_126;
}
export interface Object_265 {
  path: String_863;
  type: String_864;
  baseAddress?: String_865;
  compareAddress?: String_866;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type String_867 = string;

export interface FS_DELETEInput {
  path: String_867;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export interface FS_DELETEOutput {}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * The root directory to list files from
 */
export type String_868 = string;

export interface FS_LISTInput {
  prefix: String_868;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type Array_127 = unknown[];

export interface FS_LISTOutput {
  items: Array_127;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type String_869 = string;
/**
 * Seconds until URL expires (default: 60)
 */
export type Number_103 = number;

export interface FS_READInput {
  path: String_869;
  expiresIn?: Number_103;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * The URL to read the file from
 */
export type String_870 = string;

export interface FS_READOutput {
  url: String_870;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type String_871 = string;

export interface FS_READ_METADATAInput {
  path: String_871;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export interface FS_READ_METADATAOutput {}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type String_872 = string;
/**
 * Seconds until URL expires (default: 60)
 */
export type Number_104 = number;
/**
 * Content-Type for the file. This is required.
 */
export type String_873 = string;

export interface FS_WRITEInput {
  path: String_872;
  expiresIn?: Number_104;
  contentType: String_873;
  metadata?: Object_266;
}
/**
 * Metadata to be added to the file
 */
export interface Object_266 {
  [k: string]: unknown;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * The URL to upload the file to
 */
export type String_874 = string;

export interface FS_WRITEOutput {
  url: String_874;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type String_875 = "day" | "week" | "month";

export interface GET_AGENTS_USAGEInput {
  range: String_875;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type String_876 = string;
export type String_877 = string;
export type StringNull_38 = String_878 | Null_77;
export type String_878 = string;
export type Null_77 = null;
export type Number_105 = number;
export type String_879 = string;
export type String_880 = string;
export type Number_106 = number;
export type StringNull_39 = String_881 | Null_78;
export type String_881 = string;
export type Null_78 = null;
export type StringNull_40 = String_882 | Null_79;
export type String_882 = string;
export type Null_79 = null;
export type Array_129 = Object_268[];
export type Array_128 = Object_267[];

export interface GET_AGENTS_USAGEOutput {
  total: String_876;
  items: Array_128;
}
export interface Object_267 {
  id: String_877;
  label?: StringNull_38;
  total: Number_105;
  transactions: Array_129;
}
export interface Object_268 {
  id: String_879;
  timestamp: String_880;
  amount: Number_106;
  agentId?: StringNull_39;
  generatedBy?: StringNull_40;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type String_883 = "day" | "week" | "month" | "year";

export interface GET_BILLING_HISTORYInput {
  range: String_883;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type String_884 = string;
export type String_885 = string;
export type String_886 = string;
export type String_887 = string;
export type StringNull_41 = String_888 | Null_80;
export type String_888 = string;
export type Null_80 = null;
export type StringNull_42 = String_889 | Null_81;
export type String_889 = string;
export type Null_81 = null;
export type Array_130 = Object_269[];

export interface GET_BILLING_HISTORYOutput {
  items: Array_130;
}
export interface Object_269 {
  id: String_884;
  amount: String_885;
  timestamp: String_886;
  type: String_887;
  contractId?: StringNull_41;
  callerApp?: StringNull_42;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type String_890 = "day" | "week" | "month" | "year";

export interface GET_CONTRACTS_COMMITSInput {
  range: String_890;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type String_891 = string;
export type Number_107 = number;
export type String_892 = string;
export type StringNull_43 = String_893 | Null_82;
export type String_893 = string;
export type Null_82 = null;
export type String_894 = string;
export type Number_108 = number;
export type Array_132 = Object_271[];
export type String_895 = string;
export type String_896 = string;
export type Array_131 = Object_270[];

export interface GET_CONTRACTS_COMMITSOutput {
  items: Array_131;
}
export interface Object_270 {
  id: String_891;
  amount: Number_107;
  contractId: String_892;
  callerApp?: StringNull_43;
  clauses: Array_132;
  timestamp: String_895;
  type: String_896;
}
export interface Object_271 {
  clauseId: String_894;
  amount: Number_108;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type String_897 = "day" | "week" | "month";

export interface GET_THREADS_USAGEInput {
  range: String_897;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export interface GET_THREADS_USAGEOutput {}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export interface GET_WALLET_ACCOUNTInput {}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type String_898 = string;
export type String_899 = string;

export interface GET_WALLET_ACCOUNTOutput {
  balance: String_898;
  balanceExact: String_899;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export interface GET_WORKSPACE_PLANInput {}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export interface GET_WORKSPACE_PLANOutput {}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type String_900 = string;

export interface HOSTING_APP_DELETEInput {
  appSlug: String_900;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export interface HOSTING_APP_DELETEOutput {}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * If true, force the deployment even if there are breaking changes
 */
export type Boolean_78 = boolean;
/**
 * If true, promotes the deployment to production routes. The deployment will be available at a unique URL but won't replace the production version.
 */
export type Boolean_79 = boolean;
/**
 * The slug identifier for the app, if not provided, you should use the wrangler.toml file to determine the slug (using the name field).
 */
export type String_901 = string;
export type String_902 = string;
export type String_903 = string;
export type Boolean_80 = boolean;
/**
 * An array of files with their paths and contents. Must include main.ts as entrypoint and package.json for dependencies
 */
export type Array_133 = Object_272[];
export type String_904 = string;
/**
 * If false, skip the bundler step and upload the files as-is. Default: true (bundle files)
 */
export type Boolean_81 = boolean;
/**
 * Whether the app should be unlisted in the registry. Default: true (unlisted)
 */
export type Boolean_82 = boolean;

export interface HOSTING_APP_DEPLOYInput {
  force?: Boolean_78;
  promote?: Boolean_79;
  appSlug?: String_901;
  files: Array_133;
  envVars?: Object_273;
  bundle?: Boolean_81;
  unlisted?: Boolean_82;
}
export interface Object_272 {
  path: String_902;
  content: String_903;
  asset?: Boolean_80;
}
/**
 * An optional object of environment variables to be set on the worker
 */
export interface Object_273 {
  [k: string]: String_904;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * The entrypoint of the app
 */
export type String_905 = string;
export type String_906 = string;
/**
 * The hosts of the app
 */
export type Array_134 = String_906[];
/**
 * The id of the app
 */
export type String_907 = string;
/**
 * The workspace of the app
 */
export type StringNull_44 = String_908 | Null_83;
export type String_908 = string;
export type Null_83 = null;
/**
 * The deployment id of the app
 */
export type String_909 = string;

export interface HOSTING_APP_DEPLOYOutput {
  entrypoint: String_905;
  hosts: Array_134;
  id: String_907;
  workspace: StringNull_44;
  deploymentId?: String_909;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type String_910 = string;

export interface HOSTING_APP_DEPLOYMENTS_LISTInput {
  appSlug: String_910;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * The deployment ID
 */
export type String_911 = string;
/**
 * The Cloudflare worker ID
 */
export type StringNull_45 = String_912 | Null_84;
export type String_912 = string;
export type Null_84 = null;
/**
 * The deployment entrypoint URL
 */
export type String_913 = string;
/**
 * When the deployment was created
 */
export type String_914 = string;
/**
 * When the deployment was last updated
 */
export type String_915 = string;
export type Array_135 = Object_274[];
export type String_916 = string;
export type String_917 = string;
export type String_918 = string;
export type String_919 = string;

export interface HOSTING_APP_DEPLOYMENTS_LISTOutput {
  deployments: Array_135;
  app: Object_275;
}
export interface Object_274 {
  id: String_911;
  cloudflare_deployment_id: StringNull_45;
  entrypoint: String_913;
  created_at: String_914;
  updated_at: String_915;
}
export interface Object_275 {
  id: String_916;
  slug: String_917;
  workspace: String_918;
  project_id: String_919;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type String_920 = string;

export interface HOSTING_APP_INFOInput {
  appSlug: String_920;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export interface HOSTING_APP_INFOOutput {}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export interface HOSTING_APP_WORKFLOWS_LIST_NAMESInput {}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type String_921 = string;
/**
 * List of unique workflow names
 */
export type Array_136 = String_921[];

export interface HOSTING_APP_WORKFLOWS_LIST_NAMESOutput {
  workflowNames: Array_136;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type Number_109 = number;
export type Number_110 = number;
/**
 * Optional: The name of the workflow to list runs for. If not provided, shows recent runs from any workflow.
 */
export type String_922 = string;
export type String_923 = string;
export type String_924 = string;

export interface HOSTING_APP_WORKFLOWS_LIST_RUNSInput {
  page?: Number_109;
  per_page?: Number_110;
  workflowName?: String_922;
  fromDate?: String_923;
  toDate?: String_924;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type String_925 = string;
export type String_926 = string;
export type Number_111 = number;
export type NumberNull_7 = Number_112 | Null_85;
export type Number_112 = number;
export type Null_85 = null;
export type String_927 = string;
/**
 * The workflow runs
 */
export type Array_137 = Object_276[];
export type Number_113 = number;
export type Number_114 = number;
export type Number_115 = number;
export type Number_116 = number;
export type Number_117 = number;
export type Number_118 = number;
export type Number_119 = number;
export type String_928 = string;
export type Null_86 = null;
export type Number_120 = number;
export type String_929 = string;
export type Null_87 = null;
export type Number_121 = number;
export type Number_122 = number;

export interface HOSTING_APP_WORKFLOWS_LIST_RUNSOutput {
  runs: Array_137;
  stats: Object_277;
  pagination: Object_280;
}
export interface Object_276 {
  workflowName: String_925;
  runId: String_926;
  createdAt: Number_111;
  updatedAt?: NumberNull_7;
  status: String_927;
}
/**
 * Workflow statistics
 */
export interface Object_277 {
  totalRuns: Number_113;
  successCount: Number_114;
  errorCount: Number_115;
  runningCount: Number_116;
  pendingCount: Number_117;
  successRate: Number_118;
  firstRun: Object_278 | Null_86;
  lastRun: Object_279 | Null_87;
}
export interface Object_278 {
  date: Number_119;
  status: String_928;
}
export interface Object_279 {
  date: Number_120;
  status: String_929;
}
export interface Object_280 {
  page?: Number_121;
  per_page?: Number_122;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * The instance ID of the workflow. To get this, use the HOSTING_APP_WORKFLOWS_INSTANCES_LIST or HOSTING_APP_WORKFLOWS_START tool.
 */
export type String_930 = string;
export type String_931 = string;

export interface HOSTING_APP_WORKFLOWS_STATUSInput {
  instanceId: String_930;
  workflowName: String_931;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export interface HOSTING_APP_WORKFLOWS_STATUSOutput {}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export interface HOSTING_APPS_LISTInput {}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type String_932 = string;
export type String_933 = string;
export type Array_138 = Object_281[];

export interface HOSTING_APPS_LISTOutput {
  items: Array_138;
}
export interface Object_281 {
  slug?: String_932;
  entrypoint: String_933;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * The deployment ID to promote
 */
export type String_934 = string;
/**
 * Route pattern to promote the deployment to (can be custom domain or .deco.page)
 */
export type String_935 = string;

export interface HOSTING_APPS_PROMOTEInput {
  deploymentId: String_934;
  routePattern: String_935;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * Whether the promotion was successful
 */
export type Boolean_83 = boolean;
/**
 * The route pattern that was promoted
 */
export type String_936 = string;

export interface HOSTING_APPS_PROMOTEOutput {
  success: Boolean_83;
  promotedRoute: String_936;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type String_937 = string;
export type String_938 = "HTTP";
export type String_939 = string;
export type String_940 = string;
export type String_941 = "SSE";
export type String_942 = string;
export type String_943 = string;
export type String_944 = string;
export type String_945 = "Websocket";
export type String_946 = string;
export type String_947 = string;
export type String_948 = "Deco";
export type String_949 = string;
export type String_950 = string;
export type String_951 = "INNATE";
export type String_952 = string;
export type String_953 = string;
export type String_954 = string;
export type Integer_33 = number;
export type String_955 = string;

export interface INTEGRATIONS_CALL_TOOLInput_1 {
  id?: String_937;
  connection?: Object_282 | Object_283 | Object_285 | Object_286 | Object_287;
  params: Object_288;
}
export interface Object_282 {
  type: String_938;
  url: String_939;
  token?: String_940;
}
export interface Object_283 {
  type: String_941;
  url: String_942;
  token?: String_943;
  headers?: Object_284;
}
export interface Object_284 {
  [k: string]: String_944;
}
export interface Object_285 {
  type: String_945;
  url: String_946;
  token?: String_947;
}
export interface Object_286 {
  type: String_948;
  tenant: String_949;
  token?: String_950;
}
export interface Object_287 {
  type: String_951;
  name: String_952;
  workspace?: String_953;
}
export interface Object_288 {
  _meta?: Object_289;
  name: String_955;
  arguments?: Object_290;
  [k: string]: unknown;
}
export interface Object_289 {
  progressToken?: String_954 | Integer_33;
  [k: string]: unknown;
}
export interface Object_290 {
  [k: string]: unknown;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export interface INTEGRATIONS_CALL_TOOLOutput_1 {}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type String_956 = string;
export type String_957 = string;
export type String_958 = string;
export type String_959 = string;
export type String_960 = string;
export type Null_88 = null;
export type String_961 = string;
export type Null_89 = null;
export type String_962 = "HTTP";
export type String_963 = string;
export type String_964 = string;
export type String_965 = "SSE";
export type String_966 = string;
export type String_967 = string;
export type String_968 = string;
export type String_969 = "Websocket";
export type String_970 = string;
export type String_971 = string;
export type String_972 = "Deco";
export type String_973 = string;
export type String_974 = string;
export type String_975 = "INNATE";
export type String_976 = string;
export type String_977 = string;
export type Null_90 = null;
/**
 * The name of the tool
 */
export type String_978 = string;
/**
 * The description of the tool
 */
export type String_979 = string;
export type Array_139 = (Object_298 & Object_300)[];
export type Null_91 = null;
export type String_980 = string;

export interface INTEGRATIONS_CREATEInput {
  id?: String_956;
  name?: String_957;
  description?: String_958;
  icon?: String_959;
  access?:
    | (
        | {
            [k: string]: unknown;
          }
        | String_960
      )
    | Null_88;
  appId?:
    | (
        | {
            [k: string]: unknown;
          }
        | String_961
      )
    | Null_89;
  connection?: Object_291 | Object_292 | Object_294 | Object_295 | Object_296;
  metadata?: Object_297 | Null_90;
  tools?: Array_139 | Null_91;
  clientIdFromApp?: String_980;
}
export interface Object_291 {
  type: String_962;
  url: String_963;
  token?: String_964;
}
export interface Object_292 {
  type: String_965;
  url: String_966;
  token?: String_967;
  headers?: Object_293;
}
export interface Object_293 {
  [k: string]: String_968;
}
export interface Object_294 {
  type: String_969;
  url: String_970;
  token?: String_971;
}
export interface Object_295 {
  type: String_972;
  tenant: String_973;
  token?: String_974;
}
export interface Object_296 {
  type: String_975;
  name: String_976;
  workspace?: String_977;
}
export interface Object_297 {
  [k: string]: unknown;
}
export interface Object_298 {
  name: String_978;
  inputSchema: Object_299;
}
/**
 * The JSON schema of the input of the tool
 */
export interface Object_299 {
  [k: string]: unknown;
}
export interface Object_300 {
  description?: String_979;
  outputSchema?: Object_301;
}
/**
 * The JSON schema of the output of the tool
 */
export interface Object_301 {
  [k: string]: unknown;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export interface INTEGRATIONS_CREATEOutput {}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type String_981 = string;

export interface INTEGRATIONS_DELETEInput {
  id: String_981;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export interface INTEGRATIONS_DELETEOutput {}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type String_982 = string;

export interface INTEGRATIONS_GETInput {
  id: String_982;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export interface INTEGRATIONS_GETOutput {}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type String_983 = string;

export interface INTEGRATIONS_GET_API_KEYInput {
  integrationId: String_983;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export interface INTEGRATIONS_GET_API_KEYOutput {}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type String_984 = "Channel" | "View";
export type Boolean_84 = boolean;

export interface INTEGRATIONS_LISTInput {
  binder?: String_984;
  hideVirtual?: Boolean_84;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type String_985 = string;
export type String_986 = string;
export type String_987 = string;
export type String_988 = string;
export type String_989 = string;
export type Null_92 = null;
export type String_990 = string;
export type Null_93 = null;
export type String_991 = string;
export type Null_94 = null;
export type String_992 = "HTTP";
export type String_993 = string;
export type String_994 = string;
export type String_995 = "SSE";
export type String_996 = string;
export type String_997 = string;
export type String_998 = string;
export type String_999 = "Websocket";
export type String_1000 = string;
export type String_1001 = string;
export type String_1002 = "Deco";
export type String_1003 = string;
export type String_1004 = string;
export type String_1005 = "INNATE";
export type String_1006 = string;
export type String_1007 = string;
export type Null_95 = null;
/**
 * The name of the tool
 */
export type String_1008 = string;
/**
 * The description of the tool
 */
export type String_1009 = string;
export type Array_141 = (Object_310 & Object_312)[];
export type Null_96 = null;
export type Array_140 = Object_302[];

export interface INTEGRATIONS_LISTOutput {
  items: Array_140;
}
export interface Object_302 {
  id: String_985;
  name: String_986;
  description?: String_987;
  icon?: String_988;
  access?:
    | (
        | {
            [k: string]: unknown;
          }
        | String_989
      )
    | Null_92;
  appName?:
    | (
        | {
            [k: string]: unknown;
          }
        | String_990
      )
    | Null_93;
  appId?:
    | (
        | {
            [k: string]: unknown;
          }
        | String_991
      )
    | Null_94;
  connection: Object_303 | Object_304 | Object_306 | Object_307 | Object_308;
  metadata?: Object_309 | Null_95;
  tools?: Array_141 | Null_96;
}
export interface Object_303 {
  type: String_992;
  url: String_993;
  token?: String_994;
}
export interface Object_304 {
  type: String_995;
  url: String_996;
  token?: String_997;
  headers?: Object_305;
}
export interface Object_305 {
  [k: string]: String_998;
}
export interface Object_306 {
  type: String_999;
  url: String_1000;
  token?: String_1001;
}
export interface Object_307 {
  type: String_1002;
  tenant: String_1003;
  token?: String_1004;
}
export interface Object_308 {
  type: String_1005;
  name: String_1006;
  workspace?: String_1007;
}
export interface Object_309 {
  [k: string]: unknown;
}
export interface Object_310 {
  name: String_1008;
  inputSchema: Object_311;
}
/**
 * The JSON schema of the input of the tool
 */
export interface Object_311 {
  [k: string]: unknown;
}
export interface Object_312 {
  description?: String_1009;
  outputSchema?: Object_313;
}
/**
 * The JSON schema of the output of the tool
 */
export interface Object_313 {
  [k: string]: unknown;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type String_1010 = string;
export type String_1011 = string;
export type String_1012 = string;
export type String_1013 = string;
export type String_1014 = string;
export type String_1015 = string;
export type Null_97 = null;
export type String_1016 = string;
export type Null_98 = null;
export type String_1017 = string;
export type Null_99 = null;
export type String_1018 = "HTTP";
export type String_1019 = string;
export type String_1020 = string;
export type String_1021 = "SSE";
export type String_1022 = string;
export type String_1023 = string;
export type String_1024 = string;
export type String_1025 = "Websocket";
export type String_1026 = string;
export type String_1027 = string;
export type String_1028 = "Deco";
export type String_1029 = string;
export type String_1030 = string;
export type String_1031 = "INNATE";
export type String_1032 = string;
export type String_1033 = string;
export type Null_100 = null;
/**
 * The name of the tool
 */
export type String_1034 = string;
/**
 * The description of the tool
 */
export type String_1035 = string;
export type Array_142 = (Object_322 & Object_324)[];
export type Null_101 = null;

export interface INTEGRATIONS_UPDATEInput {
  id: String_1010;
  integration: Object_314;
}
export interface Object_314 {
  id: String_1011;
  name: String_1012;
  description?: String_1013;
  icon?: String_1014;
  access?:
    | (
        | {
            [k: string]: unknown;
          }
        | String_1015
      )
    | Null_97;
  appName?:
    | (
        | {
            [k: string]: unknown;
          }
        | String_1016
      )
    | Null_98;
  appId?:
    | (
        | {
            [k: string]: unknown;
          }
        | String_1017
      )
    | Null_99;
  connection: Object_315 | Object_316 | Object_318 | Object_319 | Object_320;
  metadata?: Object_321 | Null_100;
  tools?: Array_142 | Null_101;
}
export interface Object_315 {
  type: String_1018;
  url: String_1019;
  token?: String_1020;
}
export interface Object_316 {
  type: String_1021;
  url: String_1022;
  token?: String_1023;
  headers?: Object_317;
}
export interface Object_317 {
  [k: string]: String_1024;
}
export interface Object_318 {
  type: String_1025;
  url: String_1026;
  token?: String_1027;
}
export interface Object_319 {
  type: String_1028;
  tenant: String_1029;
  token?: String_1030;
}
export interface Object_320 {
  type: String_1031;
  name: String_1032;
  workspace?: String_1033;
}
export interface Object_321 {
  [k: string]: unknown;
}
export interface Object_322 {
  name: String_1034;
  inputSchema: Object_323;
}
/**
 * The JSON schema of the input of the tool
 */
export interface Object_323 {
  [k: string]: unknown;
}
export interface Object_324 {
  description?: String_1035;
  outputSchema?: Object_325;
}
/**
 * The JSON schema of the output of the tool
 */
export interface Object_325 {
  [k: string]: unknown;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export interface INTEGRATIONS_UPDATEOutput {}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type String_1036 = string;
/**
 * File path from file added using workspace fs_write tool
 */
export type String_1037 = string;
/**
 * The name of the file
 */
export type String_1038 = string;
export type StringBoolean = String_1039 | Boolean_85;
export type String_1039 = string;
export type Boolean_85 = boolean;

export interface KNOWLEDGE_BASE_ADD_FILEInput {
  fileUrl: String_1036;
  path?: String_1037;
  filename?: String_1038;
  metadata?: Object_326;
}
export interface Object_326 {
  [k: string]: StringBoolean;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export interface KNOWLEDGE_BASE_ADD_FILEOutput {}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * The name of the knowledge base
 */
export type String_1040 = string;
/**
 * The dimension of the knowledge base
 */
export type Number_123 = number;

export interface KNOWLEDGE_BASE_CREATEInput {
  name: String_1040;
  dimension?: Number_123;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export interface KNOWLEDGE_BASE_CREATEOutput {}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * The name of the knowledge base
 */
export type String_1041 = string;

export interface KNOWLEDGE_BASE_DELETEInput {
  name: String_1041;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export interface KNOWLEDGE_BASE_DELETEOutput {}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type String_1042 = string;

export interface KNOWLEDGE_BASE_DELETE_FILEInput {
  fileUrl: String_1042;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export interface KNOWLEDGE_BASE_DELETE_FILEOutput {}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type String_1043 = string;
/**
 * The id of the content to forget
 */
export type Array_143 = String_1043[];

export interface KNOWLEDGE_BASE_FORGETInput {
  docIds: Array_143;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export interface KNOWLEDGE_BASE_FORGETOutput {}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export interface KNOWLEDGE_BASE_LISTInput {}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export interface KNOWLEDGE_BASE_LISTOutput {}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export interface KNOWLEDGE_BASE_LIST_FILESInput {}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type Array_144 = unknown[];

export interface KNOWLEDGE_BASE_LIST_FILESOutput {
  items: Array_144;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * The id of the content being remembered
 */
export type String_1044 = string;
/**
 * The content to remember
 */
export type String_1045 = string;
export type String_1046 = string;

export interface KNOWLEDGE_BASE_REMEMBERInput {
  docId?: String_1044;
  content: String_1045;
  metadata?: Object_327;
}
/**
 * The metadata to remember
 */
export interface Object_327 {
  [k: string]: String_1046;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export interface KNOWLEDGE_BASE_REMEMBEROutput {}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * The query to search the knowledge base
 */
export type String_1047 = string;
/**
 * The number of results to return
 */
export type Number_124 = number;
/**
 * Whether to return the content
 */
export type Boolean_86 = boolean;

export interface KNOWLEDGE_BASE_SEARCHInput {
  query: String_1047;
  topK?: Number_124;
  content?: Boolean_86;
  filter?: Object_328;
}
/**
 * Filters to match against document metadata and narrow search results. Supports MongoDB-style query operators:
 *         comparison ($eq, $ne, $gt, $gte, $lt, $lte), array ($in, $nin), logical ($and, $or), and existence ($exists).
 *         Only returns documents whose metadata matches the specified filter conditions.
 *         Examples:
 *         { "metadata": {{"category": "documents"}},
 *         { "metadata": {{"priority": {"$gte": 3}}},
 *         { "metadata": {{"status": {"$in": ["active", "pending"]}}},
 *         { "metadata": {{"$and": [{"type": "pdf"}, {"size": {"$lt": 1000}}]}}}
 */
export interface Object_328 {
  [k: string]: unknown;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export interface KNOWLEDGE_BASE_SEARCHOutput {}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * Optional prefix to filter branch names
 */
export type String_1048 = string;

export interface LIST_BRANCHESInput {
  prefix?: String_1048;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type String_1049 = string;
export type Number_125 = number;
export type StringNull_46 = String_1050 | Null_102;
export type String_1050 = string;
export type Null_102 = null;
export type Array_145 = Object_329[];
export type Number_126 = number;

export interface LIST_BRANCHESOutput {
  branches: Array_145;
  count: Number_126;
}
export interface Object_329 {
  name: String_1049;
  createdAt: Number_125;
  metadata: Object_330;
  originBranch: StringNull_46;
}
export interface Object_330 {
  [k: string]: unknown;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * The branch name
 */
export type String_1051 = string;
/**
 * Optional prefix to filter files (use select instead)
 */
export type String_1052 = string;
export type String_1053 = string;
/**
 * Optional list of files to select
 */
export type Array_146 = String_1053[];
/**
 * Include file content as base64 in the response
 */
export type Boolean_87 = boolean;

export interface LIST_FILESInput {
  branch?: String_1051;
  prefix?: String_1052;
  select?: Array_146;
  includeContent?: Boolean_87;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type String_1054 = string;
export type Number_127 = number;
export type Number_128 = number;
export type Number_129 = number;
export type String_1055 = string;
export type Number_130 = number;

export interface LIST_FILESOutput {
  files: Object_331;
  count: Number_130;
}
export interface Object_331 {
  [k: string]: Object_332;
}
export interface Object_332 {
  address: String_1054;
  metadata: Object_333;
  sizeInBytes: Number_127;
  mtime: Number_128;
  ctime: Number_129;
  content?: String_1055;
}
export interface Object_333 {
  [k: string]: unknown;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * The branch to merge into (defaults to 'main')
 */
export type String_1056 = string;
/**
 * The branch to merge from
 */
export type String_1057 = string;
/**
 * Merge strategy
 */
export type String_1058 = "OVERRIDE" | "LAST_WRITE_WINS";

export interface MERGE_BRANCHInput {
  targetBranch?: String_1056;
  sourceBranch: String_1057;
  strategy: String_1058;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type Number_131 = number;
export type String_1059 = string;
export type Array_147 = String_1059[];
export type String_1060 = string;
export type Array_148 = String_1060[];
export type String_1061 = string;
export type Array_149 = String_1061[];
export type String_1062 = string;
export type String_1063 = "local" | "remote";
export type Number_132 = number;
export type Number_133 = number;
export type Array_150 = Object_334[];

export interface MERGE_BRANCHOutput {
  filesMerged: Number_131;
  added: Array_147;
  modified: Array_148;
  deleted: Array_149;
  conflicts?: Array_150;
}
export interface Object_334 {
  path: String_1062;
  resolved: String_1063;
  localMtime: Number_132;
  remoteMtime: Number_133;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type String_1064 = string;
export type String_1065 = string;
export type String_1066 = string;
export type String_1067 = string;
export type Boolean_88 = boolean;
export type Boolean_89 = boolean;

export interface MODELS_CREATEInput {
  name: String_1064;
  model: String_1065;
  apiKey?: String_1066;
  description?: String_1067;
  byDeco?: Boolean_88;
  isEnabled?: Boolean_89;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export interface MODELS_CREATEOutput {}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type String_1068 = string;

export interface MODELS_DELETEInput {
  id: String_1068;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export interface MODELS_DELETEOutput {}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type String_1069 = string;

export interface MODELS_GETInput {
  id: String_1069;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export interface MODELS_GETOutput {}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type Boolean_90 = boolean;
export type Boolean_91 = boolean;

export interface MODELS_LISTInput {
  excludeDisabled?: Boolean_90;
  excludeAuto?: Boolean_91;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type Array_151 = unknown[];

export interface MODELS_LISTOutput {
  items: Array_151;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type String_1070 = string;
export type String_1071 = string;
export type String_1072 = string;
export type StringNull_47 = String_1073 | Null_103;
export type String_1073 = string;
export type Null_103 = null;
export type Boolean_92 = boolean;
export type Boolean_93 = boolean;
export type String_1074 = string;

export interface MODELS_UPDATEInput {
  id: String_1070;
  data: Object_335;
}
export interface Object_335 {
  name?: String_1071;
  model?: String_1072;
  apiKey?: StringNull_47;
  isEnabled?: Boolean_92;
  byDeco?: Boolean_93;
  description?: String_1074;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export interface MODELS_UPDATEOutput {}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * The ID of the integration to create an OAuth code for
 */
export type String_1075 = string;

export interface OAUTH_CODE_CREATEInput {
  integrationId: String_1075;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * The OAuth code
 */
export type String_1076 = string;

export interface OAUTH_CODE_CREATEOutput {
  code: String_1076;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * The amount (in microdollars) of money to pre-authorize. Specified in USD dollars.
 */
export type StringNumber_2 = String_1077 | Number_134;
export type String_1077 = string;
export type Number_134 = number;

export interface PRE_AUTHORIZE_AMOUNTInput {
  amount: StringNumber_2;
  metadata?: Object_336;
}
export interface Object_336 {
  [k: string]: unknown;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type String_1078 = string;

export interface PRE_AUTHORIZE_AMOUNTOutput {
  id: String_1078;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type String_1079 = string;
export type String_1080 = string;
export type String_1081 = string;

export interface PROMPTS_CREATEInput {
  name: String_1079;
  description?: String_1080;
  content: String_1081;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type String_1082 = string;
export type String_1083 = string;
export type StringNull_48 = String_1084 | Null_104;
export type String_1084 = string;
export type Null_104 = null;
export type String_1085 = string;
export type BooleanNull_7 = Boolean_94 | Null_105;
export type Boolean_94 = boolean;
export type Null_105 = null;
export type String_1086 = string;
export type StringNull_49 = String_1087 | Null_106;
export type String_1087 = string;
export type Null_106 = null;

export interface PROMPTS_CREATEOutput {
  id: String_1082;
  name: String_1083;
  description: StringNull_48;
  content: String_1085;
  readonly?: BooleanNull_7;
  created_at: String_1086;
  updated_at?: StringNull_49;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type String_1088 = string;

export interface PROMPTS_DELETEInput {
  id: String_1088;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * Whether the deletion was successful
 */
export type Boolean_95 = boolean;

export interface PROMPTS_DELETEOutput {
  success: Boolean_95;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type String_1089 = string;

export interface PROMPTS_GETInput {
  id: String_1089;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export interface PROMPTS_GETOutput {}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type String_1090 = string;
export type Number_135 = number;
export type Number_136 = number;

export interface PROMPTS_GET_VERSIONSInput {
  id: String_1090;
  limit?: Number_135;
  offset?: Number_136;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type StringNull_50 = String_1091 | Null_107;
export type String_1091 = string;
export type Null_107 = null;
export type String_1092 = string;
export type StringNull_51 = String_1093 | Null_108;
export type String_1093 = string;
export type Null_108 = null;
export type String_1094 = string;
export type StringNull_52 = String_1095 | Null_109;
export type String_1095 = string;
export type Null_109 = null;
export type String_1096 = string;
export type StringNull_53 = String_1097 | Null_110;
export type String_1097 = string;
export type Null_110 = null;
export type Array_152 = Object_337[];

export interface PROMPTS_GET_VERSIONSOutput {
  items: Array_152;
}
export interface Object_337 {
  content: StringNull_50;
  created_at: String_1092;
  created_by: StringNull_51;
  id: String_1094;
  name: StringNull_52;
  prompt_id: String_1096;
  version_name: StringNull_53;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type String_1098 = string;
/**
 * Filter prompts by ids
 */
export type Array_153 = String_1098[];
/**
 * Resolve mentions in the prompts
 */
export type Boolean_96 = boolean;
export type String_1099 = string;
/**
 * Exclude prompts by ids
 */
export type Array_154 = String_1099[];

export interface PROMPTS_LISTInput {
  ids?: Array_153;
  resolveMentions?: Boolean_96;
  excludeIds?: Array_154;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type String_1100 = string;
export type String_1101 = string;
export type StringNull_54 = String_1102 | Null_111;
export type String_1102 = string;
export type Null_111 = null;
export type String_1103 = string;
export type BooleanNull_8 = Boolean_97 | Null_112;
export type Boolean_97 = boolean;
export type Null_112 = null;
export type String_1104 = string;
export type StringNull_55 = String_1105 | Null_113;
export type String_1105 = string;
export type Null_113 = null;
export type Array_155 = Object_338[];

export interface PROMPTS_LISTOutput {
  items: Array_155;
}
export interface Object_338 {
  id: String_1100;
  name: String_1101;
  description: StringNull_54;
  content: String_1103;
  readonly?: BooleanNull_8;
  created_at: String_1104;
  updated_at?: StringNull_55;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type String_1106 = string;
export type String_1107 = string;

export interface PROMPTS_RENAME_VERSIONInput {
  id: String_1106;
  versionName: String_1107;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * The id of the version
 */
export type String_1108 = string;
/**
 * The id of the prompt
 */
export type String_1109 = string;
/**
 * The name of the version
 */
export type StringNull_56 = String_1110 | Null_114;
export type String_1110 = string;
export type Null_114 = null;
/**
 * The content of the version
 */
export type StringNull_57 = String_1111 | Null_115;
export type String_1111 = string;
export type Null_115 = null;
/**
 * The version name
 */
export type StringNull_58 = String_1112 | Null_116;
export type String_1112 = string;
export type Null_116 = null;
/**
 * The user who created the version
 */
export type StringNull_59 = String_1113 | Null_117;
export type String_1113 = string;
export type Null_117 = null;
/**
 * The date and time the version was created
 */
export type String_1114 = string;

export interface PROMPTS_RENAME_VERSIONOutput {
  id: String_1108;
  prompt_id: String_1109;
  name?: StringNull_56;
  content?: StringNull_57;
  version_name?: StringNull_58;
  created_by?: StringNull_59;
  created_at: String_1114;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type String_1115 = string;
export type String_1116 = string;
export type String_1117 = string;
export type Null_118 = null;
export type String_1118 = string;
export type String_1119 = string;

export interface PROMPTS_UPDATEInput {
  id: String_1115;
  data: Object_339;
  versionName?: String_1119;
}
export interface Object_339 {
  name?: String_1116;
  description?:
    | (
        | {
            [k: string]: unknown;
          }
        | String_1117
      )
    | Null_118;
  content?: String_1118;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type String_1120 = string;
export type String_1121 = string;
export type StringNull_60 = String_1122 | Null_119;
export type String_1122 = string;
export type Null_119 = null;
export type String_1123 = string;
export type BooleanNull_9 = Boolean_98 | Null_120;
export type Boolean_98 = boolean;
export type Null_120 = null;
export type String_1124 = string;
export type StringNull_61 = String_1125 | Null_121;
export type String_1125 = string;
export type Null_121 = null;

export interface PROMPTS_UPDATEOutput {
  id: String_1120;
  name: String_1121;
  description: StringNull_60;
  content: String_1123;
  readonly?: BooleanNull_9;
  created_at: String_1124;
  updated_at?: StringNull_61;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * The branch name
 */
export type String_1126 = string;
/**
 * The file path within the branch
 */
export type String_1127 = string;
/**
 * Plain text string content
 */
export type String_1128 = string;
/**
 * Base64 encoded content
 */
export type String_1129 = string;
export type Number_137 = number;
/**
 * Array of bytes (0-255)
 */
export type Array_156 = Number_137[];
/**
 * Expected change time for conflict detection
 */
export type Number_138 = number;

export interface PUT_FILEInput {
  branch?: String_1126;
  path: String_1127;
  /**
   * The file content as plain string, base64 object, or array of bytes
   */
  content: String_1128 | Object_340 | Array_156;
  metadata?: Object_341;
  expectedCtime?: Number_138;
}
export interface Object_340 {
  base64: String_1129;
}
/**
 * Additional metadata key-value pairs
 */
export interface Object_341 {
  [k: string]: unknown;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type Boolean_99 = boolean;

export interface PUT_FILEOutput {
  conflict?: Boolean_99;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * The branch name
 */
export type String_1130 = string;
/**
 * The file path within the branch
 */
export type String_1131 = string;
/**
 * Return format: 'base64' (default), 'byteArray', 'plainString', or 'json'
 */
export type String_1132 = "base64" | "byteArray" | "plainString" | "json";

export interface READ_FILEInput {
  branch?: String_1130;
  path: String_1131;
  format?: String_1132;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type String_1133 = string;
export type Number_139 = number;
export type Number_140 = number;

export interface READ_FILEOutput {
  content?: unknown;
  address: String_1133;
  metadata: Object_342;
  mtime: Number_139;
  ctime: Number_140;
}
export interface Object_342 {
  [k: string]: unknown;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type String_1134 = string;

export interface REDEEM_VOUCHERInput {
  voucher: String_1134;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type String_1135 = string;

export interface REDEEM_VOUCHEROutput {
  voucherId: String_1135;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * Search term to filter apps by name or description
 */
export type String_1136 = string;
/**
 * Filter apps by scope name
 */
export type String_1137 = string;

export interface REGISTRY_LIST_APPSInput {
  search?: String_1136;
  scopeName?: String_1137;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type String_1138 = string;
export type StringNull_62 = String_1139 | Null_122;
export type String_1139 = string;
export type Null_122 = null;
export type String_1140 = string;
export type String_1141 = string;
export type String_1142 = string;
export type String_1143 = string;
export type String_1144 = string;
export type String_1145 = string;
export type String_1146 = "HTTP";
export type String_1147 = string;
export type String_1148 = string;
export type String_1149 = "SSE";
export type String_1150 = string;
export type String_1151 = string;
export type String_1152 = string;
export type String_1153 = "Websocket";
export type String_1154 = string;
export type String_1155 = string;
export type String_1156 = "Deco";
export type String_1157 = string;
export type String_1158 = string;
export type String_1159 = "INNATE";
export type String_1160 = string;
export type String_1161 = string;
export type String_1162 = string;
export type String_1163 = string;
export type Boolean_100 = boolean;
export type String_1164 = string;
export type Boolean_101 = boolean;
export type String_1165 = string;
export type String_1166 = string;
export type String_1167 = string;
export type Array_158 = Object_350[];
export type Null_123 = null;
export type Array_157 = Object_343[];

export interface REGISTRY_LIST_APPSOutput {
  apps: Array_157;
}
export interface Object_343 {
  id: String_1138;
  workspace: StringNull_62;
  scopeId: String_1140;
  scopeName: String_1141;
  appName: String_1142;
  name: String_1143;
  description?: String_1144;
  icon?: String_1145;
  connection: Object_344 | Object_345 | Object_347 | Object_348 | Object_349;
  createdAt: String_1162;
  updatedAt: String_1163;
  unlisted: Boolean_100;
  friendlyName?: String_1164;
  verified?: Boolean_101;
  tools?: Array_158;
  metadata?: Object_354 | Null_123;
}
export interface Object_344 {
  type: String_1146;
  url: String_1147;
  token?: String_1148;
}
export interface Object_345 {
  type: String_1149;
  url: String_1150;
  token?: String_1151;
  headers?: Object_346;
}
export interface Object_346 {
  [k: string]: String_1152;
}
export interface Object_347 {
  type: String_1153;
  url: String_1154;
  token?: String_1155;
}
export interface Object_348 {
  type: String_1156;
  tenant: String_1157;
  token?: String_1158;
}
export interface Object_349 {
  type: String_1159;
  name: String_1160;
  workspace?: String_1161;
}
export interface Object_350 {
  id: String_1165;
  name: String_1166;
  description?: String_1167;
  inputSchema: Object_351;
  outputSchema?: Object_352;
  metadata?: Object_353;
}
export interface Object_351 {
  [k: string]: unknown;
}
export interface Object_352 {
  [k: string]: unknown;
}
export interface Object_353 {
  [k: string]: unknown;
}
export interface Object_354 {
  [k: string]: unknown;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * Search term to filter apps by name or description
 */
export type String_1168 = string;

export interface REGISTRY_LIST_PUBLISHED_APPSInput {
  search?: String_1168;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type String_1169 = string;
export type StringNull_63 = String_1170 | Null_124;
export type String_1170 = string;
export type Null_124 = null;
export type String_1171 = string;
export type String_1172 = string;
export type String_1173 = string;
export type String_1174 = string;
export type String_1175 = string;
export type String_1176 = string;
export type String_1177 = "HTTP";
export type String_1178 = string;
export type String_1179 = string;
export type String_1180 = "SSE";
export type String_1181 = string;
export type String_1182 = string;
export type String_1183 = string;
export type String_1184 = "Websocket";
export type String_1185 = string;
export type String_1186 = string;
export type String_1187 = "Deco";
export type String_1188 = string;
export type String_1189 = string;
export type String_1190 = "INNATE";
export type String_1191 = string;
export type String_1192 = string;
export type String_1193 = string;
export type String_1194 = string;
export type Boolean_102 = boolean;
export type String_1195 = string;
export type Boolean_103 = boolean;
export type String_1196 = string;
export type String_1197 = string;
export type String_1198 = string;
export type Array_160 = Object_362[];
export type Null_125 = null;
export type Array_159 = Object_355[];

export interface REGISTRY_LIST_PUBLISHED_APPSOutput {
  apps: Array_159;
}
export interface Object_355 {
  id: String_1169;
  workspace: StringNull_63;
  scopeId: String_1171;
  scopeName: String_1172;
  appName: String_1173;
  name: String_1174;
  description?: String_1175;
  icon?: String_1176;
  connection: Object_356 | Object_357 | Object_359 | Object_360 | Object_361;
  createdAt: String_1193;
  updatedAt: String_1194;
  unlisted: Boolean_102;
  friendlyName?: String_1195;
  verified?: Boolean_103;
  tools?: Array_160;
  metadata?: Object_366 | Null_125;
}
export interface Object_356 {
  type: String_1177;
  url: String_1178;
  token?: String_1179;
}
export interface Object_357 {
  type: String_1180;
  url: String_1181;
  token?: String_1182;
  headers?: Object_358;
}
export interface Object_358 {
  [k: string]: String_1183;
}
export interface Object_359 {
  type: String_1184;
  url: String_1185;
  token?: String_1186;
}
export interface Object_360 {
  type: String_1187;
  tenant: String_1188;
  token?: String_1189;
}
export interface Object_361 {
  type: String_1190;
  name: String_1191;
  workspace?: String_1192;
}
export interface Object_362 {
  id: String_1196;
  name: String_1197;
  description?: String_1198;
  inputSchema: Object_363;
  outputSchema?: Object_364;
  metadata?: Object_365;
}
export interface Object_363 {
  [k: string]: unknown;
}
export interface Object_364 {
  [k: string]: unknown;
}
export interface Object_365 {
  [k: string]: unknown;
}
export interface Object_366 {
  [k: string]: unknown;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * Search term to filter scopes by name
 */
export type String_1199 = string;

export interface REGISTRY_LIST_SCOPESInput {
  search?: String_1199;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type String_1200 = string;
export type String_1201 = string;
export type StringNull_64 = String_1202 | Null_126;
export type String_1202 = string;
export type Null_126 = null;
export type StringNull_65 = String_1203 | Null_127;
export type String_1203 = string;
export type Null_127 = null;
export type String_1204 = string;
export type String_1205 = string;
export type Array_161 = Object_367[];

export interface REGISTRY_LIST_SCOPESOutput {
  scopes: Array_161;
}
export interface Object_367 {
  id: String_1200;
  scopeName: String_1201;
  workspace: StringNull_64;
  projectId: StringNull_65;
  createdAt: String_1204;
  updatedAt: String_1205;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * The scope to publish to (defaults to team slug, automatically claimed on first use)
 */
export type String_1206 = string;
/**
 * The name of the app
 */
export type String_1207 = string;
/**
 * A friendly name for the app
 */
export type String_1208 = string;
/**
 * A description of the app
 */
export type String_1209 = string;
/**
 * URL to an icon for the app
 */
export type String_1210 = string;
export type String_1211 = "HTTP";
export type String_1212 = string;
export type String_1213 = string;
export type String_1214 = "SSE";
export type String_1215 = string;
export type String_1216 = string;
export type String_1217 = string;
export type String_1218 = "Websocket";
export type String_1219 = string;
export type String_1220 = string;
export type String_1221 = "Deco";
export type String_1222 = string;
export type String_1223 = string;
export type String_1224 = "INNATE";
export type String_1225 = string;
export type String_1226 = string;
/**
 * Whether the app should be unlisted
 */
export type Boolean_104 = boolean;

export interface REGISTRY_PUBLISH_APPInput {
  scopeName: String_1206;
  name: String_1207;
  friendlyName?: String_1208;
  description?: String_1209;
  icon?: String_1210;
  /**
   * The MCP connection configuration for the app
   */
  connection: Object_368 | Object_369 | Object_371 | Object_372 | Object_373;
  metadata?: Object_374;
  unlisted?: Boolean_104;
}
export interface Object_368 {
  type: String_1211;
  url: String_1212;
  token?: String_1213;
}
export interface Object_369 {
  type: String_1214;
  url: String_1215;
  token?: String_1216;
  headers?: Object_370;
}
export interface Object_370 {
  [k: string]: String_1217;
}
export interface Object_371 {
  type: String_1218;
  url: String_1219;
  token?: String_1220;
}
export interface Object_372 {
  type: String_1221;
  tenant: String_1222;
  token?: String_1223;
}
export interface Object_373 {
  type: String_1224;
  name: String_1225;
  workspace?: String_1226;
}
/**
 * Metadata for the app
 */
export interface Object_374 {
  [k: string]: unknown;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export interface REGISTRY_PUBLISH_APPOutput {}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type String_1227 = string;
export type String_1228 = string;
export type Number_141 = number;
export type String_1229 = string;
export type Array_163 = Object_376[];
export type Array_162 = Object_375[];

export interface TEAM_MEMBERS_INVITEInput_1 {
  teamId: String_1227;
  invitees: Array_162;
}
export interface Object_375 {
  email: String_1228;
  roles: Array_163;
}
export interface Object_376 {
  id: Number_141;
  name: String_1229;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export interface TEAM_MEMBERS_INVITEOutput_1 {}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * Unique identifier for the view
 */
export type String_1230 = string;
/**
 * Display title for the view
 */
export type String_1231 = string;
/**
 * Icon identifier for the view
 */
export type String_1232 = string;
/**
 * Type of view (custom for views, resource for resources)
 */
export type String_1233 = "custom" | "resource";
/**
 * Integration-specific view name
 */
export type String_1234 = string;
export type String_1235 = string;
/**
 * Optional list of tool names to enable for this view
 */
export type Array_164 = String_1235[];
export type String_1236 = string;
/**
 * Optional list of textual rules to persist in context
 */
export type Array_165 = String_1236[];
/**
 * Integration ID
 */
export type String_1237 = string;
/**
 * Type of resource (for resources only)
 */
export type String_1238 = string;

export interface TEAMS_ADD_VIEWInput {
  view: Object_377;
}
/**
 * View or resource configuration to add
 */
export interface Object_377 {
  id: String_1230;
  title: String_1231;
  icon: String_1232;
  type: String_1233;
  name: String_1234;
  tools?: Array_164;
  rules?: Array_165;
  integration: Object_378;
  resourceType?: String_1238;
}
export interface Object_378 {
  id: String_1237;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export interface TEAMS_ADD_VIEWOutput {}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * The ID of the view or resource to remove
 */
export type String_1239 = string;

export interface TEAMS_REMOVE_VIEWInput {
  viewId: String_1239;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export interface TEAMS_REMOVE_VIEWOutput {}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type String_1240 = string;

export interface THREADS_GETInput {
  id: String_1240;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export interface THREADS_GETOutput {}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type String_1241 = string;

export interface THREADS_GET_MESSAGESInput {
  id: String_1241;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export interface THREADS_GET_MESSAGESOutput {}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type Number_142 = number;
export type String_1242 = string;
export type String_1243 = string;
export type String_1244 =
  | "createdAt_desc"
  | "createdAt_asc"
  | "updatedAt_desc"
  | "updatedAt_asc";
export type String_1245 = string;

export interface THREADS_LISTInput {
  limit?: Number_142;
  agentId?: String_1242;
  resourceId?: String_1243;
  orderBy?: String_1244;
  cursor?: String_1245;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export interface THREADS_LISTOutput {}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type String_1246 = string;

export interface THREADS_UPDATE_METADATAInput {
  threadId: String_1246;
  metadata: Object_379;
}
export interface Object_379 {
  [k: string]: unknown;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export interface THREADS_UPDATE_METADATAOutput {}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type String_1247 = string;
export type String_1248 = string;

export interface THREADS_UPDATE_TITLEInput {
  threadId: String_1247;
  title: String_1248;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export interface THREADS_UPDATE_TITLEOutput {}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type String_1249 = string;

export interface TRIGGERS_ACTIVATEInput {
  id: String_1249;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export interface TRIGGERS_ACTIVATEOutput {}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * The title of the trigger
 */
export type String_1250 = string;
/**
 * The description of the trigger
 */
export type String_1251 = string;
export type String_1252 = string;
export type String_1253 = "cron";
/**
 * The agent ID to use for the trigger
 */
export type String_1254 = string;
/**
 * if not provided, the same conversation thread will be used, you can pass any string you want to use
 */
export type String_1255 = string;
/**
 * if not provided, the same resource will be used, you can pass any string you want to use
 */
export type String_1256 = string;
export type String_1257 = "user" | "assistant" | "system";
export type String_1258 = string;
/**
 * The messages to send to the LLM
 */
export type Array_166 = Object_382[];
/**
 * The URL of the webhook
 */
export type String_1259 = string;
/**
 * The integration ID
 */
export type String_1260 = string;
/**
 * The tool name
 */
export type String_1261 = string;
/**
 * The title of the trigger
 */
export type String_1262 = string;
/**
 * The description of the trigger
 */
export type String_1263 = string;
export type String_1264 = "webhook";
/**
 * The URL of the webhook
 */
export type String_1265 = string;
/**
 * The passphrase for the webhook
 */
export type String_1266 = string;
/**
 * The agent ID to use for the trigger
 */
export type String_1267 = string;

export interface TRIGGERS_CREATEInput {
  trigger: (Object_380 | Object_383) | (Object_386 | Object_388);
}
export interface Object_380 {
  title: String_1250;
  description?: String_1251;
  cronExp: String_1252;
  type: String_1253;
  agentId: String_1254;
  prompt: Object_381;
  url?: String_1259;
}
export interface Object_381 {
  threadId?: String_1255;
  resourceId?: String_1256;
  messages: Array_166;
}
export interface Object_382 {
  role: String_1257;
  content: String_1258;
}
export interface Object_383 {
  title: String_1250;
  description?: String_1251;
  cronExp: String_1252;
  type: String_1253;
  callTool: Object_384;
}
export interface Object_384 {
  integrationId: String_1260;
  toolName: String_1261;
  arguments?: Object_385;
}
/**
 * The arguments to pass to the tool
 */
export interface Object_385 {
  [k: string]: unknown;
}
export interface Object_386 {
  title: String_1262;
  description?: String_1263;
  type: String_1264;
  url?: String_1265;
  passphrase?: String_1266;
  agentId: String_1267;
  schema?: Object_387;
}
/**
 * The JSONSchema of the returning of the webhook.
 *
 * By default this webhook returns the LLM generate text response.
 *
 * If a JSONSchema is specified, it returns a JSON with the specified schema.
 *
 *
 */
export interface Object_387 {
  [k: string]: unknown;
}
export interface Object_388 {
  title: String_1262;
  description?: String_1263;
  type: String_1264;
  url?: String_1265;
  passphrase?: String_1266;
  callTool: Object_384;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export interface TRIGGERS_CREATEOutput {}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export interface TRIGGERS_CREATE_CRONInput {}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export interface TRIGGERS_CREATE_CRONOutput {}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export interface TRIGGERS_CREATE_WEBHOOKInput {}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * The trigger ID
 */
export type String_1268 = string;
export type String_1269 = "cron" | "webhook";
/**
 * The title of the trigger
 */
export type String_1270 = string;
/**
 * The description of the trigger
 */
export type String_1271 = string;
export type String_1272 = string;
export type String_1273 = "cron";
/**
 * The agent ID to use for the trigger
 */
export type String_1274 = string;
/**
 * if not provided, the same conversation thread will be used, you can pass any string you want to use
 */
export type String_1275 = string;
/**
 * if not provided, the same resource will be used, you can pass any string you want to use
 */
export type String_1276 = string;
export type String_1277 = "user" | "assistant" | "system";
export type String_1278 = string;
/**
 * The messages to send to the LLM
 */
export type Array_167 = Object_391[];
/**
 * The URL of the webhook
 */
export type String_1279 = string;
/**
 * The integration ID
 */
export type String_1280 = string;
/**
 * The tool name
 */
export type String_1281 = string;
/**
 * The title of the trigger
 */
export type String_1282 = string;
/**
 * The description of the trigger
 */
export type String_1283 = string;
export type String_1284 = "webhook";
/**
 * The URL of the webhook
 */
export type String_1285 = string;
/**
 * The passphrase for the webhook
 */
export type String_1286 = string;
/**
 * The agent ID to use for the trigger
 */
export type String_1287 = string;
/**
 * The creation date
 */
export type String_1288 = string;
/**
 * The update date
 */
export type String_1289 = string;
/**
 * The user ID
 */
export type String_1290 = string;
/**
 * The user name
 */
export type String_1291 = string;
/**
 * The user email
 */
export type String_1292 = string;
/**
 * The user avatar
 */
export type String_1293 = string;
/**
 * The trigger status
 */
export type Boolean_105 = boolean;
/**
 * The workspace ID
 */
export type StringNull_66 = String_1294 | Null_128;
export type String_1294 = string;
export type Null_128 = null;

export interface TRIGGERS_CREATE_WEBHOOKOutput {
  id: String_1268;
  type: String_1269;
  data: (Object_389 | Object_392) | (Object_395 | Object_397);
  createdAt: String_1288;
  updatedAt: String_1289;
  user: Object_398;
  active?: Boolean_105;
  workspace: StringNull_66;
}
export interface Object_389 {
  title: String_1270;
  description?: String_1271;
  cronExp: String_1272;
  type: String_1273;
  agentId: String_1274;
  prompt: Object_390;
  url?: String_1279;
}
export interface Object_390 {
  threadId?: String_1275;
  resourceId?: String_1276;
  messages: Array_167;
}
export interface Object_391 {
  role: String_1277;
  content: String_1278;
}
export interface Object_392 {
  title: String_1270;
  description?: String_1271;
  cronExp: String_1272;
  type: String_1273;
  callTool: Object_393;
}
export interface Object_393 {
  integrationId: String_1280;
  toolName: String_1281;
  arguments?: Object_394;
}
/**
 * The arguments to pass to the tool
 */
export interface Object_394 {
  [k: string]: unknown;
}
export interface Object_395 {
  title: String_1282;
  description?: String_1283;
  type: String_1284;
  url?: String_1285;
  passphrase?: String_1286;
  agentId: String_1287;
  schema?: Object_396;
}
/**
 * The JSONSchema of the returning of the webhook.
 *
 * By default this webhook returns the LLM generate text response.
 *
 * If a JSONSchema is specified, it returns a JSON with the specified schema.
 *
 *
 */
export interface Object_396 {
  [k: string]: unknown;
}
export interface Object_397 {
  title: String_1282;
  description?: String_1283;
  type: String_1284;
  url?: String_1285;
  passphrase?: String_1286;
  callTool: Object_393;
}
export interface Object_398 {
  id: String_1290;
  metadata: Object_399;
}
export interface Object_399 {
  full_name: String_1291;
  email: String_1292;
  avatar_url: String_1293;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type String_1295 = string;

export interface TRIGGERS_DEACTIVATEInput {
  id: String_1295;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export interface TRIGGERS_DEACTIVATEOutput {}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type String_1296 = string;

export interface TRIGGERS_DELETEInput {
  id: String_1296;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * The trigger ID
 */
export type String_1297 = string;

export interface TRIGGERS_DELETEOutput {
  id: String_1297;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type String_1298 = string;

export interface TRIGGERS_GETInput {
  id: String_1298;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export interface TRIGGERS_GETOutput {}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type String_1299 = string;

export interface TRIGGERS_GET_WEBHOOK_URLInput {
  id: String_1299;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * The URL of the webhook trigger
 */
export type String_1300 = string;

export interface TRIGGERS_GET_WEBHOOK_URLOutput {
  url?: String_1300;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type String_1301 = string;

export interface TRIGGERS_LISTInput {
  agentId?: String_1301;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * The trigger ID
 */
export type String_1302 = string;
export type String_1303 = "cron" | "webhook";
/**
 * The title of the trigger
 */
export type String_1304 = string;
/**
 * The description of the trigger
 */
export type String_1305 = string;
export type String_1306 = string;
export type String_1307 = "cron";
/**
 * The agent ID to use for the trigger
 */
export type String_1308 = string;
/**
 * if not provided, the same conversation thread will be used, you can pass any string you want to use
 */
export type String_1309 = string;
/**
 * if not provided, the same resource will be used, you can pass any string you want to use
 */
export type String_1310 = string;
export type String_1311 = "user" | "assistant" | "system";
export type String_1312 = string;
/**
 * The messages to send to the LLM
 */
export type Array_169 = Object_403[];
/**
 * The URL of the webhook
 */
export type String_1313 = string;
/**
 * The integration ID
 */
export type String_1314 = string;
/**
 * The tool name
 */
export type String_1315 = string;
/**
 * The title of the trigger
 */
export type String_1316 = string;
/**
 * The description of the trigger
 */
export type String_1317 = string;
export type String_1318 = "webhook";
/**
 * The URL of the webhook
 */
export type String_1319 = string;
/**
 * The passphrase for the webhook
 */
export type String_1320 = string;
/**
 * The agent ID to use for the trigger
 */
export type String_1321 = string;
/**
 * The creation date
 */
export type String_1322 = string;
/**
 * The update date
 */
export type String_1323 = string;
/**
 * The user ID
 */
export type String_1324 = string;
/**
 * The user name
 */
export type String_1325 = string;
/**
 * The user email
 */
export type String_1326 = string;
/**
 * The user avatar
 */
export type String_1327 = string;
/**
 * The trigger status
 */
export type Boolean_106 = boolean;
/**
 * The workspace ID
 */
export type StringNull_67 = String_1328 | Null_129;
export type String_1328 = string;
export type Null_129 = null;
export type Array_168 = Object_400[];

export interface TRIGGERS_LISTOutput {
  triggers: Array_168;
}
export interface Object_400 {
  id: String_1302;
  type: String_1303;
  data: (Object_401 | Object_404) | (Object_407 | Object_409);
  createdAt: String_1322;
  updatedAt: String_1323;
  user: Object_410;
  active?: Boolean_106;
  workspace: StringNull_67;
}
export interface Object_401 {
  title: String_1304;
  description?: String_1305;
  cronExp: String_1306;
  type: String_1307;
  agentId: String_1308;
  prompt: Object_402;
  url?: String_1313;
}
export interface Object_402 {
  threadId?: String_1309;
  resourceId?: String_1310;
  messages: Array_169;
}
export interface Object_403 {
  role: String_1311;
  content: String_1312;
}
export interface Object_404 {
  title: String_1304;
  description?: String_1305;
  cronExp: String_1306;
  type: String_1307;
  callTool: Object_405;
}
export interface Object_405 {
  integrationId: String_1314;
  toolName: String_1315;
  arguments?: Object_406;
}
/**
 * The arguments to pass to the tool
 */
export interface Object_406 {
  [k: string]: unknown;
}
export interface Object_407 {
  title: String_1316;
  description?: String_1317;
  type: String_1318;
  url?: String_1319;
  passphrase?: String_1320;
  agentId: String_1321;
  schema?: Object_408;
}
/**
 * The JSONSchema of the returning of the webhook.
 *
 * By default this webhook returns the LLM generate text response.
 *
 * If a JSONSchema is specified, it returns a JSON with the specified schema.
 *
 *
 */
export interface Object_408 {
  [k: string]: unknown;
}
export interface Object_409 {
  title: String_1316;
  description?: String_1317;
  type: String_1318;
  url?: String_1319;
  passphrase?: String_1320;
  callTool: Object_405;
}
export interface Object_410 {
  id: String_1324;
  metadata: Object_411;
}
export interface Object_411 {
  full_name: String_1325;
  email: String_1326;
  avatar_url: String_1327;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type String_1329 = string;
/**
 * The title of the trigger
 */
export type String_1330 = string;
/**
 * The description of the trigger
 */
export type String_1331 = string;
export type String_1332 = string;
export type String_1333 = "cron";
/**
 * The agent ID to use for the trigger
 */
export type String_1334 = string;
/**
 * if not provided, the same conversation thread will be used, you can pass any string you want to use
 */
export type String_1335 = string;
/**
 * if not provided, the same resource will be used, you can pass any string you want to use
 */
export type String_1336 = string;
export type String_1337 = "user" | "assistant" | "system";
export type String_1338 = string;
/**
 * The messages to send to the LLM
 */
export type Array_170 = Object_414[];
/**
 * The URL of the webhook
 */
export type String_1339 = string;
/**
 * The integration ID
 */
export type String_1340 = string;
/**
 * The tool name
 */
export type String_1341 = string;
/**
 * The title of the trigger
 */
export type String_1342 = string;
/**
 * The description of the trigger
 */
export type String_1343 = string;
export type String_1344 = "webhook";
/**
 * The URL of the webhook
 */
export type String_1345 = string;
/**
 * The passphrase for the webhook
 */
export type String_1346 = string;
/**
 * The agent ID to use for the trigger
 */
export type String_1347 = string;

export interface TRIGGERS_UPDATEInput {
  id: String_1329;
  data: (Object_412 | Object_415) | (Object_418 | Object_420);
}
export interface Object_412 {
  title: String_1330;
  description?: String_1331;
  cronExp: String_1332;
  type: String_1333;
  agentId: String_1334;
  prompt: Object_413;
  url?: String_1339;
}
export interface Object_413 {
  threadId?: String_1335;
  resourceId?: String_1336;
  messages: Array_170;
}
export interface Object_414 {
  role: String_1337;
  content: String_1338;
}
export interface Object_415 {
  title: String_1330;
  description?: String_1331;
  cronExp: String_1332;
  type: String_1333;
  callTool: Object_416;
}
export interface Object_416 {
  integrationId: String_1340;
  toolName: String_1341;
  arguments?: Object_417;
}
/**
 * The arguments to pass to the tool
 */
export interface Object_417 {
  [k: string]: unknown;
}
export interface Object_418 {
  title: String_1342;
  description?: String_1343;
  type: String_1344;
  url?: String_1345;
  passphrase?: String_1346;
  agentId: String_1347;
  schema?: Object_419;
}
/**
 * The JSONSchema of the returning of the webhook.
 *
 * By default this webhook returns the LLM generate text response.
 *
 * If a JSONSchema is specified, it returns a JSON with the specified schema.
 *
 *
 */
export interface Object_419 {
  [k: string]: unknown;
}
export interface Object_420 {
  title: String_1342;
  description?: String_1343;
  type: String_1344;
  url?: String_1345;
  passphrase?: String_1346;
  callTool: Object_416;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export interface TRIGGERS_UPDATEOutput {}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * Repository owner (user or organization)
 */
export type String_1348 = string;
/**
 * Repository name
 */
export type String_1349 = string;
/**
 * Issue number
 */
export type Number_143 = number;
/**
 * Comment body (markdown supported)
 */
export type String_1350 = string;

export interface ADD_ISSUE_COMMENTInput {
  owner: String_1348;
  repo: String_1349;
  issueNumber: Number_143;
  body: String_1350;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type String_1351 = string;
export type String_1352 = string;
export type String_1353 = string;
export type String_1354 = string;

export interface ADD_ISSUE_COMMENTOutput {
  comment: Object_421;
}
export interface Object_421 {
  id: String_1351;
  body: String_1352;
  url: String_1353;
  createdAt: String_1354;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * GitHub Project V2 node ID
 */
export type String_1355 = string;
/**
 * Node ID of the issue or pull request to add
 */
export type String_1356 = string;

export interface ADD_ITEM_TO_PROJECTInput {
  projectId: String_1355;
  contentId: String_1356;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type String_1357 = string;

export interface ADD_ITEM_TO_PROJECTOutput {
  item: Object_422;
}
export interface Object_422 {
  id: String_1357;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * Repository owner (user or organization)
 */
export type String_1358 = string;
/**
 * Repository name
 */
export type String_1359 = string;
/**
 * Issue number
 */
export type Number_144 = number;
export type String_1360 = string;
/**
 * Array of label node IDs to add
 */
export type Array_171 = String_1360[];

export interface ADD_LABELS_TO_ISSUEInput {
  owner: String_1358;
  repo: String_1359;
  issueNumber: Number_144;
  labelIds: Array_171;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type String_1361 = string;
export type String_1362 = string;
export type Array_172 = Object_423[];

export interface ADD_LABELS_TO_ISSUEOutput {
  labels: Array_172;
}
export interface Object_423 {
  name: String_1361;
  color: String_1362;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * GitHub Project V2 node ID (e.g., 'PVT_kwDOBj_xvs4A_o2I')
 */
export type String_1363 = string;
/**
 * Project title
 */
export type String_1364 = string;
/**
 * Organization login (e.g., 'deco-cx')
 */
export type String_1365 = string;

export interface ADD_TRACKED_PROJECTInput {
  projectId: String_1363;
  title: String_1364;
  organizationLogin: String_1365;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type Number_145 = number;
export type String_1366 = string;
export type String_1367 = string;
export type String_1368 = string;
export type Boolean_107 = boolean;
export type String_1369 = string;

export interface ADD_TRACKED_PROJECTOutput {
  project: Object_424;
}
export interface Object_424 {
  id: Number_145;
  projectId: String_1366;
  title: String_1367;
  organizationLogin: String_1368;
  isActive: Boolean_107;
  createdAt: String_1369;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * Repository owner (user or organization)
 */
export type String_1370 = string;
/**
 * Repository name
 */
export type String_1371 = string;

export interface ADD_TRACKED_REPOSITORYInput {
  owner: String_1370;
  name: String_1371;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type Number_146 = number;
export type String_1372 = string;
export type String_1373 = string;
export type Boolean_108 = boolean;
export type String_1374 = string;

export interface ADD_TRACKED_REPOSITORYOutput {
  repository: Object_425;
}
export interface Object_425 {
  id: Number_146;
  owner: String_1372;
  name: String_1373;
  isActive: Boolean_108;
  createdAt: String_1374;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * Repository owner (user or organization)
 */
export type String_1375 = string;
/**
 * Repository name
 */
export type String_1376 = string;
/**
 * Issue number
 */
export type Number_147 = number;
export type String_1377 = string;
/**
 * Array of user node IDs to assign
 */
export type Array_173 = String_1377[];

export interface ASSIGN_ISSUEInput {
  owner: String_1375;
  repo: String_1376;
  issueNumber: Number_147;
  assigneeIds: Array_173;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type String_1378 = string;
export type Array_174 = Object_426[];

export interface ASSIGN_ISSUEOutput {
  assignees: Array_174;
}
export interface Object_426 {
  login: String_1378;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * Repository owner (user or organization)
 */
export type String_1379 = string;
/**
 * Repository name
 */
export type String_1380 = string;
/**
 * Issue number
 */
export type Number_148 = number;
/**
 * Reason for closing (completed or not_planned)
 */
export type String_1381 = "COMPLETED" | "NOT_PLANNED";

export interface CLOSE_ISSUEInput {
  owner: String_1379;
  repo: String_1380;
  issueNumber: Number_148;
  stateReason?: String_1381;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type String_1382 = string;
export type Number_149 = number;
export type String_1383 = string;
export type StringNull_68 = String_1384 | Null_130;
export type String_1384 = string;
export type Null_130 = null;

export interface CLOSE_ISSUEOutput {
  issue: Object_427;
}
export interface Object_427 {
  id: String_1382;
  number: Number_149;
  state: String_1383;
  stateReason: StringNull_68;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * Repository owner (user or organization)
 */
export type String_1385 = string;
/**
 * Repository name
 */
export type String_1386 = string;
/**
 * Issue title
 */
export type String_1387 = string;
/**
 * Issue body (markdown supported)
 */
export type String_1388 = string;
export type String_1389 = string;
/**
 * Node IDs of users to assign (use getIssueNodeId helper)
 */
export type Array_175 = String_1389[];
export type String_1390 = string;
/**
 * Node IDs of labels to add
 */
export type Array_176 = String_1390[];
/**
 * Node ID of milestone
 */
export type String_1391 = string;

export interface CREATE_ISSUEInput {
  owner: String_1385;
  repo: String_1386;
  title: String_1387;
  body?: String_1388;
  assigneeIds?: Array_175;
  labelIds?: Array_176;
  milestoneId?: String_1391;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type String_1392 = string;
export type Number_150 = number;
export type String_1393 = string;
export type String_1394 = string;

export interface CREATE_ISSUEOutput {
  issue: Object_428;
}
export interface Object_428 {
  id: String_1392;
  number: Number_150;
  title: String_1393;
  url: String_1394;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * GitHub organization login (e.g., 'deco-cx')
 */
export type String_1395 = string;
/**
 * Project title
 */
export type String_1396 = string;
/**
 * Project description (optional)
 */
export type String_1397 = string;

export interface CREATE_PROJECTInput {
  organizationLogin: String_1395;
  title: String_1396;
  description?: String_1397;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type String_1398 = string;
export type String_1399 = string;
export type String_1400 = string;
export type Number_151 = number;

export interface CREATE_PROJECTOutput {
  project: Object_429;
}
export interface Object_429 {
  id: String_1398;
  title: String_1399;
  url: String_1400;
  number: Number_151;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type String_1401 = string;

export interface DECO_CHAT_OAUTH_STARTInput {
  returnUrl: String_1401;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type String_1402 = string;
export type Array_177 = String_1402[];

export interface DECO_CHAT_OAUTH_STARTOutput {
  stateSchema?: unknown;
  scopes?: Array_177;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export interface DECO_CHAT_STATE_VALIDATIONInput {
  state?: unknown;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type Boolean_109 = boolean;

export interface DECO_CHAT_STATE_VALIDATIONOutput {
  valid: Boolean_109;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export interface DECO_CHAT_VIEWS_LISTInput_2 {}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type String_1403 = string;
export type String_1404 = string;
export type String_1405 = string;
export type String_1406 = string;
export type String_1407 = string;
export type String_1408 = string;
export type String_1409 = string;
export type String_1410 = string;
export type String_1411 = string;
export type Array_179 = String_1411[];
export type String_1412 = string;
export type Array_180 = String_1412[];
export type String_1413 = "none" | "open" | "autoPin";
export type Array_178 = Object_430[];

export interface DECO_CHAT_VIEWS_LISTOutput_2 {
  views: Array_178;
}
export interface Object_430 {
  id?: String_1403;
  name?: String_1404;
  title: String_1405;
  description?: String_1406;
  icon: String_1407;
  url?: String_1408;
  mimeTypePattern?: String_1409;
  resourceName?: String_1410;
  tools?: Array_179;
  rules?: Array_180;
  installBehavior?: String_1413;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * GitHub Project V2 node ID to delete
 */
export type String_1414 = string;

export interface DELETE_PROJECTInput {
  projectId: String_1414;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type Boolean_110 = boolean;
export type String_1415 = string;

export interface DELETE_PROJECTOutput {
  success: Boolean_110;
  deletedProjectId: String_1415;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * Repository owner (user or organization)
 */
export type String_1416 = string;
/**
 * Repository name
 */
export type String_1417 = string;
/**
 * Issue number
 */
export type Number_152 = number;

export interface GET_ISSUEInput {
  owner: String_1416;
  repo: String_1417;
  issueNumber: Number_152;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type String_1418 = string;
export type Number_153 = number;
export type String_1419 = string;
export type StringNull_69 = String_1420 | Null_131;
export type String_1420 = string;
export type Null_131 = null;
export type String_1421 = string;
export type String_1422 = string;
export type String_1423 = string;
export type String_1424 = string;
export type StringNull_70 = String_1425 | Null_132;
export type String_1425 = string;
export type Null_132 = null;
export type String_1426 = string;
export type Null_133 = null;
export type String_1427 = string;
export type String_1428 = string;
export type Array_181 = Object_433[];
export type String_1429 = string;
export type Array_182 = Object_434[];
export type String_1430 = string;
export type Null_134 = null;
export type Number_154 = number;

export interface GET_ISSUEOutput {
  issue: Object_431;
}
export interface Object_431 {
  id: String_1418;
  number: Number_153;
  title: String_1419;
  body: StringNull_69;
  state: String_1421;
  url: String_1422;
  createdAt: String_1423;
  updatedAt: String_1424;
  closedAt: StringNull_70;
  author: Object_432 | Null_133;
  labels: Array_181;
  assignees: Array_182;
  milestone: Object_435 | Null_134;
  commentsCount: Number_154;
}
export interface Object_432 {
  login: String_1426;
}
export interface Object_433 {
  name: String_1427;
  color: String_1428;
}
export interface Object_434 {
  login: String_1429;
}
export interface Object_435 {
  title: String_1430;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * GitHub Project V2 node ID
 */
export type String_1431 = string;

export interface GET_PROJECT_DETAILSInput {
  projectId: String_1431;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type String_1432 = string;
export type String_1433 = string;
export type Number_155 = number;
export type String_1434 = string;
export type StringNull_71 = String_1435 | Null_135;
export type String_1435 = string;
export type Null_135 = null;
export type StringNull_72 = String_1436 | Null_136;
export type String_1436 = string;
export type Null_136 = null;
export type Boolean_111 = boolean;
export type Boolean_112 = boolean;
export type Number_156 = number;

export interface GET_PROJECT_DETAILSOutput {
  project: Object_436;
}
export interface Object_436 {
  id: String_1432;
  title: String_1433;
  number: Number_155;
  url: String_1434;
  shortDescription: StringNull_71;
  readme: StringNull_72;
  closed: Boolean_111;
  public: Boolean_112;
  itemsCount: Number_156;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * Filter tools by category (default: all)
 */
export type String_1437 =
  | "all"
  | "projects"
  | "issues"
  | "tracking"
  | "user"
  | "metadata";

export interface GET_TOOL_METADATAInput {
  category?: String_1437;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type String_1438 = string;
export type String_1439 = string;
export type String_1440 = string;
export type Array_183 = Object_437[];

export interface GET_TOOL_METADATAOutput {
  tools: Array_183;
}
export interface Object_437 {
  id: String_1438;
  description: String_1439;
  category: String_1440;
  inputSchema?: unknown;
  outputSchema?: unknown;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export interface GET_USERInput {}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type String_1441 = string;
export type StringNull_73 = String_1442 | Null_137;
export type String_1442 = string;
export type Null_137 = null;
export type StringNull_74 = String_1443 | Null_138;
export type String_1443 = string;
export type Null_138 = null;
export type String_1444 = string;

export interface GET_USEROutput {
  id: String_1441;
  name: StringNull_73;
  avatar: StringNull_74;
  email: String_1444;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * GitHub organization login (e.g., 'deco-cx')
 */
export type String_1445 = string;
/**
 * Number of projects to fetch (default: 20, max: 100)
 */
export type Number_157 = number;

export interface LIST_GITHUB_PROJECTSInput {
  organizationLogin: String_1445;
  first?: Number_157;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type String_1446 = string;
export type String_1447 = string;
export type Number_158 = number;
export type String_1448 = string;
export type Array_184 = Object_438[];

export interface LIST_GITHUB_PROJECTSOutput {
  projects: Array_184;
}
export interface Object_438 {
  id: String_1446;
  title: String_1447;
  number?: Number_158;
  url?: String_1448;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * Repository owner (user or organization)
 */
export type String_1449 = string;
/**
 * Repository name
 */
export type String_1450 = string;
/**
 * Issue number
 */
export type Number_159 = number;
/**
 * Number of comments to fetch (default: 20, max: 100)
 */
export type Number_160 = number;

export interface LIST_ISSUE_COMMENTSInput {
  owner: String_1449;
  repo: String_1450;
  issueNumber: Number_159;
  first?: Number_160;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type String_1451 = string;
export type String_1452 = string;
export type String_1453 = string;
export type String_1454 = string;
export type String_1455 = string;
export type Null_139 = null;
export type Array_185 = Object_439[];

export interface LIST_ISSUE_COMMENTSOutput {
  comments: Array_185;
}
export interface Object_439 {
  id: String_1451;
  body: String_1452;
  url: String_1453;
  createdAt: String_1454;
  author: Object_440 | Null_139;
}
export interface Object_440 {
  login: String_1455;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * Repository owner (user or organization)
 */
export type String_1456 = string;
/**
 * Repository name
 */
export type String_1457 = string;
/**
 * Filter by issue state (OPEN or CLOSED)
 */
export type String_1458 = "OPEN" | "CLOSED";
export type String_1459 = string;
/**
 * Filter by label names
 */
export type Array_186 = String_1459[];
/**
 * Filter by assignee username
 */
export type String_1460 = string;
/**
 * Number of issues to fetch (default: 20, max: 100)
 */
export type Number_161 = number;

export interface LIST_ISSUESInput {
  owner: String_1456;
  repo: String_1457;
  state?: String_1458;
  labels?: Array_186;
  assignee?: String_1460;
  first?: Number_161;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type String_1461 = string;
export type Number_162 = number;
export type String_1462 = string;
export type StringNull_75 = String_1463 | Null_140;
export type String_1463 = string;
export type Null_140 = null;
export type String_1464 = string;
export type String_1465 = string;
export type String_1466 = string;
export type String_1467 = string;
export type String_1468 = string;
export type Null_141 = null;
export type String_1469 = string;
export type String_1470 = string;
export type Array_188 = Object_443[];
export type String_1471 = string;
export type Array_189 = Object_444[];
export type Array_187 = Object_441[];
export type Number_163 = number;

export interface LIST_ISSUESOutput {
  issues: Array_187;
  totalCount: Number_163;
}
export interface Object_441 {
  id: String_1461;
  number: Number_162;
  title: String_1462;
  body: StringNull_75;
  state: String_1464;
  url: String_1465;
  createdAt: String_1466;
  updatedAt: String_1467;
  author: Object_442 | Null_141;
  labels: Array_188;
  assignees: Array_189;
}
export interface Object_442 {
  login: String_1468;
}
export interface Object_443 {
  name: String_1469;
  color: String_1470;
}
export interface Object_444 {
  login: String_1471;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * GitHub Project V2 node ID
 */
export type String_1472 = string;
/**
 * Number of items to fetch (default: 20, max: 100)
 */
export type Number_164 = number;

export interface LIST_PROJECT_ITEMSInput {
  projectId: String_1472;
  first?: Number_164;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type String_1473 = string;
export type String_1474 = "Issue" | "PullRequest" | "DraftIssue";
export type String_1475 = string;
export type String_1476 = string;
export type String_1477 = string;
export type Number_165 = number;
export type Array_190 = Object_445[];

export interface LIST_PROJECT_ITEMSOutput {
  items: Array_190;
}
export interface Object_445 {
  id: String_1473;
  type: String_1474;
  title?: String_1475;
  url?: String_1476;
  state?: String_1477;
  number?: Number_165;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * Only return active projects (default: true)
 */
export type Boolean_113 = boolean;

export interface LIST_TRACKED_PROJECTSInput {
  activeOnly?: Boolean_113;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type Number_166 = number;
export type String_1478 = string;
export type String_1479 = string;
export type String_1480 = string;
export type Boolean_114 = boolean;
export type String_1481 = string;
export type Array_191 = Object_446[];

export interface LIST_TRACKED_PROJECTSOutput {
  projects: Array_191;
}
export interface Object_446 {
  id: Number_166;
  projectId: String_1478;
  title: String_1479;
  organizationLogin: String_1480;
  isActive: Boolean_114;
  createdAt: String_1481;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * Only return active repositories (default: true)
 */
export type Boolean_115 = boolean;

export interface LIST_TRACKED_REPOSITORIESInput {
  activeOnly?: Boolean_115;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type Number_167 = number;
export type String_1482 = string;
export type String_1483 = string;
export type Boolean_116 = boolean;
export type String_1484 = string;
export type Array_192 = Object_447[];

export interface LIST_TRACKED_REPOSITORIESOutput {
  repositories: Array_192;
}
export interface Object_447 {
  id: Number_167;
  owner: String_1482;
  name: String_1483;
  isActive: Boolean_116;
  createdAt: String_1484;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * Repository owner (user or organization)
 */
export type String_1485 = string;
/**
 * Repository name
 */
export type String_1486 = string;
/**
 * Issue number
 */
export type Number_168 = number;
export type String_1487 = string;
/**
 * Array of label node IDs to remove
 */
export type Array_193 = String_1487[];

export interface REMOVE_LABELS_FROM_ISSUEInput {
  owner: String_1485;
  repo: String_1486;
  issueNumber: Number_168;
  labelIds: Array_193;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type String_1488 = string;
export type String_1489 = string;
export type Array_194 = Object_448[];

export interface REMOVE_LABELS_FROM_ISSUEOutput {
  labels: Array_194;
}
export interface Object_448 {
  name: String_1488;
  color: String_1489;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * Tracked project ID
 */
export type Number_169 = number;
/**
 * Permanently delete instead of deactivating (default: false)
 */
export type Boolean_117 = boolean;

export interface REMOVE_TRACKED_PROJECTInput {
  id: Number_169;
  hardDelete?: Boolean_117;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type Boolean_118 = boolean;
export type Number_170 = number;

export interface REMOVE_TRACKED_PROJECTOutput {
  success: Boolean_118;
  deletedId: Number_170;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * Tracked repository ID
 */
export type Number_171 = number;
/**
 * Permanently delete instead of deactivating (default: false)
 */
export type Boolean_119 = boolean;

export interface REMOVE_TRACKED_REPOSITORYInput {
  id: Number_171;
  hardDelete?: Boolean_119;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type Boolean_120 = boolean;
export type Number_172 = number;

export interface REMOVE_TRACKED_REPOSITORYOutput {
  success: Boolean_120;
  deletedId: Number_172;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * Repository owner (user or organization)
 */
export type String_1490 = string;
/**
 * Repository name
 */
export type String_1491 = string;
/**
 * Issue number
 */
export type Number_173 = number;
export type String_1492 = string;
/**
 * Array of user node IDs to unassign
 */
export type Array_195 = String_1492[];

export interface UNASSIGN_ISSUEInput {
  owner: String_1490;
  repo: String_1491;
  issueNumber: Number_173;
  assigneeIds: Array_195;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type String_1493 = string;
export type Array_196 = Object_449[];

export interface UNASSIGN_ISSUEOutput {
  assignees: Array_196;
}
export interface Object_449 {
  login: String_1493;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * Repository owner (user or organization)
 */
export type String_1494 = string;
/**
 * Repository name
 */
export type String_1495 = string;
/**
 * Issue number
 */
export type Number_174 = number;
/**
 * New issue title
 */
export type String_1496 = string;
/**
 * New issue body (markdown supported)
 */
export type String_1497 = string;
/**
 * New issue state
 */
export type String_1498 = "OPEN" | "CLOSED";

export interface UPDATE_ISSUEInput {
  owner: String_1494;
  repo: String_1495;
  issueNumber: Number_174;
  title?: String_1496;
  body?: String_1497;
  state?: String_1498;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type String_1499 = string;
export type Number_175 = number;
export type String_1500 = string;
export type String_1501 = string;
export type String_1502 = string;

export interface UPDATE_ISSUEOutput {
  issue: Object_450;
}
export interface Object_450 {
  id: String_1499;
  number: Number_175;
  title: String_1500;
  url: String_1501;
  state: String_1502;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * GitHub Project V2 node ID
 */
export type String_1503 = string;
/**
 * New project title
 */
export type String_1504 = string;
/**
 * New short description
 */
export type String_1505 = string;
/**
 * New readme content
 */
export type String_1506 = string;
/**
 * Make project public or private
 */
export type Boolean_121 = boolean;

export interface UPDATE_PROJECTInput {
  projectId: String_1503;
  title?: String_1504;
  shortDescription?: String_1505;
  readme?: String_1506;
  public?: Boolean_121;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type String_1507 = string;
export type String_1508 = string;
export type String_1509 = string;

export interface UPDATE_PROJECTOutput {
  project: Object_451;
}
export interface Object_451 {
  id: String_1507;
  title: String_1508;
  url: String_1509;
}

import { z } from "zod";

export type Mcp<T extends Record<string, (input: any) => Promise<any>>> = {
  [K in keyof T]: ((
    input: Parameters<T[K]>[0],
  ) => Promise<ReturnType<T[K]>>) & {
    asTool: () => Promise<{
      inputSchema: z.ZodType<Parameters<T[K]>[0]>;
      outputSchema?: z.ZodType<ReturnType<T[K]>>;
      description: string;
      id: string;
      execute: ({
        context,
      }: {
        context: Parameters<T[K]>[0];
      }) => Promise<ReturnType<T[K]>>;
    }>;
  };
};

export const StateSchema = z.object({
  AI_GATEWAY: z.object({
    value: z.string(),
    __type: z.literal("@deco/ai-gateway").default("@deco/ai-gateway"),
  }),
  DATABASE: z.object({
    value: z.string(),
    __type: z.literal("@deco/database").default("@deco/database"),
  }),
});

export interface Env {
  DECO_CHAT_WORKSPACE: string;
  DECO_CHAT_API_JWT_PUBLIC_KEY: string;
  AI_GATEWAY: Mcp<{
    /**
     * Generate text using AI models directly without agent context (stateless)
     */
    AI_GENERATE: (input: AI_GENERATEInput) => Promise<AI_GENERATEOutput>;
    /**
     * Generate structured objects using AI models with JSON schema validation
     */
    AI_GENERATE_OBJECT: (
      input: AI_GENERATE_OBJECTInput,
    ) => Promise<AI_GENERATE_OBJECTOutput>;
  }>;
  DATABASE: Mcp<{
    /**
     * Run a SQL query against the workspace database
     */
    DATABASES_GET_META: (
      input: DATABASES_GET_METAInput,
    ) => Promise<DATABASES_GET_METAOutput>;
    /**
     * Migrate data from Turso database to new database
     */
    DATABASES_MIGRATE: (
      input: DATABASES_MIGRATEInput,
    ) => Promise<DATABASES_MIGRATEOutput>;
    /**
     * Run a SQL query against the workspace database
     */
    DATABASES_RECOVERY: (
      input: DATABASES_RECOVERYInput,
    ) => Promise<DATABASES_RECOVERYOutput>;
    /**
     * Run a SQL query against the workspace database
     */
    DATABASES_RUN_SQL: (
      input: DATABASES_RUN_SQLInput,
    ) => Promise<DATABASES_RUN_SQLOutput>;
    /**
     * List views exposed by this MCP
     */
    DECO_CHAT_VIEWS_LIST: (
      input: DECO_CHAT_VIEWS_LISTInput,
    ) => Promise<DECO_CHAT_VIEWS_LISTOutput>;
  }>;
  DECO_CHAT_WORKSPACE_API: Mcp<{
    /**
     * Create a new agent
     */
    AGENTS_CREATE: (input: AGENTS_CREATEInput) => Promise<AGENTS_CREATEOutput>;
    /**
     * Delete an agent by id
     */
    AGENTS_DELETE: (input: AGENTS_DELETEInput) => Promise<AGENTS_DELETEOutput>;
    /**
     * Get an agent by id
     */
    AGENTS_GET: (input: AGENTS_GETInput) => Promise<AGENTS_GETOutput>;
    /**
     * List all agents
     */
    AGENTS_LIST: (input: AGENTS_LISTInput) => Promise<AGENTS_LISTOutput>;
    /**
     * Update an existing agent
     */
    AGENTS_UPDATE: (input: AGENTS_UPDATEInput) => Promise<AGENTS_UPDATEOutput>;
    /**
     * Generate text using AI models directly without agent context (stateless)
     */
    AI_GENERATE: (input: AI_GENERATEInput) => Promise<AI_GENERATEOutput>;
    /**
     * Generate structured objects using AI models with JSON schema validation
     */
    AI_GENERATE_OBJECT: (
      input: AI_GENERATE_OBJECTInput,
    ) => Promise<AI_GENERATE_OBJECTOutput>;
    /**
     * Check if an API key has access to a resource
     */
    API_KEYS_CHECK_ACCESS: (
      input: API_KEYS_CHECK_ACCESSInput,
    ) => Promise<API_KEYS_CHECK_ACCESSOutput>;
    /**
     * Create a new API key
     */
    API_KEYS_CREATE: (
      input: API_KEYS_CREATEInput,
    ) => Promise<API_KEYS_CREATEOutput>;
    /**
     * Delete an API key (soft delete)
     */
    API_KEYS_DELETE: (
      input: API_KEYS_DELETEInput,
    ) => Promise<API_KEYS_DELETEOutput>;
    /**
     * Disable an API key
     */
    API_KEYS_DISABLE: (
      input: API_KEYS_DISABLEInput,
    ) => Promise<API_KEYS_DISABLEOutput>;
    /**
     * Enable an API key
     */
    API_KEYS_ENABLE: (
      input: API_KEYS_ENABLEInput,
    ) => Promise<API_KEYS_ENABLEOutput>;
    /**
     * Get an API key by ID
     */
    API_KEYS_GET: (input: API_KEYS_GETInput) => Promise<API_KEYS_GETOutput>;
    /**
     * List all API keys
     */
    API_KEYS_LIST: (input: API_KEYS_LISTInput) => Promise<API_KEYS_LISTOutput>;
    /**
     * Reissue an existing API key with new claims
     */
    API_KEYS_REISSUE: (
      input: API_KEYS_REISSUEInput,
    ) => Promise<API_KEYS_REISSUEOutput>;
    /**
     * Update an API key metadata
     */
    API_KEYS_UPDATE: (
      input: API_KEYS_UPDATEInput,
    ) => Promise<API_KEYS_UPDATEOutput>;
    /**
     * Validate an API key by ID
     */
    API_KEYS_VALIDATE: (
      input: API_KEYS_VALIDATEInput,
    ) => Promise<API_KEYS_VALIDATEOutput>;
    /**
     * Create a channel
     */
    CHANNELS_CREATE: (
      input: CHANNELS_CREATEInput,
    ) => Promise<CHANNELS_CREATEOutput>;
    /**
     * Delete a channel
     */
    CHANNELS_DELETE: (
      input: CHANNELS_DELETEInput,
    ) => Promise<CHANNELS_DELETEOutput>;
    /**
     * Get a channel by ID
     */
    CHANNELS_GET: (input: CHANNELS_GETInput) => Promise<CHANNELS_GETOutput>;
    /**
     * Invite an agent to a channel
     */
    CHANNELS_JOIN: (input: CHANNELS_JOINInput) => Promise<CHANNELS_JOINOutput>;
    /**
     * Remove an agent from a channel
     */
    CHANNELS_LEAVE: (
      input: CHANNELS_LEAVEInput,
    ) => Promise<CHANNELS_LEAVEOutput>;
    /**
     * List all channels
     */
    CHANNELS_LIST: (input: CHANNELS_LISTInput) => Promise<CHANNELS_LISTOutput>;
    /**
     * Commit a pre-authorized amount of money for the current tenant's wallet
     */
    COMMIT_PRE_AUTHORIZED_AMOUNT: (
      input: COMMIT_PRE_AUTHORIZED_AMOUNTInput,
    ) => Promise<COMMIT_PRE_AUTHORIZED_AMOUNTOutput>;
    /**
     * Register a contract with the registry.
     */
    CONTRACT_REGISTER: (
      input: CONTRACT_REGISTERInput,
    ) => Promise<CONTRACT_REGISTEROutput>;
    /**
     * Create a DECONFIG branch. If sourceBranch is provided, creates a branch from that branch (O(1) operation). Otherwise creates an empty branch.
     */
    CREATE_BRANCH: (input: CREATE_BRANCHInput) => Promise<CREATE_BRANCHOutput>;
    /**
     * Create a checkout session for the current tenant's wallet
     */
    CREATE_CHECKOUT_SESSION: (
      input: CREATE_CHECKOUT_SESSIONInput,
    ) => Promise<CREATE_CHECKOUT_SESSIONOutput>;
    /**
     * Create a voucher with money from the current tenant's wallet
     */
    CREATE_VOUCHER: (
      input: CREATE_VOUCHERInput,
    ) => Promise<CREATE_VOUCHEROutput>;
    /**
     * Run a SQL query against the workspace database
     */
    DATABASES_GET_META: (
      input: DATABASES_GET_METAInput,
    ) => Promise<DATABASES_GET_METAOutput>;
    /**
     * Migrate data from Turso database to new database
     */
    DATABASES_MIGRATE: (
      input: DATABASES_MIGRATEInput,
    ) => Promise<DATABASES_MIGRATEOutput>;
    /**
     * Run a SQL query against the workspace database
     */
    DATABASES_RECOVERY: (
      input: DATABASES_RECOVERYInput,
    ) => Promise<DATABASES_RECOVERYOutput>;
    /**
     * Run a SQL query against the workspace database
     */
    DATABASES_RUN_SQL: (
      input: DATABASES_RUN_SQLInput,
    ) => Promise<DATABASES_RUN_SQLOutput>;
    /**
     * List views exposed by this MCP
     */
    DECO_CHAT_VIEWS_LIST: (
      input: DECO_CHAT_VIEWS_LISTInput,
    ) => Promise<DECO_CHAT_VIEWS_LISTOutput>;
    /**
     * Get the schema for a marketplace app
     */
    DECO_GET_APP_SCHEMA: (
      input: DECO_GET_APP_SCHEMAInput,
    ) => Promise<DECO_GET_APP_SCHEMAOutput>;
    /**
     * Install an integration. To know the available ids, use the DECO_INTEGRATIONS_SEARCH tool. Also, after installing, enable the integration using the INTEGRATION_ENABLE tool.
     */
    DECO_INTEGRATION_INSTALL: (
      input: DECO_INTEGRATION_INSTALLInput,
    ) => Promise<DECO_INTEGRATION_INSTALLOutput>;
    /**
     * Start the OAuth flow for an integration
     */
    DECO_INTEGRATION_OAUTH_START: (
      input: DECO_INTEGRATION_OAUTH_STARTInput,
    ) => Promise<DECO_INTEGRATION_OAUTH_STARTOutput>;
    /**
     * Search for integrations in both marketplace and installed.
     * If no query is provided, it will return all installed integrations. For better results, try searching for the service name, i.e. GoogleSheets, GoogleCalendar, Notion, etc.
     * It's always handy to search for installed integrations with no query, since all integrations will be returned. Also, some integrations are handy agents that may help you with common tasks.
     */
    DECO_INTEGRATIONS_SEARCH: (
      input: DECO_INTEGRATIONS_SEARCHInput,
    ) => Promise<DECO_INTEGRATIONS_SEARCHOutput>;
    /**
     * Create a new document with markdown content.
     * ## Document Structure
     * Documents consist of:
     * - **name**: A clear, descriptive title for the document
     * - **description** (optional): A brief summary of the document's purpose
     * - **content**: Markdown-formatted text content
     * - **tags** (optional): Array of strings for categorization
     * ## Markdown Support
     * Documents support full markdown syntax:
     * ```markdown
     * # Main Header
     * ## Subheader
     * This is **bold** and this is *italic*.
     * - Bullet point 1
     * - Bullet point 2
     * 1. Numbered item
     * 2. Another item
     * [Link text](https://example.com)
     * ```code
     * Code blocks with syntax highlighting
     * ```
     * > Blockquotes
     * | Table | Headers |
     * |-------|---------|
     * | Data  | Data    |
     * ```
     * ## Best Practices
     * 1. **Use clear names** - Make document titles descriptive and searchable
     * 2. **Add descriptions** - Help others understand the document's purpose
     * 3. **Structure content** - Use headers to organize long documents
     * 4. **Tag appropriately** - Use tags for easier discovery and organization
     * 5. **Keep it readable** - Use markdown formatting to enhance readability
     */
    DECO_RESOURCE_DOCUMENT_CREATE: (
      input: DECO_RESOURCE_DOCUMENT_CREATEInput,
    ) => Promise<DECO_RESOURCE_DOCUMENT_CREATEOutput>;
    /**
     * Delete a document from the workspace.
     * This operation permanently removes the document file from the DECONFIG storage.
     * Use this to clean up obsolete, duplicate, or unwanted documents.
     * Warning: This action cannot be undone. The document will be permanently removed
     * from the workspace.
     */
    DECO_RESOURCE_DOCUMENT_DELETE: (
      input: DECO_RESOURCE_DOCUMENT_DELETEInput,
    ) => Promise<DECO_RESOURCE_DOCUMENT_DELETEOutput>;
    /**
     * Read a document's content and metadata.
     * Returns:
     * - Document metadata (name, description, tags)
     * - Full markdown content
     * - Creation and modification timestamps
     * Documents support standard markdown syntax including:
     * - Headers (# ## ###)
     * - Lists (ordered and unordered)
     * - Links and images
     * - Code blocks with syntax highlighting
     * - Tables, blockquotes, and more
     */
    DECO_RESOURCE_DOCUMENT_READ: (
      input: DECO_RESOURCE_DOCUMENT_READInput,
    ) => Promise<DECO_RESOURCE_DOCUMENT_READOutput>;
    /**
     * Search documents in the workspace.
     * This operation allows you to find documents by name, content, description, or tags.
     * Documents are markdown-formatted text content that can be used for documentation,
     * notes, guides, or any other text-based information.
     * Use this to discover existing documents before creating new ones or to find documents
     * for reading or modification.
     */
    DECO_RESOURCE_DOCUMENT_SEARCH: (
      input: DECO_RESOURCE_DOCUMENT_SEARCHInput,
    ) => Promise<DECO_RESOURCE_DOCUMENT_SEARCHOutput>;
    /**
     * Update a document's content or metadata.
     * You can update any of the following:
     * - **name**: Change the document title
     * - **description**: Update the document's summary
     * - **content**: Modify the markdown content
     * - **tags**: Add, remove, or change tags
     * ## Update Guidelines
     * 1. **Preserve formatting** - Maintain markdown structure when editing content
     * 2. **Update incrementally** - Make focused changes rather than rewriting everything
     * 3. **Use clear descriptions** - Keep descriptions concise and informative
     * 4. **Manage tags thoughtfully** - Add relevant tags, remove outdated ones
     * ## Common Update Patterns
     * **Adding content:**
     * - Append new sections to existing content
     * - Insert new information in appropriate locations
     * - Maintain document structure and flow
     * **Fixing content:**
     * - Correct typos and formatting issues
     * - Update outdated information
     * - Improve clarity and readability
     * **Reorganizing:**
     * - Restructure headers and sections
     * - Reorder content for better flow
     * - Split or merge sections as needed
     */
    DECO_RESOURCE_DOCUMENT_UPDATE: (
      input: DECO_RESOURCE_DOCUMENT_UPDATEInput,
    ) => Promise<DECO_RESOURCE_DOCUMENT_UPDATEOutput>;
    /**
     * Create an executable tool with JSON Schema validation.
     * ## Tool Execute Function
     * Tools must export a default async function:
     * ```javascript
     * export default async function(input, ctx) {
     * // input: validated against tool's inputSchema
     * // Call integration tools (must declare in dependencies array)
     * const result = await ctx.env['i:slack'].send_message({
     * channel: input.channel,
     * text: input.message
     * });
     * // Return: must match tool's outputSchema
     * return { success: true, messageId: result.ts };
     * }
     * ```
     * **Key Points:**
     * - **inputSchema** defines the `input` parameter type and validation
     * - **outputSchema** defines the return value type and validation
     * - **execute** is the function code as an inline ES module string
     * - **dependencies** (optional): Array of `{ integrationId }` for ctx.env calls
     * **Integration IDs:**
     * - Don't know the ID? Use a placeholder like `i:slack` or `i:database`
     * - Validation will show available integrations if the ID doesn't exist
     * - System will guide you to the correct ID
     * **HTTP Requests:**
     * - `fetch` is NOT available in this environment
     * - To make HTTP requests, use the `i:http` integration with the `HTTP_FETCH` tool
     * - Example: `await ctx.env['i:http'].HTTP_FETCH({ url: '...', method: 'GET' })`
     * - Remember to add `{ integrationId: 'i:http' }` to dependencies
     */
    DECO_RESOURCE_TOOL_CREATE: (
      input: DECO_RESOURCE_TOOL_CREATEInput,
    ) => Promise<DECO_RESOURCE_TOOL_CREATEOutput>;
    /**
     * Delete a tool from the code environment.
     * This operation removes both the tool definition and its associated function file
     * from the environment. Use this to clean up unused or obsolete tools.
     * Warning: This action cannot be undone. The tool and its function code will be
     * permanently removed from the environment.
     */
    DECO_RESOURCE_TOOL_DELETE: (
      input: DECO_RESOURCE_TOOL_DELETEInput,
    ) => Promise<DECO_RESOURCE_TOOL_DELETEOutput>;
    /**
     * Read a tool definition including metadata, schemas, and execute code.
     * Returns:
     * - Tool metadata (name, description)
     * - Input/output JSON schemas
     * - Execute code (inline ES module)
     * - Dependencies (integration IDs used in ctx.env calls)
     * The tool's execute code uses `ctx.env['{INTEGRATION_ID}'].{TOOL_NAME}(args)` to call integrations.
     */
    DECO_RESOURCE_TOOL_READ: (
      input: DECO_RESOURCE_TOOL_READInput,
    ) => Promise<DECO_RESOURCE_TOOL_READOutput>;
    /**
     * Search tools in the code environment.
     * This operation allows you to find tools by name, description, or other metadata.
     * Tools are executable functions with JSON Schema validation that can be created,
     * modified, and executed in a secure environment.
     * Use this to discover available tools before creating new ones or to find existing tools
     * for modification or execution.
     */
    DECO_RESOURCE_TOOL_SEARCH: (
      input: DECO_RESOURCE_TOOL_SEARCHInput,
    ) => Promise<DECO_RESOURCE_TOOL_SEARCHOutput>;
    /**
     * Update a tool's metadata, schemas, or execution code.
     * ## Execute Function API
     * ```javascript
     * export default async function(input, ctx) {
     * // Call integration tools
     * const result = await ctx.env['i:integration'].tool_name({ args });
     * return { output: result };
     * }
     * ```
     * ## Update Guidelines
     * 1. **Maintain function signature** - Keep `async function(input, ctx)` format
     * 2. **Match schemas** - Input/output must match updated schemas
     * 3. **Use placeholder integration IDs** - Validation will show available integrations
     * 4. **Update dependencies** - Add `{ integrationId }` for any ctx.env calls
     * 5. **Test thoroughly** - Input/output are validated automatically
     * **Integration IDs:**
     * - Use placeholders like `i:slack` if you don't know the ID
     * - Validation errors will list all available integrations
     * - Copy the correct ID from the error message
     * **HTTP Requests:**
     * - `fetch` is NOT available in this environment
     * - To make HTTP requests, use the `i:http` integration with the `HTTP_FETCH` tool
     * - Example: `await ctx.env['i:http'].HTTP_FETCH({ url: '...', method: 'GET' })`
     * - Remember to add `{ integrationId: 'i:http' }` to dependencies
     */
    DECO_RESOURCE_TOOL_UPDATE: (
      input: DECO_RESOURCE_TOOL_UPDATEInput,
    ) => Promise<DECO_RESOURCE_TOOL_UPDATEOutput>;
    /**
     * Create a new view with React code.
     * ## View Structure
     * Views consist of:
     * - **name**: A clear, descriptive title for the view
     * - **description** (optional): A brief summary of the view's purpose
     * - **code**: React component code that defines the App component
     * - **icon** (optional): URL to an icon image for the view
     * - **tags** (optional): Array of strings for categorization
     * - **importmap** (optional): Custom import map for additional modules (defaults to React 19.2.0)
     * ## React Component Guidelines
     * **You only need to write the React component code. The system provides:**
     * - ✅ React-compatible runtime with automatic JSX transform (no `import React` needed)
     * - ✅ Tailwind CSS v4 design tokens (already available)
     * - ✅ Global `callTool({ toolName, input })` function (supports regular and resource tools - always available)
     * - ✅ Import maps for React modules
     * **Your code must define an App component and import React hooks:**
     * ```jsx
     * import { useState } from 'react';
     * export const App = () => {
     * const [data, setData] = useState(null);
     * const [loading, setLoading] = useState(false);
     * const fetchData = async () => {
     * setLoading(true);
     * try {
     * const result = await callTool({
     * toolName: 'INTEGRATIONS_LIST',
     * input: {}
     * });
     * setData(result);
     * } catch (error) {
     * console.error(error);
     * } finally {
     * setLoading(false);
     * }
     * };
     * return (
     * <div className="p-6">
     * <h1 className="text-2xl font-bold mb-4">My View</h1>
     * <button
     * onClick={fetchData}
     * className="bg-blue-500 text-white px-4 py-2 rounded hover:bg-blue-600"
     * >
     * Load Data
     * </button>
     * {loading && <p className="mt-4">Loading...</p>}
     * {data && <pre className="mt-4 p-4 bg-gray-100 rounded">{JSON.stringify(data, null, 2)}</pre>}
     * </div>
     * );
     * };
     * ```
     * ## Available Imports
     * Import React hooks and utilities from 'react':
     * ```jsx
     * import { useState, useEffect, useCallback, useMemo, useRef, useContext, createContext } from 'react';
     * ```
     * The following modules are available via import maps by default:
     * - `react` - React 19.2.0
     * - `react-dom` - React DOM 19.2.0
     * - `react-dom/client` - React DOM client APIs
     * ## Custom Import Maps (Advanced)
     * You can optionally provide a custom `importmap` to add additional libraries:
     * ```json
     * {
     * "importmap": {
     * "lodash": "https://esm.sh/lodash@4.17.21",
     * "date-fns": "https://esm.sh/date-fns@3.0.0"
     * }
     * }
     * ```
     * Then use these libraries in your component:
     * ```jsx
     * import { useState } from 'react';
     * import { groupBy } from 'lodash';
     * import { format } from 'date-fns';
     * export const App = () => {
     * // Use imported libraries
     * const formattedDate = format(new Date(), 'yyyy-MM-dd');
     * // ...
     * };
     * ```
     * **Note:** The default React imports are always available and will be merged with your custom imports.
     * ## Calling Tools
     * Use the global `callTool()` function to invoke any tool. This function is **always available** and doesn't need to be imported.
     * ### API Signature
     * ```typescript
     * callTool(params: {
     * toolName: string;  // Required: Tool name or resource URI
     * input: object;     // Required: Parameters for the tool (use {} if none needed)
     * }): Promise<any>
     * ```
     * ### Tool Types
     * Both types of tools are called the same way, but serve different purposes:
     * **Regular Tools** - Standard workspace tools (most common):
     * - Use the tool name directly (e.g., `"INTEGRATIONS_LIST"`)
     * - Workspace-specific tools from installed integrations
     * - Most integration tools fall into this category
     * **Resource Tools** - Tools that operate on resources (advanced):
     * - Use a resource URI starting with `rsc://` (e.g., `"rsc://tools-management/tool/TOOL_SEARCH"`)
     * - Dynamic tools that work with workspace resources
     * - Used for CRUD operations on resources like tools, workflows, documents, etc.
     * ### Usage Examples
     * **Regular tool call (most common):**
     * ```jsx
     * // Call a regular workspace tool
     * const integrations = await callTool({
     * toolName: 'INTEGRATIONS_LIST',
     * input: {}  // Empty object when tool requires no parameters
     * });
     * ```
     * **Regular tool with parameters:**
     * ```jsx
     * const user = await callTool({
     * toolName: 'USER_GET',
     * input: {
     * userId: '123',
     * includeProfile: true
     * }
     * });
     * ```
     * **Resource tool call (advanced):**
     * ```jsx
     * // Call a resource tool using URI
     * const tools = await callTool({
     * toolName: 'rsc://tools-management/tool/TOOL_SEARCH',
     * input: { query: 'database' }
     * });
     * ```
     * **With error handling:**
     * ```jsx
     * try {
     * const result = await callTool({
     * toolName: 'DATA_PROCESS',
     * input: { data: myData }
     * });
     * console.log('Success:', result);
     * } catch (error) {
     * console.error('Tool call failed:', error.message);
     * }
     * ```
     * ### Important Notes
     * - Both `toolName` and `input` are **required** parameters
     * - `toolName` must be a string:
     * - **Regular tools**: Use the tool name directly (e.g., `"INTEGRATIONS_LIST"`)
     * - **Resource tools**: Use a URI starting with `rsc://` (e.g., `"rsc://tools-management/tool/TOOL_SEARCH"`)
     * - `input` must be an object (not an array). Use `{}` if the tool needs no parameters
     * - Both regular and resource tools are called the same way - the API handles routing automatically
     * - The function returns a Promise that resolves with the tool's result
     * - Errors are thrown if parameters are invalid or if the API call fails
     * **For complete tool calling documentation, refer to the TOOL_CALL.md guide.**
     * ## Styling with Tailwind CSS v4
     * Use Tailwind utility classes directly in your JSX:
     * ```jsx
     * <div className="flex items-center gap-4 p-6 bg-white rounded-lg shadow-md">
     * <h2 className="text-xl font-semibold text-gray-800">Hello World</h2>
     * <button className="px-4 py-2 bg-blue-500 text-white rounded hover:bg-blue-600 transition">
     * Click me
     * </button>
     * </div>
     * ```
     * ## Best Practices
     * 1. **Import hooks** - Always import React hooks you need: `import { useState, useEffect } from 'react'`
     * 2. **Define App component** - Always define `export const App = () => { ... }`
     * 3. **Use Tailwind classes** - Leverage Tailwind CSS for styling instead of custom CSS
     * 4. **Handle loading states** - Show feedback when calling tools
     * 5. **Error handling** - Use try/catch when calling tools
     * 6. **Clear naming** - Make view titles descriptive and searchable
     * 7. **Add descriptions** - Help others understand the view's purpose
     * 8. **Tag appropriately** - Use tags for easier discovery and organization
     * 9. **Keep it simple** - Focus on the component logic, not boilerplate
     * ## Common Use Cases
     * **Dashboard View:**
     * ```jsx
     * import { useState, useEffect } from 'react';
     * export const App = () => {
     * const [metrics, setMetrics] = useState(null);
     * useEffect(() => {
     * const loadMetrics = async () => {
     * const data = await callTool({
     * toolName: 'GET_METRICS',
     * input: {}
     * });
     * setMetrics(data);
     * };
     * loadMetrics();
     * }, []);
     * return (
     * <div className="p-6 space-y-4">
     * <h1 className="text-3xl font-bold">Dashboard</h1>
     * <div className="grid grid-cols-3 gap-4">
     * {metrics?.map((metric, i) => (
     * <div key={i} className="p-4 bg-white rounded shadow">
     * <div className="text-2xl font-bold">{metric.value}</div>
     * <div className="text-gray-600">{metric.label}</div>
     * </div>
     * ))}
     * </div>
     * </div>
     * );
     * };
     * ```
     * **Interactive Form:**
     * ```jsx
     * import { useState } from 'react';
     * export const App = () => {
     * const [formData, setFormData] = useState({ name: '', email: '' });
     * const [result, setResult] = useState(null);
     * const handleSubmit = async (e) => {
     * e.preventDefault();
     * const res = await callTool({
     * toolName: 'SUBMIT_FORM',
     * input: formData
     * });
     * setResult(res);
     * };
     * return (
     * <div className="p-6 max-w-md">
     * <form onSubmit={handleSubmit} className="space-y-4">
     * <input
     * type="text"
     * value={formData.name}
     * onChange={(e) => setFormData({...formData, name: e.target.value})}
     * className="w-full px-4 py-2 border rounded"
     * placeholder="Name"
     * />
     * <input
     * type="email"
     * value={formData.email}
     * onChange={(e) => setFormData({...formData, email: e.target.value})}
     * className="w-full px-4 py-2 border rounded"
     * placeholder="Email"
     * />
     * <button
     * type="submit"
     * className="w-full px-4 py-2 bg-blue-500 text-white rounded hover:bg-blue-600"
     * >
     * Submit
     * </button>
     * </form>
     * {result && <div className="mt-4 p-4 bg-green-100 rounded">{JSON.stringify(result)}</div>}
     * </div>
     * );
     * };
     * ```
     */
    DECO_RESOURCE_VIEW_CREATE: (
      input: DECO_RESOURCE_VIEW_CREATEInput,
    ) => Promise<DECO_RESOURCE_VIEW_CREATEOutput>;
    /**
     * Delete a view from the workspace.
     * This operation permanently removes the view file from the DECONFIG storage.
     * Use this to clean up obsolete, duplicate, or unwanted views.
     * Warning: This action cannot be undone. The view will be permanently removed
     * from the workspace. Make sure you have a backup if needed.
     */
    DECO_RESOURCE_VIEW_DELETE: (
      input: DECO_RESOURCE_VIEW_DELETEInput,
    ) => Promise<DECO_RESOURCE_VIEW_DELETEOutput>;
    /**
     * Read a view's content and metadata.
     * Returns:
     * - View metadata (name, description, icon, tags)
     * - React component code (code field)
     * - Creation and modification timestamps
     * The code contains only the React component definition (e.g., `export const App = () => { ... }`).
     * The frontend will automatically wrap this code in a complete HTML template with:
     * - React-compatible runtime with automatic JSX transform
     * - Tailwind CSS v4 design tokens
     * - Global `callTool(params)` function for invoking tools
     * - Takes an object with `toolName` (string) and `input` (object) properties
     * - Supports both regular tools (e.g., `"INTEGRATIONS_LIST"`) and resource tools (URIs like `"rsc://integration/tool/NAME"`)
     * - Both types are called the same way - the API handles routing
     * - Example: `await callTool({ toolName: 'INTEGRATIONS_LIST', input: {} })`
     * Security Notes:
     * - Views are rendered in isolated iframes with sandbox attributes
     * - External resources are loaded from trusted CDNs
     * - Component code is validated before execution
     */
    DECO_RESOURCE_VIEW_READ: (
      input: DECO_RESOURCE_VIEW_READInput,
    ) => Promise<DECO_RESOURCE_VIEW_READOutput>;
    /**
     * Search views in the workspace.
     * This operation allows you to find views by name, description, or tags.
     * Views are HTML-based UI components that can be rendered in iframes to create
     * custom interfaces, dashboards, reports, or any other web-based visualization.
     * Use this to discover existing views before creating new ones or to find views
     * for reading or modification.
     */
    DECO_RESOURCE_VIEW_SEARCH: (
      input: DECO_RESOURCE_VIEW_SEARCHInput,
    ) => Promise<DECO_RESOURCE_VIEW_SEARCHOutput>;
    /**
     * Update a view's content or metadata.
     * You can update any of the following:
     * - **name**: Change the view title
     * - **description**: Update the view's summary
     * - **code**: Modify the React component code
     * - **icon**: Change the icon URL
     * - **tags**: Add, remove, or change tags
     * - **importmap**: Add or modify custom module imports
     * ## Update Guidelines
     * 1. **Preserve imports** - Ensure necessary React hooks are imported from 'react'
     * 2. **Preserve App component** - Always keep the `export const App = () => { ... }` definition
     * 3. **Update incrementally** - Make focused changes rather than rewriting everything
     * 4. **Test changes** - Verify the component renders correctly after updates
     * 5. **Use Tailwind classes** - Leverage Tailwind CSS for styling
     * 6. **Manage tags thoughtfully** - Add relevant tags, remove outdated ones
     * ## Common Update Patterns
     * **Updating content:**
     * - Modify JSX structure and layout
     * - Add new sections or UI elements
     * - Update data visualizations
     * - Fix styling with Tailwind classes
     * **Adding functionality:**
     * - Import new React hooks if needed: `import { useState, useEffect, ... } from 'react'`
     * - Include new state and effects
     * - Add event handlers and interactivity
     * - Integrate tool calls with `callTool({ toolName: 'TOOL_NAME', input: {} })`
     * - Enhance user interactions
     * **Improving design:**
     * - Update Tailwind utility classes
     * - Modernize component layout
     * - Improve responsiveness with Tailwind breakpoints
     * - Optimize rendering performance
     */
    DECO_RESOURCE_VIEW_UPDATE: (
      input: DECO_RESOURCE_VIEW_UPDATEInput,
    ) => Promise<DECO_RESOURCE_VIEW_UPDATEOutput>;
    /**
     * Create a workflow with sequential code steps that can call integration tools.
     * ## Execution Pattern
     * Workflows execute code steps sequentially where **each step receives the previous step's output as input**:
     * ```
     * Input → Step 1 (code) → Step 2 (code) → Step 3 (code) → Output
     * ```
     * **Key Rules:**
     * 1. **All steps are code steps** - Each step is an ES module exporting an async function
     * 2. **Each step receives resolved input** - The input parameter contains values with @refs already resolved
     * 3. **Steps call tools via ctx.env** - Use bracket notation to access integration tools
     * 4. **Return data for next step** - Each step's return value becomes the next step's input
     * ## Code Step Execute Function
     * Code steps export a default async function with signature `(input, ctx)`:
     * ```javascript
     * export default async function(input, ctx) {
     * // input: Object with all @refs already resolved to actual values
     * // ctx.env: Object to access integration tools
     * const cityName = input.cityName; // Could be from @ref to previous step
     * // ALWAYS wrap tool calls in try/catch
     * try {
     * const result = await ctx.env['i:workspace-management'].AI_GENERATE_OBJECT({
     * model: 'anthropic:claude-sonnet-4-5',
     * messages: [{ role: 'user', content: `Generate poem about ${cityName}` }],
     * schema: { type: 'object', properties: { poem: { type: 'string' } } },
     * temperature: 0.7
     * });
     * // CRITICAL: Return ALL properties from outputSchema
     * // Check actual tool response structure - don't assume property names!
     * return {
     * poem: result.object?.poem || '',
     * city: cityName
     * };
     * } catch (error) {
     * // On error, return ALL outputSchema properties with safe defaults
     * return {
     * poem: '',
     * city: cityName,
     * error: String(error)
     * };
     * }
     * }
     * ```
     * **Important Rules:**
     * 1. **Function signature is `(input, ctx)`** - Input is first parameter, NOT `(ctx)` alone
     * 2. **Return value MUST match outputSchema** - Include ALL properties, even if null/empty/error
     * 3. **Always use try/catch** - Return safe defaults for all required properties on error
     * 4. **Check tool response structure** - Use optional chaining (`result?.property`) and fallbacks
     * ## Step Structure
     * Each step has this structure:
     * ```json
     * {
     * "def": {
     * "name": "generate-poem",
     * "description": "Generate a poem about a city using AI",
     * "execute": "export default async function(input, ctx) { ... }",
     * "inputSchema": {
     * "type": "object",
     * "properties": {
     * "cityName": { "type": "string", "description": "Name of the city" }
     * },
     * "required": ["cityName"]
     * },
     * "outputSchema": {
     * "type": "object",
     * "properties": {
     * "poem": { "type": "string" }
     * }
     * },
     * "dependencies": [{ "integrationId": "i:workspace-management" }]
     * },
     * "input": {
     * "cityName": "@previous-step.cityName"
     * }
     * }
     * ```
     * ## @Reference Resolution
     * Use @refs in the `input` field to reference previous steps or workflow input:
     * **@refs are resolved BEFORE your function executes:**
     * - `@input.fieldName` - Reference workflow input field
     * - `@stepId.fieldName` or `@stepId.output.fieldName` - Reference previous step output
     * - By the time your function runs, all @refs are replaced with actual values
     * - You access these resolved values directly from the `input` parameter
     * **Example:**
     * ```json
     * {
     * "def": {
     * "name": "step-2",
     * "execute": "export default async function(input, ctx) { return { result: input.poem.length }; }"
     * },
     * "input": {
     * "poem": "@step-1.poem"
     * }
     * }
     * ```
     * When step-2 executes, `input.poem` already contains the actual poem string from step-1.
     * ## Common @Reference Errors
     * **Error: "Path not found in step result"**
     * This happens when your @ref points to a property that doesn't exist in the previous step's output.
     * **Example Problem:**
     * ```json
     * // Step 1 outputSchema says it returns { searchResult, originalQuery }
     * "outputSchema": {
     * "properties": {
     * "searchResult": { "type": "string" },
     * "originalQuery": { "type": "string" }
     * }
     * }
     * // But step 1 execute code only returns { originalQuery }
     * "execute": "... return { originalQuery: input.query };"
     * // Step 2 tries to reference the missing field
     * "input": { "searchResult": "@step-1.searchResult" }  // ❌ FAILS!
     * ```
     * **Solution:**
     * - Make sure your return statement includes ALL properties from outputSchema
     * - Use optional chaining and fallbacks: `result?.content || ''`
     * - Add try/catch to return safe defaults for all properties
     * ```javascript
     * // ✅ CORRECT: Returns ALL outputSchema properties
     * return {
     * searchResult: result?.content || 'No result',
     * originalQuery: input.query
     * };
     * ```
     * ## Integration Tool Calls
     * **Built-in Tools:**
     * - Use `ctx.env['i:workspace-management']` for built-in workspace tools
     * - Available tools: `AI_GENERATE_OBJECT`, `DATABASES_RUN_SQL`, `KNOWLEDGE_BASE_SEARCH`
     * - Always add to dependencies: `[{ "integrationId": "i:workspace-management" }]`
     * **HTTP Requests:**
     * - `fetch` is NOT available in this environment
     * - Use the `i:http` integration with the `HTTP_FETCH` tool
     * - Example: `await ctx.env['i:http'].HTTP_FETCH({ url: '...', method: 'GET' })`
     * - Remember to add `{ integrationId: 'i:http' }` to dependencies
     * **Integration IDs:**
     * - Use exact integration IDs like `i:workspace-management`, `i:http`
     * - Validation errors will show available integrations if an ID doesn't exist
     * - Always use bracket notation: `ctx.env['integration-id']`
     * ## Best Practices
     * 1. **Function signature is (input, ctx)** - Input is first parameter, already resolved
     * 2. **Define complete schemas** - Both inputSchema and outputSchema with types and descriptions
     * 3. **Use @refs in step.input field** - Not in the execute code
     * 4. **Keep steps focused** - Each step should do one clear thing
     * 5. **Use stopAfter parameter** to test steps incrementally
     * 6. **CRITICAL: Return value MUST match outputSchema exactly** - Include ALL properties defined in outputSchema, even if null/empty
     * 7. **Wrap tool calls in try/catch** - Always return an object with ALL outputSchema properties, use defaults on error
     */
    DECO_RESOURCE_WORKFLOW_CREATE: (
      input: DECO_RESOURCE_WORKFLOW_CREATEInput,
    ) => Promise<DECO_RESOURCE_WORKFLOW_CREATEOutput>;
    /**
     * Delete a workflow from the workspace.
     * This will permanently remove the workflow file from the DECONFIG storage.
     * Use with caution as this action cannot be undone.
     */
    DECO_RESOURCE_WORKFLOW_DELETE: (
      input: DECO_RESOURCE_WORKFLOW_DELETEInput,
    ) => Promise<DECO_RESOURCE_WORKFLOW_DELETEOutput>;
    /**
     * Read a specific workflow by its Resources 2.0 URI.
     * Returns the complete workflow definition including:
     * - Workflow metadata (title, description, status, tags, etc.)
     * - Workflow definition with input/output schemas
     * - Step definitions (code steps with execute functions, schemas, and @refs)
     * - Execution statistics and timestamps
     */
    DECO_RESOURCE_WORKFLOW_READ: (
      input: DECO_RESOURCE_WORKFLOW_READInput,
    ) => Promise<DECO_RESOURCE_WORKFLOW_READOutput>;
    /**
     * Read the status and results of a workflow run using its Resources 2.0 URI.
     * ## Overview
     * This tool retrieves comprehensive information about a workflow execution, including real-time status, step results, logs, and timing information. Use this after starting a workflow with DECO_WORKFLOW_START to monitor progress and retrieve results.
     * ## Input
     * - **uri**: The Resources 2.0 URI of the workflow run (format: rsc://i:workflows-management/workflow_run/{runId})
     * - This URI is returned by DECO_WORKFLOW_START when you start a workflow
     * - You can also search for workflow runs using DECO_RESOURCE_WORKFLOW_RUN_SEARCH
     * ## Return Value
     * Returns a workflow_run resource object with:
     * ### Core Fields
     * - **status**: Current execution status ("pending", "running", "completed", "failed", "errored")
     * - **runId**: Unique identifier for this execution
     * - **workflowURI**: The URI of the workflow definition that was executed
     * ### Execution Details
     * - **currentStep**: Name of the step currently executing (if status is "running")
     * - **stepResults**: Object mapping step names to their output values (for completed steps)
     * - **finalResult**: The final workflow output (if status is "completed")
     * - **partialResult**: Intermediate results from completed steps (if still running)
     * ### Error Information
     * - **error**: Error message and details (if status is "failed" or "errored")
     * - **logs**: Array of log entries from step execution, including errors and warnings
     * ### Timing
     * - **startTime**: Unix timestamp when the workflow started
     * - **endTime**: Unix timestamp when the workflow finished (if completed/failed)
     * - **created_at**: ISO 8601 timestamp when the run was created
     * - **updated_at**: ISO 8601 timestamp of the last status update
     * ### Raw Data
     * - **workflowStatus**: Complete raw workflow status from Cloudflare Workflows (for advanced use cases)
     * ## Usage Pattern
     * ```javascript
     * // 1. Start a workflow
     * const { uri } = await DECO_WORKFLOW_START({
     * uri: "rsc://workflow/my-workflow",
     * input: { userId: "123" }
     * });
     * // 2. Monitor execution
     * const run = await DECO_RESOURCE_WORKFLOW_RUN_READ({ uri });
     * console.log(run.data.status); // "running"
     * console.log(run.data.currentStep); // "step-2-process-data"
     * // 3. Poll until complete
     * while (run.data.status === "running" || run.data.status === "pending") {
     * await sleep(2000);
     * run = await DECO_RESOURCE_WORKFLOW_RUN_READ({ uri });
     * }
     * // 4. Get results
     * if (run.data.status === "completed") {
     * console.log(run.data.finalResult);
     * } else {
     * console.error(run.data.error);
     * console.log(run.data.logs);
     * }
     * ```
     * ## Common Use Cases
     * - **Monitor Progress**: Poll this tool to track workflow execution in real-time
     * - **Retrieve Results**: Get the final output once a workflow completes
     * - **Debug Failures**: Access error messages and logs when workflows fail
     * - **Inspect Steps**: View intermediate results from each completed step
     * - **Resume Workflows**: Use partialResult to continue from a checkpoint
     */
    DECO_RESOURCE_WORKFLOW_RUN_READ: (
      input: DECO_RESOURCE_WORKFLOW_RUN_READInput,
    ) => Promise<DECO_RESOURCE_WORKFLOW_RUN_READOutput>;
    /**
     * Search workflow_run resources
     */
    DECO_RESOURCE_WORKFLOW_RUN_SEARCH: (
      input: DECO_RESOURCE_WORKFLOW_RUN_SEARCHInput,
    ) => Promise<DECO_RESOURCE_WORKFLOW_RUN_SEARCHOutput>;
    /**
     * Search workflows in the workspace.
     * Supports filtering by:
     * - Workflow title and description
     * - Workflow status (draft, active, inactive)
     * - Workflow tags and categories
     * - Author and version information
     * Use the 'term' parameter for text search across title, description, and tags.
     * Use the 'filters' parameter for structured filtering by status, category, etc.
     */
    DECO_RESOURCE_WORKFLOW_SEARCH: (
      input: DECO_RESOURCE_WORKFLOW_SEARCHInput,
    ) => Promise<DECO_RESOURCE_WORKFLOW_SEARCHOutput>;
    /**
     * Update a workflow while maintaining sequential code step execution.
     * ## Execution Pattern Reminder
     * ```
     * Input → Step 1 (code) → Step 2 (code) → Step 3 (code) → Output
     * ```
     * **Key Rules:**
     * 1. **All steps are code steps** - Each step exports async function with `(input, ctx)` signature
     * 2. **Each step receives previous step's output as input** - @refs are resolved before execution
     * 3. **Steps call tools via ctx.env** - Integration tools accessed with bracket notation
     * 4. **Return data matching outputSchema** - Each step's return becomes next step's input
     * ## Code Step Execute API
     * ```javascript
     * export default async function(input, ctx) {
     * // input: Already has @refs resolved - access fields directly
     * const cityName = input.cityName;
     * // ALWAYS wrap tool calls in try/catch
     * try {
     * const toolResult = await ctx.env['i:workspace-management'].AI_GENERATE_OBJECT({
     * model: 'anthropic:claude-sonnet-4-5',
     * messages: [{ role: 'user', content: 'Generate poem' }],
     * schema: { type: 'object', properties: { poem: { type: 'string' } } },
     * temperature: 0.7
     * });
     * // CRITICAL: Return ALL properties from outputSchema
     * return {
     * poem: toolResult.object?.poem || '',
     * city: cityName
     * };
     * } catch (error) {
     * // On error, return ALL outputSchema properties with safe defaults
     * return {
     * poem: '',
     * city: cityName,
     * error: String(error)
     * };
     * }
     * }
     * ```
     * **Important Rules:**
     * 1. **Function signature is `(input, ctx)`** - Input is first parameter
     * 2. **Return value MUST match outputSchema** - Include ALL properties
     * 3. **Always use try/catch** - Return safe defaults on error
     * 4. **Use optional chaining** - Don't assume tool response structure
     * ## Update Guidelines
     * 1. **Use correct function signature** - `async function(input, ctx)` with input as first parameter
     * 2. **CRITICAL: Return ALL outputSchema properties** - Every property in outputSchema must be in the return statement
     * 3. **Match schemas** - Each step's outputSchema should match next step's inputSchema (or use @refs)
     * 4. **Update @refs in step.input** - Use `@stepId.fieldName` or `@input.fieldName` format
     * 5. **Update dependencies** - Add `{ integrationId }` to dependencies array if using ctx.env
     * 6. **Always use try/catch** - Return safe defaults for all properties on error
     * 7. **Test incrementally** - Use stopAfter to test each updated step
     * ## Common Patterns
     * **Adding a new step:**
     * - Define `def.execute` with `async function(input, ctx)` signature
     * - Define `def.inputSchema` and `def.outputSchema`
     * - Set `input` field with @refs to previous step: `{ "field": "@prevStepId.fieldName" }`
     * - Add dependencies if calling tools: `[{ "integrationId": "i:workspace-management" }]`
     * **Updating existing step:**
     * - Keep function signature as `(input, ctx)`
     * - Update @refs in step.input field (not in execute code)
     * - Update dependencies array if adding new tool calls
     * **HTTP Requests:**
     * - `fetch` is NOT available in this environment
     * - Use the `i:http` integration with the `HTTP_FETCH` tool
     * - Example: `await ctx.env['i:http'].HTTP_FETCH({ url: '...', method: 'GET' })`
     * - Remember to add `{ integrationId: 'i:http' }` to dependencies
     */
    DECO_RESOURCE_WORKFLOW_UPDATE: (
      input: DECO_RESOURCE_WORKFLOW_UPDATEInput,
    ) => Promise<DECO_RESOURCE_WORKFLOW_UPDATEOutput>;
    /**
     * Invoke a tool created with DECO_RESOURCE_TOOL_CREATE
     */
    DECO_TOOL_CALL_TOOL: (
      input: DECO_TOOL_CALL_TOOLInput,
    ) => Promise<DECO_TOOL_CALL_TOOLOutput>;
    /**
     * Invoke the tool passed as input
     */
    DECO_TOOL_RUN_TOOL: (
      input: DECO_TOOL_RUN_TOOLInput,
    ) => Promise<DECO_TOOL_RUN_TOOLOutput>;
    /**
     * Render document_detail view
     */
    DECO_VIEW_RENDER_DOCUMENT_DETAIL: (
      input: DECO_VIEW_RENDER_DOCUMENT_DETAILInput,
    ) => Promise<DECO_VIEW_RENDER_DOCUMENT_DETAILOutput>;
    /**
     * Render tool_detail view
     */
    DECO_VIEW_RENDER_TOOL_DETAIL: (
      input: DECO_VIEW_RENDER_TOOL_DETAILInput,
    ) => Promise<DECO_VIEW_RENDER_TOOL_DETAILOutput>;
    /**
     * Render view_detail view
     */
    DECO_VIEW_RENDER_VIEW_DETAIL: (
      input: DECO_VIEW_RENDER_VIEW_DETAILInput,
    ) => Promise<DECO_VIEW_RENDER_VIEW_DETAILOutput>;
    /**
     * Render workflow_detail view
     */
    DECO_VIEW_RENDER_WORKFLOW_DETAIL: (
      input: DECO_VIEW_RENDER_WORKFLOW_DETAILInput,
    ) => Promise<DECO_VIEW_RENDER_WORKFLOW_DETAILOutput>;
    /**
     * Render workflow_run view
     */
    DECO_VIEW_RENDER_WORKFLOW_RUN: (
      input: DECO_VIEW_RENDER_WORKFLOW_RUNInput,
    ) => Promise<DECO_VIEW_RENDER_WORKFLOW_RUNOutput>;
    /**
     * Execute a workflow by URI with optional partial execution and state injection.
     * ## Overview
     * This tool starts a workflow execution using a Resources 2.0 URI. Workflows are sequential automation processes consisting of code steps that execute in order. Each step receives the previous step's output as input (with @refs resolved), can call integration tools via ctx.env, and returns data for the next step. The workflow validates input against its schema and executes steps until completion or until stopped at a specified step.
     * ## Parameters
     * ### uri
     * The Resources 2.0 URI of the workflow to execute (e.g., rsc://workflow/my-workflow).
     * ### input
     * The input data passed to the workflow. This data:
     * - Will be validated against the workflow's defined input schema
     * - Is accessible to steps via @refs: `@input.fieldName` in step.input fields
     * - Becomes the input to the first step (or is used by steps that reference it with @refs)
     * ### stopAfter (Optional)
     * The name of the step where execution should halt. When specified:
     * - The workflow executes **up to and including** the named step
     * - Execution stops after the specified step completes
     * - Useful for debugging, testing individual steps, or partial workflow execution
     * ### state (Optional)
     * Pre-computed step results to inject into the workflow execution state. Format: `{ "step-name": STEP_RESULT }`
     * This allows you to:
     * - **Skip steps**: Provide expected outputs for steps you want to bypass
     * - **Resume workflows**: Continue from a specific point with known intermediate results
     * - **Test workflows**: Inject mock data to test specific scenarios
     * - **Debug workflows**: Isolate problems by providing known good inputs to later steps
     * ## Return Value
     * Returns an object with:
     * - `runId`: Unique identifier for tracking this workflow execution (legacy)
     * - `uri`: The Resources 2.0 URI of the workflow run (format: rsc://i:workflows-management/workflow_run/{runId})
     * - `error`: Error message if workflow failed to start (validation errors, missing workflow, etc.)
     * ## Monitoring Workflow Execution
     * After starting a workflow, use the returned `uri` with **DECO_RESOURCE_WORKFLOW_RUN_READ** to monitor progress and retrieve results:
     * - The workflow_run resource includes status, current step, step results, logs, and timing information
     * - For running workflows, call DECO_RESOURCE_WORKFLOW_RUN_READ repeatedly to poll for updates
     * - The resource automatically refreshes with the latest execution state
     */
    DECO_WORKFLOW_START: (
      input: DECO_WORKFLOW_STARTInput,
    ) => Promise<DECO_WORKFLOW_STARTOutput>;
    /**
     * Delete a branch and all its files. This operation cannot be undone.
     */
    DELETE_BRANCH: (input: DELETE_BRANCHInput) => Promise<DELETE_BRANCHOutput>;
    /**
     * Delete a file from a DECONFIG branch
     */
    DELETE_FILE: (input: DELETE_FILEInput) => Promise<DELETE_FILEOutput>;
    /**
     * Compare two branches and get the differences
     */
    DIFF_BRANCH: (input: DIFF_BRANCHInput) => Promise<DIFF_BRANCHOutput>;
    /**
     * Delete a file
     */
    FS_DELETE: (input: FS_DELETEInput) => Promise<FS_DELETEOutput>;
    /**
     * List files from a given bucket given a prefix
     */
    FS_LIST: (input: FS_LISTInput) => Promise<FS_LISTOutput>;
    /**
     * Get a secure temporary link to read a file
     */
    FS_READ: (input: FS_READInput) => Promise<FS_READOutput>;
    /**
     * Get metadata about a file
     */
    FS_READ_METADATA: (
      input: FS_READ_METADATAInput,
    ) => Promise<FS_READ_METADATAOutput>;
    /**
     * Get a secure temporary link to upload a file
     */
    FS_WRITE: (input: FS_WRITEInput) => Promise<FS_WRITEOutput>;
    /**
     * Get the agents usage for the current tenant's wallet
     */
    GET_AGENTS_USAGE: (
      input: GET_AGENTS_USAGEInput,
    ) => Promise<GET_AGENTS_USAGEOutput>;
    /**
     * Get the billing history for the current tenant's wallet
     */
    GET_BILLING_HISTORY: (
      input: GET_BILLING_HISTORYInput,
    ) => Promise<GET_BILLING_HISTORYOutput>;
    /**
     * Get the contracts commits for the current tenant's wallet
     */
    GET_CONTRACTS_COMMITS: (
      input: GET_CONTRACTS_COMMITSInput,
    ) => Promise<GET_CONTRACTS_COMMITSOutput>;
    /**
     * Get the threads usage for the current tenant's wallet
     */
    GET_THREADS_USAGE: (
      input: GET_THREADS_USAGEInput,
    ) => Promise<GET_THREADS_USAGEOutput>;
    /**
     * Get the wallet account for the current tenant
     */
    GET_WALLET_ACCOUNT: (
      input: GET_WALLET_ACCOUNTInput,
    ) => Promise<GET_WALLET_ACCOUNTOutput>;
    /**
     * Get the plan for the current tenant's workspace
     */
    GET_WORKSPACE_PLAN: (
      input: GET_WORKSPACE_PLANInput,
    ) => Promise<GET_WORKSPACE_PLANOutput>;
    /**
     * Delete an app and its worker
     */
    HOSTING_APP_DELETE: (
      input: HOSTING_APP_DELETEInput,
    ) => Promise<HOSTING_APP_DELETEOutput>;
    /**
     * Deploy multiple TypeScript files that use Wrangler for bundling and deployment to Cloudflare Workers. You must provide a package.json file with the necessary dependencies and a wrangler.toml file matching the Workers for Platforms format. Use 'main_module' instead of 'main', and define bindings using the [[bindings]] array, where each binding is a table specifying its type and properties. To add custom Deco bindings, set type = "MCP" in a binding entry (these will be filtered and handled automatically).
     * Set 'preview: true' to create a preview deployment that won't replace the production version. Preview deployments get their own unique URL but are not promoted to production routes.
     * Common patterns:
     * 1. Use a package.json file to manage dependencies:
     * // package.json
     * {
     * "name": "@deco/workers-example",
     * "private": true,
     * "version": "0.0.0",
     * "type": "module",
     * "scripts": {
     * "dev": "deco dev",
     * "gen": "deco gen > env.gen.ts",
     * "setup": "npm i -g deco-cli",
     * "deploy": "wrangler deploy --dry-run --outdir ./dist && deco deploy ./dist"
     * },
     * "dependencies": {
     * "@cloudflare/workers-types": "^4.20250617.0",
     * "@deco/mcp": "npm:@jsr/deco__mcp@^0.5.6",
     * "@deco/workers-runtime": "npm:@jsr/deco__workers-runtime@^0.4.0",
     * "@mastra/core": "0.12.1",
     * "zod": "^3.25.67"
     * },
     * "devDependencies": {
     * "wrangler": "^4.13.2"
     * },
     * "engines": {
     * "node": ">=20.0.0"
     * }
     * }
     * 2. Import dependencies directly in your files:
     * // main.ts
     * import { z } from "zod";
     * import { withRuntime } from "@deco/workers-runtime";
     * 3. Use wrangler.toml to configure your app:
     * // wrangler.toml
     * name = "app-slug"
     * compatibility_date = "2025-06-17"
     * main_module = "main.ts"
     * kv_namespaces = [
     * { binding = "TODO", id = "06779da6940b431db6e566b4846d64db" }
     * ]
     * routes = [
     * { pattern = "my.example.com", custom_domain = true }
     * ]
     * browser = { binding = "MYBROWSER" }
     * [triggers]
     * # Schedule cron triggers:
     * crons = [ "*\/3 * * * *", "0 15 1 * *", "59 23 LW * *" ]
     * # This is required when using the Workflow class
     * [[durable_objects.bindings]]
     * name = "DECO_CHAT_WORKFLOW_DO"
     * class_name = "Workflow"
     * [[durable_objects.bindings]]
     * name = "MY_DURABLE_OBJECT"
     * class_name = "MyDurableObject"
     * # This is required when using the Workflow class
     * [[migrations]]
     * tag = "v1"
     * new_classes = ["Workflow", "MyDurableObject"]
     * [ai]
     * binding = "AI"
     * [[queues.consumers]]
     * queue = "queues-web-crawler"
     * max_batch_timeout = 60
     * [[queues.producers]]
     * queue = "queues-web-crawler"
     * binding = "CRAWLER_QUEUE"
     * [[deco.bindings]]
     * type = "MCP"
     * name = "MY_BINDING"
     * value = "INTEGRATION_ID"
     * # You can add any supported binding type as per Workers for Platforms documentation.
     * 4. You should always surround the user fetch with the withRuntime function.
     * import { withRuntime } from "@deco/workers-runtime";
     * const { Workflow, ...workerAPIs } = withRuntime({
     * fetch: async (request: Request, env: any) => {
     * return new Response("Hello from Cloudflare Workers!");
     * }
     * })
     * export { Workflow };
     * export default workerAPIs;
     * You must use the Workers for Platforms TOML format for wrangler.toml. The bindings supports all standard binding types (ai, analytics_engine, assets, browser_rendering, d1, durable_object_namespace, hyperdrive, kv_namespace, mtls_certificate, plain_text, queue, r2_bucket, secret_text, service, tail_consumer, vectorize, version_metadata, etc). For Deco-specific bindings, use type = "MCP".
     * For routes, only custom domains are supported. The user must point their DNS to the script endpoint. $SCRIPT.deco.page using DNS-Only. The user needs to wait for the DNS to propagate before the app will be available.
     * Example of files deployment:
     * [
     * {
     * "path": "package.json",
     * "content": `{
     * "name": "@deco/workers-example",
     * "version": "0.0.0",
     * "type": "module",
     * "dependencies": {
     * "@cloudflare/workers-types": "^4.20250617.0",
     * "@deco/workers-runtime": "npm:@jsr/deco__workers-runtime@^0.2.18",
     * "@mastra/core": "0.12.1",
     * "zod": "^3.25.67"
     * },
     * "devDependencies": {
     * "wrangler": "^4.13.2"
     * },
     * "engines": {
     * "node": ">=20.0.0"
     * }
     * }`
     * },
     * {
     * "path": "main.ts",
     * "content": `
     * import { z } from "zod";
     * import { withRuntime } from "@deco/workers-runtime";
     * const { Workflow, ...workerAPIs } = withRuntime({
     * fetch: async (request: Request, env: any) => {
     * return new Response("Hello from Cloudflare Workers!");
     * }
     * })
     * export { Workflow };
     * export default workerAPIs;
     * `
     * },
     * {
     * "path": "wrangler.toml",
     * "content": `
     * name = "app-slug"
     * compatibility_date = "2025-06-17"
     * main_module = "main.ts"
     * kv_namespaces = [
     * { binding = "TODO", id = "06779da6940b431db6e566b4846d64db" }
     * ]
     * routes = [
     * { pattern = "my.example.com", custom_domain = true }
     * ]
     * browser = { binding = "MYBROWSER" }
     * [triggers]
     * # Schedule cron triggers:
     * crons = [ "*\/3 * * * *", "0 15 1 * *", "59 23 LW * *" ]
     * # This is required when using the Workflow class
     * [[durable_objects.bindings]]
     * name = "DECO_CHAT_WORKFLOW_DO"
     * class_name = "Workflow"
     * [[durable_objects.bindings]]
     * name = "MY_DURABLE_OBJECT"
     * class_name = "MyDurableObject"
     * # This is required when using the Workflow class
     * [[migrations]]
     * tag = "v1"
     * new_classes = ["Workflow", "MyDurableObject"]
     * [ai]
     * binding = "AI"
     * [[queues.consumers]]
     * queue = "queues-web-crawler"
     * max_batch_timeout = 60
     * [[queues.producers]]
     * queue = "queues-web-crawler"
     * binding = "CRAWLER_QUEUE"
     * [[deco.bindings]]
     * type = "MCP"
     * name = "MY_BINDING"
     * value = "INTEGRATION_ID"
     * `
     * }
     * ]
     * Important Notes:
     * - You can access the app workspace by accessing env.DECO_CHAT_WORKSPACE
     * - You can access the app script slug by accessing env.DECO_CHAT_APP_SLUG
     * - Token and workspace can be used to make authenticated requests to the Deco API under https://api.decocms.com
     * - Always use Cloudflare Workers syntax with export default and proper fetch handler signature
     * - When using template literals inside content strings, escape backticks with a backslash (\) or use string concatenation (+)
     * - You must include a package.json file with the @deco/workers-runtime dependency
     * - Dependencies are managed through npm packages in package.json, not npm: or jsr: specifiers
     * - Wrangler will handle the bundling process using the dependencies defined in package.json
     */
    HOSTING_APP_DEPLOY: (
      input: HOSTING_APP_DEPLOYInput,
    ) => Promise<HOSTING_APP_DEPLOYOutput>;
    /**
     * List all deployments for a specific app
     */
    HOSTING_APP_DEPLOYMENTS_LIST: (
      input: HOSTING_APP_DEPLOYMENTS_LISTInput,
    ) => Promise<HOSTING_APP_DEPLOYMENTS_LISTOutput>;
    /**
     * Get info/metadata for an app (including endpoint)
     */
    HOSTING_APP_INFO: (
      input: HOSTING_APP_INFOInput,
    ) => Promise<HOSTING_APP_INFOOutput>;
    /**
     * List all unique workflow names in the workspace
     */
    HOSTING_APP_WORKFLOWS_LIST_NAMES: (
      input: HOSTING_APP_WORKFLOWS_LIST_NAMESInput,
    ) => Promise<HOSTING_APP_WORKFLOWS_LIST_NAMESOutput>;
    /**
     * List workflow runs. If workflowName is provided, shows runs for that specific workflow. If not provided, shows recent runs from any workflow.
     */
    HOSTING_APP_WORKFLOWS_LIST_RUNS: (
      input: HOSTING_APP_WORKFLOWS_LIST_RUNSInput,
    ) => Promise<HOSTING_APP_WORKFLOWS_LIST_RUNSOutput>;
    /**
     * Get the status of a workflow instance
     */
    HOSTING_APP_WORKFLOWS_STATUS: (
      input: HOSTING_APP_WORKFLOWS_STATUSInput,
    ) => Promise<HOSTING_APP_WORKFLOWS_STATUSOutput>;
    /**
     * List all apps for the current tenant
     */
    HOSTING_APPS_LIST: (
      input: HOSTING_APPS_LISTInput,
    ) => Promise<HOSTING_APPS_LISTOutput>;
    /**
     * Promote a specific deployment to an existing route pattern and update routing cache
     */
    HOSTING_APPS_PROMOTE: (
      input: HOSTING_APPS_PROMOTEInput,
    ) => Promise<HOSTING_APPS_PROMOTEOutput>;
    /**
     * Call a given tool
     */
    INTEGRATIONS_CALL_TOOL: (
      input: INTEGRATIONS_CALL_TOOLInput,
    ) => Promise<INTEGRATIONS_CALL_TOOLOutput>;
    /**
     * Create a new integration
     */
    INTEGRATIONS_CREATE: (
      input: INTEGRATIONS_CREATEInput,
    ) => Promise<INTEGRATIONS_CREATEOutput>;
    /**
     * Delete an integration by id
     */
    INTEGRATIONS_DELETE: (
      input: INTEGRATIONS_DELETEInput,
    ) => Promise<INTEGRATIONS_DELETEOutput>;
    /**
     * Get an integration by id with tools
     */
    INTEGRATIONS_GET: (
      input: INTEGRATIONS_GETInput,
    ) => Promise<INTEGRATIONS_GETOutput>;
    /**
     * Get the API key for an integration
     */
    INTEGRATIONS_GET_API_KEY: (
      input: INTEGRATIONS_GET_API_KEYInput,
    ) => Promise<INTEGRATIONS_GET_API_KEYOutput>;
    /**
     * List all integrations with their tools
     */
    INTEGRATIONS_LIST: (
      input: INTEGRATIONS_LISTInput,
    ) => Promise<INTEGRATIONS_LISTOutput>;
    /**
     * Update an existing integration
     */
    INTEGRATIONS_UPDATE: (
      input: INTEGRATIONS_UPDATEInput,
    ) => Promise<INTEGRATIONS_UPDATEOutput>;
    /**
     * Add a file content into knowledge base
     */
    KNOWLEDGE_BASE_ADD_FILE: (
      input: KNOWLEDGE_BASE_ADD_FILEInput,
    ) => Promise<KNOWLEDGE_BASE_ADD_FILEOutput>;
    /**
     * Create a knowledge base
     */
    KNOWLEDGE_BASE_CREATE: (
      input: KNOWLEDGE_BASE_CREATEInput,
    ) => Promise<KNOWLEDGE_BASE_CREATEOutput>;
    /**
     * Delete a knowledge base
     */
    KNOWLEDGE_BASE_DELETE: (
      input: KNOWLEDGE_BASE_DELETEInput,
    ) => Promise<KNOWLEDGE_BASE_DELETEOutput>;
    /**
     * Delete a file from the knowledge base
     */
    KNOWLEDGE_BASE_DELETE_FILE: (
      input: KNOWLEDGE_BASE_DELETE_FILEInput,
    ) => Promise<KNOWLEDGE_BASE_DELETE_FILEOutput>;
    /**
     * Forget something
     */
    KNOWLEDGE_BASE_FORGET: (
      input: KNOWLEDGE_BASE_FORGETInput,
    ) => Promise<KNOWLEDGE_BASE_FORGETOutput>;
    /**
     * List all knowledge bases
     */
    KNOWLEDGE_BASE_LIST: (
      input: KNOWLEDGE_BASE_LISTInput,
    ) => Promise<KNOWLEDGE_BASE_LISTOutput>;
    /**
     * List all files in the knowledge base
     */
    KNOWLEDGE_BASE_LIST_FILES: (
      input: KNOWLEDGE_BASE_LIST_FILESInput,
    ) => Promise<KNOWLEDGE_BASE_LIST_FILESOutput>;
    /**
     * Remember something
     */
    KNOWLEDGE_BASE_REMEMBER: (
      input: KNOWLEDGE_BASE_REMEMBERInput,
    ) => Promise<KNOWLEDGE_BASE_REMEMBEROutput>;
    /**
     * Search the knowledge base
     */
    KNOWLEDGE_BASE_SEARCH: (
      input: KNOWLEDGE_BASE_SEARCHInput,
    ) => Promise<KNOWLEDGE_BASE_SEARCHOutput>;
    /**
     * List all branches in the current workspace
     */
    LIST_BRANCHES: (input: LIST_BRANCHESInput) => Promise<LIST_BRANCHESOutput>;
    /**
     * List files in a DECONFIG branch with optional prefix filtering and content inclusion
     */
    LIST_FILES: (input: LIST_FILESInput) => Promise<LIST_FILESOutput>;
    /**
     * Merge another branch into the current one with configurable strategy
     */
    MERGE_BRANCH: (input: MERGE_BRANCHInput) => Promise<MERGE_BRANCHOutput>;
    /**
     * Create a new model
     */
    MODELS_CREATE: (input: MODELS_CREATEInput) => Promise<MODELS_CREATEOutput>;
    /**
     * Delete a model by id
     */
    MODELS_DELETE: (input: MODELS_DELETEInput) => Promise<MODELS_DELETEOutput>;
    /**
     * Get a model by id
     */
    MODELS_GET: (input: MODELS_GETInput) => Promise<MODELS_GETOutput>;
    /**
     * List models for the current user
     */
    MODELS_LIST: (input: MODELS_LISTInput) => Promise<MODELS_LISTOutput>;
    /**
     * Update an existing model
     */
    MODELS_UPDATE: (input: MODELS_UPDATEInput) => Promise<MODELS_UPDATEOutput>;
    /**
     * Create an OAuth code for a given API key
     */
    OAUTH_CODE_CREATE: (
      input: OAUTH_CODE_CREATEInput,
    ) => Promise<OAUTH_CODE_CREATEOutput>;
    /**
     * Pre-authorize an amount of money for the current tenant's wallet
     */
    PRE_AUTHORIZE_AMOUNT: (
      input: PRE_AUTHORIZE_AMOUNTInput,
    ) => Promise<PRE_AUTHORIZE_AMOUNTOutput>;
    /**
     * Create a new prompt
     */
    PROMPTS_CREATE: (
      input: PROMPTS_CREATEInput,
    ) => Promise<PROMPTS_CREATEOutput>;
    /**
     * Delete a prompt by id
     */
    PROMPTS_DELETE: (
      input: PROMPTS_DELETEInput,
    ) => Promise<PROMPTS_DELETEOutput>;
    /**
     * Get a prompt by id
     */
    PROMPTS_GET: (input: PROMPTS_GETInput) => Promise<PROMPTS_GETOutput>;
    /**
     * Get the versions of a prompt
     */
    PROMPTS_GET_VERSIONS: (
      input: PROMPTS_GET_VERSIONSInput,
    ) => Promise<PROMPTS_GET_VERSIONSOutput>;
    /**
     * List prompts for the current workspace
     */
    PROMPTS_LIST: (input: PROMPTS_LISTInput) => Promise<PROMPTS_LISTOutput>;
    /**
     * Rename a prompt version
     */
    PROMPTS_RENAME_VERSION: (
      input: PROMPTS_RENAME_VERSIONInput,
    ) => Promise<PROMPTS_RENAME_VERSIONOutput>;
    /**
     * Update an existing prompt
     */
    PROMPTS_UPDATE: (
      input: PROMPTS_UPDATEInput,
    ) => Promise<PROMPTS_UPDATEOutput>;
    /**
     * Put a file in a DECONFIG branch (create or update) with optional conflict detection
     */
    PUT_FILE: (input: PUT_FILEInput) => Promise<PUT_FILEOutput>;
    /**
     * Read a file from a DECONFIG branch
     */
    READ_FILE: (input: READ_FILEInput) => Promise<READ_FILEOutput>;
    /**
     * Redeem a voucher for the current tenant's wallet
     */
    REDEEM_VOUCHER: (
      input: REDEEM_VOUCHERInput,
    ) => Promise<REDEEM_VOUCHEROutput>;
    /**
     * List all apps in the registry for the current workspace
     */
    REGISTRY_LIST_APPS: (
      input: REGISTRY_LIST_APPSInput,
    ) => Promise<REGISTRY_LIST_APPSOutput>;
    /**
     * List published apps by the current workspace
     */
    REGISTRY_LIST_PUBLISHED_APPS: (
      input: REGISTRY_LIST_PUBLISHED_APPSInput,
    ) => Promise<REGISTRY_LIST_PUBLISHED_APPSOutput>;
    /**
     * List all registry scopes
     */
    REGISTRY_LIST_SCOPES: (
      input: REGISTRY_LIST_SCOPESInput,
    ) => Promise<REGISTRY_LIST_SCOPESOutput>;
    /**
     * Publish an app to the registry (automatically claims scope on first use)
     */
    REGISTRY_PUBLISH_APP: (
      input: REGISTRY_PUBLISH_APPInput,
    ) => Promise<REGISTRY_PUBLISH_APPOutput>;
    /**
     * Invite users to join a team via email. When no specific roles are provided, use default role: { id: 1, name: 'owner' }
     */
    TEAM_MEMBERS_INVITE: (
      input: TEAM_MEMBERS_INVITEInput,
    ) => Promise<TEAM_MEMBERS_INVITEOutput>;
    /**
     * Add a custom view or resource to a team
     */
    TEAMS_ADD_VIEW: (
      input: TEAMS_ADD_VIEWInput,
    ) => Promise<TEAMS_ADD_VIEWOutput>;
    /**
     * Remove a custom view or resource from a team
     */
    TEAMS_REMOVE_VIEW: (
      input: TEAMS_REMOVE_VIEWInput,
    ) => Promise<TEAMS_REMOVE_VIEWOutput>;
    /**
     * Get a thread by thread id (without messages)
     */
    THREADS_GET: (input: THREADS_GETInput) => Promise<THREADS_GETOutput>;
    /**
     * Get only the messages for a thread by thread id
     */
    THREADS_GET_MESSAGES: (
      input: THREADS_GET_MESSAGESInput,
    ) => Promise<THREADS_GET_MESSAGESOutput>;
    /**
     * List all threads in a workspace with cursor-based pagination and filtering
     */
    THREADS_LIST: (input: THREADS_LISTInput) => Promise<THREADS_LISTOutput>;
    /**
     * Update a thread's metadata
     */
    THREADS_UPDATE_METADATA: (
      input: THREADS_UPDATE_METADATAInput,
    ) => Promise<THREADS_UPDATE_METADATAOutput>;
    /**
     * Update a thread's title
     */
    THREADS_UPDATE_TITLE: (
      input: THREADS_UPDATE_TITLEInput,
    ) => Promise<THREADS_UPDATE_TITLEOutput>;
    /**
     * Activate a trigger
     */
    TRIGGERS_ACTIVATE: (
      input: TRIGGERS_ACTIVATEInput,
    ) => Promise<TRIGGERS_ACTIVATEOutput>;
    /**
     * Create a trigger
     */
    TRIGGERS_CREATE: (
      input: TRIGGERS_CREATEInput,
    ) => Promise<TRIGGERS_CREATEOutput>;
    /**
     * Create a cron trigger
     */
    TRIGGERS_CREATE_CRON: (
      input: TRIGGERS_CREATE_CRONInput,
    ) => Promise<TRIGGERS_CREATE_CRONOutput>;
    /**
     * Create a webhook trigger
     */
    TRIGGERS_CREATE_WEBHOOK: (
      input: TRIGGERS_CREATE_WEBHOOKInput,
    ) => Promise<TRIGGERS_CREATE_WEBHOOKOutput>;
    /**
     * Deactivate a trigger
     */
    TRIGGERS_DEACTIVATE: (
      input: TRIGGERS_DEACTIVATEInput,
    ) => Promise<TRIGGERS_DEACTIVATEOutput>;
    /**
     * Delete a trigger
     */
    TRIGGERS_DELETE: (
      input: TRIGGERS_DELETEInput,
    ) => Promise<TRIGGERS_DELETEOutput>;
    /**
     * Get a trigger by ID
     */
    TRIGGERS_GET: (input: TRIGGERS_GETInput) => Promise<TRIGGERS_GETOutput>;
    /**
     * Get the webhook URL for a trigger
     */
    TRIGGERS_GET_WEBHOOK_URL: (
      input: TRIGGERS_GET_WEBHOOK_URLInput,
    ) => Promise<TRIGGERS_GET_WEBHOOK_URLOutput>;
    /**
     * List all triggers
     */
    TRIGGERS_LIST: (input: TRIGGERS_LISTInput) => Promise<TRIGGERS_LISTOutput>;
    /**
     * Update a trigger
     */
    TRIGGERS_UPDATE: (
      input: TRIGGERS_UPDATEInput,
    ) => Promise<TRIGGERS_UPDATEOutput>;
  }>;
  DECO_CHAT_API: Mcp<{
    /**
     * Make HTTP requests to any URL. Supports multiple HTTP methods (GET, POST, PUT, DELETE, PATCH, HEAD), custom headers, request body, and response parsing. Use this when you need to fetch data from external APIs or make HTTP calls that don't have a specific integration available. Supports both text and JSON response parsing.
     */
    HTTP_FETCH: (input: HTTP_FETCHInput) => Promise<HTTP_FETCHOutput>;
    /**
     * Call a given tool
     */
    INTEGRATIONS_CALL_TOOL: (
      input: INTEGRATIONS_CALL_TOOLInput,
    ) => Promise<INTEGRATIONS_CALL_TOOLOutput>;
    /**
     * List tools of a given integration
     */
    INTEGRATIONS_LIST_TOOLS: (
      input: INTEGRATIONS_LIST_TOOLSInput,
    ) => Promise<INTEGRATIONS_LIST_TOOLSOutput>;
    /**
     * List all team invites for the current logged in user
     */
    MY_INVITES_LIST: (
      input: MY_INVITES_LISTInput,
    ) => Promise<MY_INVITES_LISTOutput>;
    /**
     * Get the current user's profile
     */
    PROFILES_GET: (input: PROFILES_GETInput) => Promise<PROFILES_GETOutput>;
    /**
     * Update the current user's profile
     */
    PROFILES_UPDATE: (
      input: PROFILES_UPDATEInput,
    ) => Promise<PROFILES_UPDATEOutput>;
    /**
     * Register that the user accessed a project
     */
    PROJECT_ACTIVITY_REGISTER: (
      input: PROJECT_ACTIVITY_REGISTERInput,
    ) => Promise<PROJECT_ACTIVITY_REGISTEROutput>;
    /**
     * Create a new project in an organization
     */
    PROJECTS_CREATE: (
      input: PROJECTS_CREATEInput,
    ) => Promise<PROJECTS_CREATEOutput>;
    /**
     * Delete a project by id
     */
    PROJECTS_DELETE: (
      input: PROJECTS_DELETEInput,
    ) => Promise<PROJECTS_DELETEOutput>;
    /**
     * List projects for an organization
     */
    PROJECTS_LIST: (input: PROJECTS_LISTInput) => Promise<PROJECTS_LISTOutput>;
    /**
     * List recent projects for the current user based on activity
     */
    PROJECTS_RECENT: (
      input: PROJECTS_RECENTInput,
    ) => Promise<PROJECTS_RECENTOutput>;
    /**
     * Update an existing project's properties
     */
    PROJECTS_UPDATE: (
      input: PROJECTS_UPDATEInput,
    ) => Promise<PROJECTS_UPDATEOutput>;
    /**
     * Get an app from the registry
     */
    REGISTRY_GET_APP: (
      input: REGISTRY_GET_APPInput,
    ) => Promise<REGISTRY_GET_APPOutput>;
    /**
     * Accept a team invitation
     */
    TEAM_INVITE_ACCEPT: (
      input: TEAM_INVITE_ACCEPTInput,
    ) => Promise<TEAM_INVITE_ACCEPTOutput>;
    /**
     * Delete a team invitation
     */
    TEAM_INVITE_DELETE: (
      input: TEAM_INVITE_DELETEInput,
    ) => Promise<TEAM_INVITE_DELETEOutput>;
    /**
     * Register that the user accessed a team
     */
    TEAM_MEMBER_ACTIVITY_REGISTER: (
      input: TEAM_MEMBER_ACTIVITY_REGISTERInput,
    ) => Promise<TEAM_MEMBER_ACTIVITY_REGISTEROutput>;
    /**
     * Get all members of a team
     */
    TEAM_MEMBERS_GET: (
      input: TEAM_MEMBERS_GETInput,
    ) => Promise<TEAM_MEMBERS_GETOutput>;
    /**
     * Invite users to join a team via email. When no specific roles are provided, use default role: { id: 1, name: 'owner' }
     */
    TEAM_MEMBERS_INVITE: (
      input: TEAM_MEMBERS_INVITEInput,
    ) => Promise<TEAM_MEMBERS_INVITEOutput>;
    /**
     * Remove a member from a team
     */
    TEAM_MEMBERS_REMOVE: (
      input: TEAM_MEMBERS_REMOVEInput,
    ) => Promise<TEAM_MEMBERS_REMOVEOutput>;
    /**
     * Update a team member. Usefull for updating admin status.
     */
    TEAM_MEMBERS_UPDATE: (
      input: TEAM_MEMBERS_UPDATEInput,
    ) => Promise<TEAM_MEMBERS_UPDATEOutput>;
    /**
     * Update a member's role in a team
     */
    TEAM_MEMBERS_UPDATE_ROLE: (
      input: TEAM_MEMBERS_UPDATE_ROLEInput,
    ) => Promise<TEAM_MEMBERS_UPDATE_ROLEOutput>;
    /**
     * Report a bug or idea within a team/project context
     */
    TEAM_REPORT_ISSUE_CREATE: (
      input: TEAM_REPORT_ISSUE_CREATEInput,
    ) => Promise<TEAM_REPORT_ISSUE_CREATEOutput>;
    /**
     * Create a new team role with associated policies and permissions
     */
    TEAM_ROLE_CREATE: (
      input: TEAM_ROLE_CREATEInput,
    ) => Promise<TEAM_ROLE_CREATEOutput>;
    /**
     * Delete a team role and its associated policies (only team-specific roles)
     */
    TEAM_ROLE_DELETE: (
      input: TEAM_ROLE_DELETEInput,
    ) => Promise<TEAM_ROLE_DELETEOutput>;
    /**
     * Get detailed information about a specific team role
     */
    TEAM_ROLE_GET: (input: TEAM_ROLE_GETInput) => Promise<TEAM_ROLE_GETOutput>;
    /**
     * Update a team role and its associated policies
     */
    TEAM_ROLE_UPDATE: (
      input: TEAM_ROLE_UPDATEInput,
    ) => Promise<TEAM_ROLE_UPDATEOutput>;
    /**
     * Get all roles available for a team, including basic deco roles
     */
    TEAM_ROLES_LIST: (
      input: TEAM_ROLES_LISTInput,
    ) => Promise<TEAM_ROLES_LISTOutput>;
    /**
     * Create a new team
     */
    TEAMS_CREATE: (input: TEAMS_CREATEInput) => Promise<TEAMS_CREATEOutput>;
    /**
     * Delete a team by id
     */
    TEAMS_DELETE: (input: TEAMS_DELETEInput) => Promise<TEAMS_DELETEOutput>;
    /**
     * Get a team by slug
     */
    TEAMS_GET: (input: TEAMS_GETInput) => Promise<TEAMS_GETOutput>;
    /**
     * Get the theme for a workspace
     */
    TEAMS_GET_THEME: (
      input: TEAMS_GET_THEMEInput,
    ) => Promise<TEAMS_GET_THEMEOutput>;
    /**
     * List teams for the current user
     */
    TEAMS_LIST: (input: TEAMS_LISTInput) => Promise<TEAMS_LISTOutput>;
    /**
     * Update an existing team including theme customization
     */
    TEAMS_UPDATE: (input: TEAMS_UPDATEInput) => Promise<TEAMS_UPDATEOutput>;
  }>;
  SELF: Mcp<{
    /**
     * Add a comment to a GitHub issue.
     */
    ADD_ISSUE_COMMENT: (
      input: ADD_ISSUE_COMMENTInput,
    ) => Promise<ADD_ISSUE_COMMENTOutput>;
    /**
     * Add an issue or pull request to a GitHub Project V2 by its content ID (node ID).
     */
    ADD_ITEM_TO_PROJECT: (
      input: ADD_ITEM_TO_PROJECTInput,
    ) => Promise<ADD_ITEM_TO_PROJECTOutput>;
    /**
     * Add one or more labels to a GitHub issue by label node IDs.
     */
    ADD_LABELS_TO_ISSUE: (
      input: ADD_LABELS_TO_ISSUEInput,
    ) => Promise<ADD_LABELS_TO_ISSUEOutput>;
    /**
     * Add a GitHub Project V2 to the tracked list for monitoring. Prevents duplicates.
     */
    ADD_TRACKED_PROJECT: (
      input: ADD_TRACKED_PROJECTInput,
    ) => Promise<ADD_TRACKED_PROJECTOutput>;
    /**
     * Add a GitHub repository to the tracked list for monitoring. Prevents duplicates.
     */
    ADD_TRACKED_REPOSITORY: (
      input: ADD_TRACKED_REPOSITORYInput,
    ) => Promise<ADD_TRACKED_REPOSITORYOutput>;
    /**
     * Assign one or more users to a GitHub issue by user node IDs.
     */
    ASSIGN_ISSUE: (input: ASSIGN_ISSUEInput) => Promise<ASSIGN_ISSUEOutput>;
    /**
     * Close a GitHub issue with an optional state reason (completed or not_planned).
     */
    CLOSE_ISSUE: (input: CLOSE_ISSUEInput) => Promise<CLOSE_ISSUEOutput>;
    /**
     * Create a new GitHub issue with optional assignees, labels, and milestone.
     */
    CREATE_ISSUE: (input: CREATE_ISSUEInput) => Promise<CREATE_ISSUEOutput>;
    /**
     * Create a new GitHub Project V2 in an organization. Returns the created project details.
     */
    CREATE_PROJECT: (
      input: CREATE_PROJECTInput,
    ) => Promise<CREATE_PROJECTOutput>;
    /**
     * OAuth for Deco Chat
     */
    DECO_CHAT_OAUTH_START: (
      input: DECO_CHAT_OAUTH_STARTInput,
    ) => Promise<DECO_CHAT_OAUTH_STARTOutput>;
    /**
     * Validate the state of the OAuth flow
     */
    DECO_CHAT_STATE_VALIDATION: (
      input: DECO_CHAT_STATE_VALIDATIONInput,
    ) => Promise<DECO_CHAT_STATE_VALIDATIONOutput>;
    /**
     * List views exposed by this MCP
     */
    DECO_CHAT_VIEWS_LIST: (
      input: DECO_CHAT_VIEWS_LISTInput,
    ) => Promise<DECO_CHAT_VIEWS_LISTOutput>;
    /**
     * Delete a GitHub Project V2. This action is permanent and cannot be undone.
     */
    DELETE_PROJECT: (
      input: DELETE_PROJECTInput,
    ) => Promise<DELETE_PROJECTOutput>;
    /**
     * Get detailed information about a specific GitHub issue by its number.
     */
    GET_ISSUE: (input: GET_ISSUEInput) => Promise<GET_ISSUEOutput>;
    /**
     * Get detailed information about a specific GitHub Project V2, including its fields and items.
     */
    GET_PROJECT_DETAILS: (
      input: GET_PROJECT_DETAILSInput,
    ) => Promise<GET_PROJECT_DETAILSOutput>;
    /**
     * Get metadata about all available tools including their IDs, descriptions, and schemas. Useful for building tool introspection UIs.
     */
    GET_TOOL_METADATA: (
      input: GET_TOOL_METADATAInput,
    ) => Promise<GET_TOOL_METADATAOutput>;
    /**
     * Get the current logged in user
     */
    GET_USER: (input: GET_USERInput) => Promise<GET_USEROutput>;
    /**
     * List all GitHub Projects V2 for a given organization. Returns project IDs and titles.
     */
    LIST_GITHUB_PROJECTS: (
      input: LIST_GITHUB_PROJECTSInput,
    ) => Promise<LIST_GITHUB_PROJECTSOutput>;
    /**
     * List all comments on a GitHub issue.
     */
    LIST_ISSUE_COMMENTS: (
      input: LIST_ISSUE_COMMENTSInput,
    ) => Promise<LIST_ISSUE_COMMENTSOutput>;
    /**
     * List issues in a GitHub repository with optional filtering by state, labels, and assignee.
     */
    LIST_ISSUES: (input: LIST_ISSUESInput) => Promise<LIST_ISSUESOutput>;
    /**
     * List all items (issues and pull requests) in a GitHub Project V2.
     */
    LIST_PROJECT_ITEMS: (
      input: LIST_PROJECT_ITEMSInput,
    ) => Promise<LIST_PROJECT_ITEMSOutput>;
    /**
     * List all tracked GitHub Projects V2, optionally filtering to active only.
     */
    LIST_TRACKED_PROJECTS: (
      input: LIST_TRACKED_PROJECTSInput,
    ) => Promise<LIST_TRACKED_PROJECTSOutput>;
    /**
     * List all tracked GitHub repositories, optionally filtering to active only.
     */
    LIST_TRACKED_REPOSITORIES: (
      input: LIST_TRACKED_REPOSITORIESInput,
    ) => Promise<LIST_TRACKED_REPOSITORIESOutput>;
    /**
     * Remove one or more labels from a GitHub issue by label node IDs.
     */
    REMOVE_LABELS_FROM_ISSUE: (
      input: REMOVE_LABELS_FROM_ISSUEInput,
    ) => Promise<REMOVE_LABELS_FROM_ISSUEOutput>;
    /**
     * Remove a tracked GitHub Project V2 by marking it as inactive or deleting it.
     */
    REMOVE_TRACKED_PROJECT: (
      input: REMOVE_TRACKED_PROJECTInput,
    ) => Promise<REMOVE_TRACKED_PROJECTOutput>;
    /**
     * Remove a tracked GitHub repository by marking it as inactive or deleting it.
     */
    REMOVE_TRACKED_REPOSITORY: (
      input: REMOVE_TRACKED_REPOSITORYInput,
    ) => Promise<REMOVE_TRACKED_REPOSITORYOutput>;
    /**
     * Remove one or more assignees from a GitHub issue by user node IDs.
     */
    UNASSIGN_ISSUE: (
      input: UNASSIGN_ISSUEInput,
    ) => Promise<UNASSIGN_ISSUEOutput>;
    /**
     * Update an existing GitHub issue's title, body, or state (open/closed).
     */
    UPDATE_ISSUE: (input: UPDATE_ISSUEInput) => Promise<UPDATE_ISSUEOutput>;
    /**
     * Update a GitHub Project V2's title, description, or readme. Returns the updated project details.
     */
    UPDATE_PROJECT: (
      input: UPDATE_PROJECTInput,
    ) => Promise<UPDATE_PROJECTOutput>;
  }>;
}

export const Scopes = {
  AI_GATEWAY: {
    AI_GENERATE: "AI_GATEWAY::AI_GENERATE",
    AI_GENERATE_OBJECT: "AI_GATEWAY::AI_GENERATE_OBJECT",
  },
  DATABASE: {
    DATABASES_GET_META: "DATABASE::DATABASES_GET_META",
    DATABASES_MIGRATE: "DATABASE::DATABASES_MIGRATE",
    DATABASES_RECOVERY: "DATABASE::DATABASES_RECOVERY",
    DATABASES_RUN_SQL: "DATABASE::DATABASES_RUN_SQL",
    DECO_CHAT_VIEWS_LIST: "DATABASE::DECO_CHAT_VIEWS_LIST",
  },
};
